{"version":3,"sources":["styles/styled.ts","actions/schemas.ts","actions/albums.ts","actions/authorization.ts","utils/authorization.ts","actions/artists.ts","actions/browse.ts","actions/playlists.ts","reducers/createReducer.ts","reducers/tracks.ts","reducers/artists.ts","reducers/playlists.ts","actions/search.ts","reducers/albums.ts","reducers/authorization.ts","reducers/browse.ts","reducers/loading.ts","actions/player.ts","reducers/player.ts","reducers/search.ts","actions/userProfile.ts","reducers/userProfile.ts","reducers/index.ts","styles/effects.ts","components/core/ButtonBase.tsx","components/core/Button.tsx","components/core/Heading.tsx","components/core/Icon.tsx","components/core/Image.tsx","components/core/RoundButton.tsx","components/core/Text.tsx","components/core/ToggleButton.tsx","components/layout/Title.tsx","components/layout/User.tsx","components/layout/Header.tsx","components/layout/Menu.tsx","utils/index.ts","components/player/ArtistList.tsx","components/player/TrackInfos.tsx","components/player/Audio.tsx","components/player/Controls.tsx","components/player/Slider.tsx","components/player/Playback.tsx","components/player/Volume.tsx","components/player/Player.tsx","components/DefaultRoute.tsx","components/PrivateRoute.tsx","components/layout/Login.tsx","components/covers/Covers.tsx","components/covers/CategoryCovers.tsx","components/withLoader.tsx","components/browse/Categories.tsx","components/covers/AlbumCovers.tsx","components/browse/NewReleases.tsx","components/covers/PlaylistCovers.tsx","components/browse/FeaturedPlaylists.tsx","components/browse/Browse.tsx","components/browse/CategoryPlaylists.tsx","components/covers/ArtistCovers.tsx","components/search/Results.tsx","components/search/Search.tsx","components/details/Header.tsx","components/details/TrackItem.tsx","components/details/TrackList.tsx","components/details/Wrapper.tsx","components/details/PlaylistDetails.tsx","components/details/AlbumDetails.tsx","components/details/ArtistDetails.tsx","components/player/Queue.tsx","components/layout/Routes.tsx","components/layout/App.tsx","styles/theme.ts","styles/global.ts","index.tsx","middlewares/fetchMiddleware.ts"],"names":["styledComponents","styled","default","ThemeProvider","css","createGlobalStyle","keyframes","Category","schema","Entity","Categories","Object","categories","items","Artist","Artists","artists","Album","processStrategy","_ref","tracks","rest","objectWithoutProperties","objectSpread","Albums","albums","Track","album","_ref2","parent","Tracks","Playlist","_ref3","map","item","track","Playlists","playlists","Results","_ref4","define","relatedArtists","topTracks","ActionType","Schemas","receiveLogIn","type","ReceiveLogIn","LOG_IN_URL","concat","process","REGEX","ACCESS_TOKEN","TOKEN_TYPE","EXPIRES_AT","logInRedirect","Promise","resolve","reject","window","addEventListener","handleStorage","event","key","removeEventListener","location","assign","authorizedFetch","url","tokenType","localStorage","accessToken","fetch","headers","Authorization","fetchJson","_callee","response","regenerator_default","a","wrap","_context","prev","next","sent","abrupt","json","stop","createReducer","initialState","handlers","state","arguments","length","undefined","action","hasOwnProperty","mergeTracks","merge","payload","_createReducer","defineProperty","AlbumActionType","AlbumSuccess","ArtistActionType","ArtistTopTracksSuccess","FullArtistSuccess","PlaylistActionType","PlaylistSuccess","SearchActionType","SearchSuccess","selectTrack","trackId","selectTrackArtists","selectArtists","selectTracks","createSelector","memoize","trackIds","mergeArtists","artists_createReducer","ArtistSuccess","ArtistAlbumsSuccess","_action$payload","artistId","nexState","keys","ArtistRelatedArtistsSuccess","_action$payload2","_action$payload3","BrowseActionType","NewReleasesSuccess","selectArtist","selectArtistAlbums","artist","selectAlbums","selectArtistRelatedArtists","selectArtistTopTracks","artistIds","selectPlayableTracks","filter","preview_url","selectIsPlayable","mergePlaylists","playlists_createReducer","CategoryPlaylistsSuccess","FeaturedPlaylistsSuccess","selectPlaylist","playlistId","selectPlaylistTracks","albumId","playlist","selectPlaylists","playlistIds","mergeAlbums","albums_createReducer","selectAlbum","selectAlbumArtists","selectAlbumTracks","albumIds","isLoggedIn","selectIsLoggedIn","authorization","categoryPlaylistIds","featuredPlaylistIds","newReleaseIds","browse_createReducer","CategoriesSuccess","CategorySuccess","selectCategories","browse","values","selectCategory","categoryId","selectCategoryPlaylists","selectFeaturedPlaylists","selectNewReleases","increment","count","decrement","loading_createReducer","AlbumRequest","AlbumFailure","ArtistRequest","ArtistFailure","ArtistAlbumsRequest","ArtistAlbumsFailure","ArtistRelatedArtistsRequest","ArtistRelatedArtistsFailure","FullArtistRequest","FullArtistFailure","CategoriesRequest","CategoriesFailure","CategoryRequest","CategoryFailure","CategoryPlaylistsRequest","CategoryPlaylistsFailure","FeaturedPlaylistsRequest","FeaturedPlaylistsFailure","NewReleasesRequest","NewReleasesFailure","PlaylistRequest","PlaylistFailure","SearchRequest","SearchFailure","selectIsLoading","loading","PlayerState","Command","providers","selectArtistTracks","loadCollection","collectionId","dispatch","getState","_i","_providers","slicedToArray","isCollection","getTrackIds","id","LoadCollection","playPause","selectIsPlaying","Pause","Play","loadPlayPause","isLoaded","selectIsLoaded","LoadTrack","loadTrack","CollectionType","trackIndex","playerState","None","duration","currentTime","isShuffled","isLooped","volume","isMuted","command","player_createReducer","indexOf","TrackLoaded","Playing","Update","Paused","Seek","Seeked","Ended","Next","Previous","ToggleShuffle","ToggleLoop","ChangeVolume","VolumeChanged","selectCollection","player","selectLoadedTrack","_state$player","selectLoadedTracks","selectLoadedAlbum","selectLoadedArtists","_state$player2","selectCanPlayPause","selectCanSeek","selectCanNext","_state$player3","selectCanPrevious","_state$player4","selectTimes","_ref5","selectVolume","_ref6","selectIsMuted","_ref7","selectCommand","RecentType","recents","search_createReducer","results","_results$Object$keys$","ClearResults","SelectAlbum","toConsumableArray","name","SelectArtist","selectAlbumsById","search","selectArtistsById","sort","x","y","popularity","selectPlaylistsById","UserProfileSuccess","userProfile","selectUserProfile","combineReducers","click","props","theme","background","active","foreground","hover","ButtonBase","button","_templateObject","dark","Button","Button_templateObject","primary","thickness","medium","large","small","IconType","Heading","h2","Heading_templateObject","fontSize","extraLarge","fontWeight","bold","Icon","ImageShape","className","react_default","createElement","StyledImg","img","Image_templateObject","shape","Round","Container","div","_templateObject2","light","StyledText","span","_templateObject3","Image","source","_useState","useState","_useState2","setIsLoaded","src","onLoad","defaultProps","Square","StyedButton","RoundButton_templateObject","extraSmall","darker","StyledIcon","RoundButton_templateObject2","RoundButton","iconType","Text","Text_templateObject","StyledRoundButton","ToggleButton_templateObject","isToggled","ToggleButton","StyledLink","Link","Title_templateObject","Title_templateObject2","Title_templateObject3","Title","to","Title_StyledIcon","Wifi","Title_StyledText","Wrapper","User_templateObject","User_templateObject2","User","display_name","User_StyledIcon","Person","header","Header_templateObject","breakpoints","mapDispatch","getUserProfile","types","UserProfileRequest","UserProfileFailure","path","connect","useEffect","Header_Wrapper","layout_Title","layout_User","ul","Menu_templateObject","extraExtraLarge","StyledNavLink","NavLink","Menu_templateObject2","extraExtraSmall","primaryLight","Menu_templateObject3","_templateObject4","Menu","Menu_Wrapper","Menu_StyledIcon","ViewModule","Menu_Text","Search","getArtistNames","join","getImageSource","object","images","List","ArtistList_templateObject","Item","ArtistList_templateObject2","ArtistList_templateObject3","ArtistList","ArtistList_StyledLink","TrackInfos_templateObject","StyedImage","TrackInfos_templateObject2","TrackInfos_templateObject3","TrackInfos_templateObject4","TrackInfos_Wrapper","TrackInfos_Container","TrackInfos_Title","player_ArtistList","trackLoaded","playing","update","elapsed","paused","seeked","volumeChanged","ended","loadedTrack","times","audio","useRef","currentAudio","current","play","pause","ref","onLoadedMetadata","target","onPlay","onTimeUpdate","onPause","onSeeked","onVolumeChange","onEnded","Controls_templateObject","ShuffleButton","attrs","Shuffle","Controls_templateObject2","PreviousButton","SkipPrevious","Controls_templateObject3","PlayButton","isPlaying","PlayArrow","Controls_templateObject4","NextButton","SkipNext","_templateObject5","LoopButton","Loop","_templateObject6","toggleShuffle","previous","toggleLoop","canPrevious","canPlayPause","canNext","Controls_Wrapper","onClick","disabled","Slider_templateObject","isDisabled","Slider_templateObject2","Left","style","width","Slider_templateObject3","Thumb","position","left","Slider_templateObject4","Right","Slider_templateObject5","Slider","value","canChange","onChange","isDown","setIsDown","_useState3","_useState4","localValue","setLocalValue","wrapper","thumb","getValue","currentWrapper","currentTHunb","getBoundingClientRect","clientWidth","handleMouseMove","pageX","handleMouseUp","document","currentValue","Slider_Wrapper","onMouseDown","Slider_Container","Playback_templateObject","ProgressTime","Playback_templateObject2","Playback","canSeek","onSeek","renderTime","seconds","minutes","Math","floor","round","progress","Playback_Wrapper","player_Slider","Volume_templateObject","VolumeButton","VolumeOff","VolumeUp","Volume_templateObject2","StyledSlider","Volume_templateObject3","changeVolume","Volume_Wrapper","Player_templateObject","ThirdWrapper","Player_templateObject2","LeftWrapper","Player_templateObject3","CenterWrapper","Player_templateObject4","RightWrapper","Player_templateObject5","QueueButton","PlaylistPlay","Player_templateObject6","seek","time","withRouter","history","Player_Wrapper","player_TrackInfos","player_Controls","player_Playback","push","player_Volume","player_Audio","DefaultRoute","from","Route","exact","render","Redirect","Component","component","Login_templateObject","StyledButton","Login_templateObject2","LogIn","Login_Wrapper","core_Heading","StyledList","Covers_templateObject","splitWidth","StyledItem","li","Covers_templateObject2","Covers_templateObject3","StyledImge","Covers_templateObject4","Covers_templateObject5","SubTitle","Covers_templateObject6","Cover","cover","Fragment","Covers_StyledButton","image","Covers_Title","title","subTitle","Covers","covers","category","icons","getCovers","covers_Covers","Fader","withLoader_templateObject","isLoading","Loader","withLoader_templateObject2","withLoader","WrappedComponent","match","prevUrl","setPrevUrl","hasLoaded","setHasLoaded","getCategories","covers_CategoryCovers","selectAbumArtists","onSelect","getAlbums","covers_AlbumCovers","owner","getPlaylists","PlaylistCovers","Browse_templateObject","Browse_templateObject2","Browse_templateObject3","links","label","Browse_Wrapper","Browse_StyledList","link","Browse_StyledNavLink","components_DefaultRoute","es_Route","NewReleases","FeaturedPlaylists","getCategory","getCategoryPlaylists","params","Section","section","Results_templateObject","covers_ArtistCovers","selectAlbumById","selectArtistById","selectPlaylistById","Results_Artists","Results_Albums","Results_Playlists","debounced","StyledInput","input","Search_templateObject","query","encoded","encodeURIComponent","setValue","_","debounce","hasResults","placeholder","autoFocus","search_Results","details_Header_templateObject","StyledImage","Header_templateObject2","Div","Header_templateObject3","Header_templateObject4","Header_templateObject5","Header_templateObject6","Header","imageSource","imageShape","canPlay","onToggle","details_Header_Wrapper","Header_Title","Header_SubTitle","Header_StyledButton","TrackItem_templateObject","TrackItem_templateObject2","isHover","Infos","TrackItem_templateObject3","TrackItem_templateObject4","normal","TrackItem_templateObject5","Duration","TrackItem_templateObject6","TrackItem_StyledButton","TrackItem_StyledIcon","MusicOff","MusicNote","TrackItem_Title","TrackItem_SubTitle","duration_ms","renderDuration","TrackList_templateObject","TrackList_templateObject2","TrackList","TrackList_StyledList","TrackList_StyledItem","details_TrackItem","Wrapper_templateObject","getPlaylist","ownProps","isPlayable","handleToggle","details_Wrapper","details_Header","details_TrackList","getAlbum","ArtistDetails_templateObject","TopTracks","ArtistDetails_Section","RelatedArtists","getFullArtist","all","then","normalize","entities","ArtistDetails_Albums","Queue_templateObject","collection","Queue_Wrapper","Routes_templateObject","Routes","publicUrl","Routes_Wrapper","components_PrivateRoute","Browse","CategoryPlaylists","PlaylistDetails","AlbumDetails","ArtistDetails","Queue","App_templateObject","StyledHeader","App_templateObject2","Body","App_templateObject3","StyledPlayer","Player","App_templateObject4","App","BrowserRouter","App_Wrapper","layout_Menu","layout_Routes","global_templateObject","hash","date","Date","setSeconds","getSeconds","parseInt","toString","checkRedirection","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","data","_types","requestType","successType","failureType","ok","error","parse","now","ReactDOM","global","es","layout_App","getElementById"],"mappings":"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","file":"static/js/main.514cf465.chunk.js","sourcesContent":["import * as styledComponents from \"styled-components\";\r\nimport { Theme } from \"./theme\";\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\r\nexport default styled;\r\n","import { schema } from \"normalizr\";\r\n\r\nconst Category = new schema.Entity(\"categories\");\r\n\r\nconst Categories = new schema.Object({\r\n  categories: { items: [Category] }\r\n});\r\n\r\nconst Artist = new schema.Entity(\"artists\");\r\n\r\nconst Artists = new schema.Object({\r\n  artists: [Artist]\r\n});\r\n\r\nconst Album = new schema.Entity(\r\n  \"albums\",\r\n  {\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks ? tracks.items : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Albums = new schema.Object({\r\n  items: [Album],\r\n  albums: { items: [Album] }\r\n});\r\n\r\nconst Track = new schema.Entity(\r\n  \"tracks\",\r\n  {\r\n    album: Album,\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ album, artists, ...rest }, parent) => ({\r\n      ...rest,\r\n      album: parent[\"type\"] === \"album\" ? parent : album,\r\n      artists: artists\r\n    })\r\n  }\r\n);\r\n\r\nconst Tracks = new schema.Object({\r\n  tracks: [Track]\r\n});\r\n\r\nconst Playlist = new schema.Entity(\r\n  \"playlists\",\r\n  {\r\n    tracks: [Track]\r\n  },\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks.items ? tracks.items.map((item: any) => item.track) : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Playlists = new schema.Entity(\"playlistItems\", {\r\n  playlists: { items: [Playlist] }\r\n});\r\n\r\nconst Results = new schema.Entity(\r\n  \"results\",\r\n  {\r\n    albums: [Album],\r\n    artists: [Artist],\r\n    playlists: [Playlist]\r\n  },\r\n  {\r\n    processStrategy: ({ albums, artists, playlists }) => ({\r\n      albums: albums.items,\r\n      artists: artists.items,\r\n      playlists: playlists.items\r\n    })\r\n  }\r\n);\r\n\r\nArtist.define({\r\n  albums: [Album],\r\n  relatedArtists: [Artist],\r\n  topTracks: [Track]\r\n});\r\n\r\nAlbum.define({\r\n  tracks: [Track]\r\n});\r\n\r\nexport const Schemas = {\r\n  Artist,\r\n  Artists,\r\n  Album,\r\n  Albums,\r\n  Category,\r\n  Categories,\r\n  Track,\r\n  Tracks,\r\n  Playlist,\r\n  Playlists,\r\n  Results\r\n};\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  AlbumRequest = \"ALBUM_REQUEST\",\r\n  AlbumSuccess = \"ALBUM_SUCCESS\",\r\n  AlbumFailure = \"ALBUM_FAILURE\"\r\n}\r\n\r\nexport interface AlbumSuccessAction\r\n  extends EntitiesAction<ActionType.AlbumSuccess> {}\r\n\r\nexport function getAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.AlbumRequest,\r\n        ActionType.AlbumSuccess,\r\n        ActionType.AlbumFailure\r\n      ],\r\n      path: `albums/${albumId}`,\r\n      schema: Schemas.Album\r\n    });\r\n  };\r\n}\r\n","import { Action, Dispatch } from \"redux\";\r\nimport { logInRedirect } from \"../utils/authorization\";\r\n\r\nexport enum ActionType {\r\n  RequestLogIn = \"REQUEST_LOG_IN\",\r\n  ReceiveLogIn = \"RECEIVE_LOG_IN\"\r\n}\r\n\r\nexport interface RequestLogInAction extends Action<ActionType.RequestLogIn> {}\r\n\r\nfunction requestLogIn(): RequestLogInAction {\r\n  return {\r\n    type: ActionType.RequestLogIn\r\n  };\r\n}\r\n\r\nexport interface ReceiveLogInAction extends Action<ActionType.ReceiveLogIn> {}\r\n\r\nexport function receiveLogIn(): ReceiveLogInAction {\r\n  return {\r\n    type: ActionType.ReceiveLogIn\r\n  };\r\n}\r\n\r\nexport function logIn() {\r\n  return async (\r\n    dispatch: Dispatch<RequestLogInAction | ReceiveLogInAction>\r\n  ) => {\r\n    dispatch(requestLogIn());\r\n    await logInRedirect();\r\n    dispatch(receiveLogIn());\r\n  };\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { receiveLogIn } from \"../actions/authorization\";\r\n\r\nconst LOG_IN_URL = `https://accounts.spotify.com/authorize?client_id=${\r\n  process.env.REACT_APP_CLIENT_ID\r\n}&response_type=token&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\r\nconst REGEX = /#access_token=(.*?)&token_type=(.*?)&expires_in=(.*)$/;\r\nconst ACCESS_TOKEN = \"token\";\r\nconst TOKEN_TYPE = \"tokenType\";\r\nconst EXPIRES_AT = \"expiresAt\";\r\n\r\nfunction logInRedirect(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    const handleStorage = (event: StorageEvent) => {\r\n      if (event.key === ACCESS_TOKEN) {\r\n        window.removeEventListener(\"storage\", handleStorage);\r\n        resolve();\r\n      }\r\n    };\r\n    window.addEventListener(\"storage\", handleStorage);\r\n    window.location.assign(LOG_IN_URL);\r\n  });\r\n}\r\n\r\nfunction checkRedirection(): void {\r\n  const match = window.location.hash.match(REGEX);\r\n  if (match) {\r\n    localStorage[ACCESS_TOKEN] = match[1];\r\n    localStorage[TOKEN_TYPE] = match[2];\r\n    const date = new Date();\r\n    date.setSeconds(date.getSeconds() + parseInt(match[3]));\r\n    localStorage[EXPIRES_AT] = date.toString();\r\n  }\r\n}\r\n\r\nfunction initAuthorization(dispatch: Dispatch): void {\r\n  if (\r\n    !!localStorage[ACCESS_TOKEN] &&\r\n    Date.parse(localStorage[EXPIRES_AT]) > Date.now()\r\n  ) {\r\n    dispatch(receiveLogIn());\r\n  }\r\n}\r\n\r\nfunction authorizedFetch(url: string): Promise<Response> {\r\n  const tokenType = localStorage[TOKEN_TYPE];\r\n  const accessToken = localStorage[ACCESS_TOKEN];\r\n\r\n  return fetch(url, {\r\n    headers: {\r\n      Authorization: `${tokenType} ${accessToken}`\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchJson(url: string): Promise<any> {\r\n  const response = await authorizedFetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport {\r\n  logInRedirect,\r\n  checkRedirection,\r\n  initAuthorization,\r\n  authorizedFetch,\r\n  fetchJson\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { normalize } from \"normalizr\";\r\nimport { fetchJson } from \"../utils/authorization\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  ArtistRequest = \"ARTIST_REQUEST\",\r\n  ArtistSuccess = \"ARTIST_SUCCESS\",\r\n  ArtistFailure = \"ARTIST_FAILURE\",\r\n  ArtistAlbumsRequest = \"ARTIST_ALBUMS_REQUEST\",\r\n  ArtistAlbumsSuccess = \"ARTIST_ALBUMS_SUCCESS\",\r\n  ArtistAlbumsFailure = \"ARTIST_ALBUMS_FAILURE\",\r\n  ArtistRelatedArtistsRequest = \"ARTIST_RELATED_ARTISTS_REQUEST\",\r\n  ArtistRelatedArtistsSuccess = \"ARTIST_RELATED_ARTISTS_SUCCESS\",\r\n  ArtistRelatedArtistsFailure = \"ARTIST_RELATED_ARTISTS_FAILURE\",\r\n  ArtistTopTracksRequest = \"ARTIST_TOP_TRACKS_REQUEST\",\r\n  ArtistTopTracksSuccess = \"ARTIST_TOP_TRACKS_SUCCESS\",\r\n  ArtistTopTracksFailure = \"ARTIST_TOP_TRACKS_FAILURE\",\r\n  FullArtistRequest = \"FULL_ARTIST_REQUEST\",\r\n  FullArtistSuccess = \"FULL_ARTIST_SUCCESS\",\r\n  FullArtistFailure = \"FULL_ARTIST_FAILURE\"\r\n}\r\n\r\nexport interface ArtistSuccessAction\r\n  extends EntitiesAction<ActionType.ArtistSuccess> {}\r\n\r\nexport function getArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRequest,\r\n        ActionType.ArtistSuccess,\r\n        ActionType.ArtistFailure\r\n      ],\r\n      path: `artists/${artistId}`,\r\n      schema: Schemas.Artist\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistAlbumsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistAlbumsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistAlbums(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistAlbumsRequest,\r\n        ActionType.ArtistAlbumsSuccess,\r\n        ActionType.ArtistAlbumsFailure\r\n      ],\r\n      path: `artists/${artistId}/albums`,\r\n      schema: Schemas.Albums,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistRelatedArtistsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistRelatedArtistsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistRelatedArtists(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRelatedArtistsRequest,\r\n        ActionType.ArtistRelatedArtistsSuccess,\r\n        ActionType.ArtistRelatedArtistsFailure\r\n      ],\r\n      path: `artists/${artistId}/related-artists`,\r\n      schema: Schemas.Artists,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistTopTracksSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistTopTracksSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistTopTracks(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistTopTracksRequest,\r\n        ActionType.ArtistTopTracksSuccess,\r\n        ActionType.ArtistTopTracksFailure\r\n      ],\r\n      path: `artists/${artistId}/top-tracks?country=us`,\r\n      schema: Schemas.Tracks,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function getFullArtist(artistId: string) {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch({\r\n      type: ActionType.FullArtistRequest\r\n    });\r\n    const url = `${process.env.REACT_APP_BASE_URL}/artists/${artistId}`;\r\n    Promise.all([\r\n      fetchJson(url),\r\n      fetchJson(`${url}/albums`),\r\n      fetchJson(`${url}/related-artists`),\r\n      fetchJson(`${url}/top-tracks?country=us`)\r\n    ]).then(([artist, albums, relatedArtists, topTracks]) => {\r\n      dispatch({\r\n        type: ActionType.FullArtistSuccess,\r\n        payload: normalize(\r\n          {\r\n            ...artist,\r\n            albums: albums.items,\r\n            relatedArtists: relatedArtists.artists,\r\n            topTracks: topTracks.tracks\r\n          },\r\n          Schemas.Artist\r\n        ).entities\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  CategoriesRequest = \"CATEGORIES_REQUEST\",\r\n  CategoriesSuccess = \"CATEGORIES_SUCCESS\",\r\n  CategoriesFailure = \"CATEGORIES_FAILURE\",\r\n  CategoryRequest = \"CATEGORY_REQUEST\",\r\n  CategorySuccess = \"CATEGORY_SUCCESS\",\r\n  CategoryFailure = \"CATEGORY_FAILURE\",\r\n  CategoryPlaylistsRequest = \"CATEGORY_PLAYLISTS_REQUEST\",\r\n  CategoryPlaylistsSuccess = \"CATEGORY_PLAYLISTS_SUCCESS\",\r\n  CategoryPlaylistsFailure = \"CATEGORY_PLAYLISTS_FAILURE\",\r\n  FeaturedPlaylistsRequest = \"FEATURED_PLAYLISTS_REQUEST\",\r\n  FeaturedPlaylistsSuccess = \"FEATURED_PLAYLISTS_SUCCESS\",\r\n  FeaturedPlaylistsFailure = \"FEATURED_PLAYLISTS_FAILURE\",\r\n  NewReleasesRequest = \"NEW_RELEASES_REQUEST\",\r\n  NewReleasesSuccess = \"NEW_RELEASES_SUCCESS\",\r\n  NewReleasesFailure = \"NEW_RELEASES_FAILURE\"\r\n}\r\n\r\nexport interface CategoriesSuccessAction\r\n  extends EntitiesAction<ActionType.CategoriesSuccess> {}\r\n\r\nexport function getCategories() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoriesRequest,\r\n        ActionType.CategoriesSuccess,\r\n        ActionType.CategoriesFailure\r\n      ],\r\n      path: \"browse/categories\",\r\n      schema: Schemas.Categories\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategorySuccessAction\r\n  extends EntitiesAction<ActionType.CategorySuccess> {}\r\n\r\nexport function getCategory(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryRequest,\r\n        ActionType.CategorySuccess,\r\n        ActionType.CategoryFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}`,\r\n      schema: Schemas.Category\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategoryPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.CategoryPlaylistsSuccess> {}\r\n\r\nexport function getCategoryPlaylists(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryPlaylistsRequest,\r\n        ActionType.CategoryPlaylistsSuccess,\r\n        ActionType.CategoryPlaylistsFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}/playlists`,\r\n      schema: Schemas.Playlists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface FeaturedPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.FeaturedPlaylistsSuccess> {}\r\n\r\nexport function getFeaturedPlaylists() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FeaturedPlaylistsRequest,\r\n        ActionType.FeaturedPlaylistsSuccess,\r\n        ActionType.FeaturedPlaylistsFailure\r\n      ],\r\n      path: \"browse/featured-playlists\",\r\n      schema: Schemas.Playlists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface NewReleasesSuccessAction\r\n  extends EntitiesAction<ActionType.NewReleasesSuccess> {}\r\n\r\nexport function getNewReleases() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.NewReleasesRequest,\r\n        ActionType.NewReleasesSuccess,\r\n        ActionType.NewReleasesFailure\r\n      ],\r\n      path: \"browse/new-releases\",\r\n      schema: Schemas.Albums\r\n    });\r\n  };\r\n}\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  PlaylistRequest = \"PLAYLIST_REQUEST\",\r\n  PlaylistSuccess = \"PLAYLIST_SUCCESS\",\r\n  PlaylistFailure = \"PLAYLIST_FAILURE\"\r\n}\r\n\r\nexport interface PlaylistSuccessAction\r\n  extends EntitiesAction<ActionType.PlaylistSuccess> {}\r\n\r\nexport function getPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.PlaylistRequest,\r\n        ActionType.PlaylistSuccess,\r\n        ActionType.PlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}`,\r\n      schema: Schemas.Playlist\r\n    });\r\n  };\r\n}\r\n","import { Action } from \"redux\";\r\n\r\nexport default function createReducer(initialState: object, handlers: any) {\r\n  return function reducer(state = initialState, action: Action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { TrackDictionary } from \"./types\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nexport interface State extends TrackDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeTracks(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.tracks);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeTracks,\r\n  [ArtistActionType.ArtistTopTracksSuccess]: mergeTracks,\r\n  [ArtistActionType.FullArtistSuccess]: mergeTracks,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeTracks,\r\n  [SearchActionType.SearchSuccess]: mergeTracks\r\n});\r\n\r\nexport function selectTrack({ tracks }: CombinedState, trackId: string) {\r\n  return tracks[trackId];\r\n}\r\n\r\nexport function selectTrackAlbum(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return selectAlbum(state, track.album);\r\n}\r\n\r\nexport function selectTrackArtists(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return selectArtists(state)(track.artists);\r\n}\r\n\r\nexport const selectTracks = createSelector(\r\n  (state: CombinedState) => state.tracks,\r\n  (tracks: TrackDictionary) =>\r\n    memoize((trackIds: string[]) =>\r\n      trackIds ? trackIds.map(trackId => tracks[trackId]) : []\r\n    )\r\n);\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Artist } from \"../types\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport {\r\n  ArtistAlbumsSuccessAction,\r\n  ArtistRelatedArtistsSuccessAction,\r\n  ArtistTopTracksSuccessAction\r\n} from \"../actions/artists\";\r\nimport { ArtistDictionary } from \"./types\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums } from \"./albums\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends ArtistDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeArtists(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.artists);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [ArtistActionType.ArtistSuccess]: mergeArtists,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: (\r\n    state: State,\r\n    action: ArtistAlbumsSuccessAction\r\n  ) => {\r\n    const { artistId, albums } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        albums: Object.keys(albums)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: (\r\n    state: State,\r\n    action: ArtistRelatedArtistsSuccessAction\r\n  ) => {\r\n    const { artistId, artists } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        relatedArtists: Object.keys(artists)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistTopTracksSuccess]: (\r\n    state: State,\r\n    action: ArtistTopTracksSuccessAction\r\n  ) => {\r\n    const { artistId, tracks } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        topTracks: Object.keys(tracks)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.FullArtistSuccess]: mergeArtists,\r\n  [AlbumActionType.AlbumSuccess]: mergeArtists,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeArtists,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeArtists,\r\n  [SearchActionType.SearchSuccess]: mergeArtists\r\n});\r\n\r\nexport function selectIsArtist({ artists }: CombinedState, artistId: string) {\r\n  return !!artists[artistId];\r\n}\r\n\r\nexport function selectArtist({ artists }: CombinedState, artistId: string) {\r\n  return artists[artistId];\r\n}\r\n\r\nexport function selectArtistAlbums(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const albums = selectAlbums(state)(artist.albums);\r\n    if (albums) {\r\n      return albums;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistRelatedArtists(\r\n  state: CombinedState,\r\n  artistId: string\r\n) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const artists = selectArtists(state)(artist.relatedArtists);\r\n    if (artists) {\r\n      return artists;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistTopTracks(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const tracks = selectTracks(state)(artist.topTracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectArtists = createSelector(\r\n  (state: CombinedState) => state.artists,\r\n  (artists: ArtistDictionary): ((artistIds: string[]) => Artist[]) =>\r\n    memoize((artistIds: string[]) =>\r\n      artistIds ? artistIds.map(artistId => artists[artistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, artistId: string) {\r\n  const tracks = selectArtistTopTracks(state, artistId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, artistId: string) {\r\n  return !!selectPlayableTracks(state, artistId).length;\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { PlaylistDictionary } from \"./types\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends PlaylistDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergePlaylists(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.playlists);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [PlaylistActionType.PlaylistSuccess]: mergePlaylists,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: mergePlaylists,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: mergePlaylists,\r\n  [SearchActionType.SearchSuccess]: mergePlaylists\r\n});\r\n\r\nexport function selectIsPlaylist(state: CombinedState, playlistId: string) {\r\n  return !!state.playlists[playlistId];\r\n}\r\n\r\nexport function selectPlaylist(\r\n  { playlists }: CombinedState,\r\n  playlistId: string\r\n) {\r\n  return playlists[playlistId];\r\n}\r\n\r\nexport function selectPlaylistTracks(state: CombinedState, albumId: string) {\r\n  const playlist = selectPlaylist(state, albumId);\r\n  if (playlist) {\r\n    const tracks = selectTracks(state)(playlist.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectPlaylists = createSelector(\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (playlists: PlaylistDictionary) =>\r\n    memoize((playlistIds: string[]) =>\r\n      playlistIds ? playlistIds.map(playlistId => playlists[playlistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, playlistId: string) {\r\n  const tracks = selectPlaylistTracks(state, playlistId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, playlistId: string) {\r\n  return !!selectPlayableTracks(state, playlistId).length;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { Album, Artist, Playlist } from \"../types\";\r\nimport { EntitiesAction, FetchDispatch, PayloadAction } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\nimport { State } from \"../reducers\";\r\nimport { selectAlbum as selectAlbumById } from \"../reducers/albums\";\r\nimport { selectArtist as selectArtistById } from \"../reducers/artists\";\r\nimport { selectPlaylist as selectPlaylistById } from \"../reducers/playlists\";\r\n\r\nexport enum ActionType {\r\n  SearchRequest = \"SEARCH_REQUEST\",\r\n  SearchSuccess = \"SEARCH_SUCCESS\",\r\n  SearchFailure = \"SEARCH_FAILURE\",\r\n  ClearResults = \"CLEAR_RESULTS\",\r\n  SelectAlbum = \"SELECT_ALBUM\",\r\n  SelectArtist = \"SELECT_ARTIST\",\r\n  selectPlaylist = \"SELECT_PLAYLIST\"\r\n}\r\n\r\nexport interface SearchSuccessAction\r\n  extends EntitiesAction<ActionType.SearchSuccess> {}\r\n\r\nexport function search(query: string) {\r\n  if (query) {\r\n    return (dispatch: FetchDispatch) => {\r\n      const encoded = encodeURIComponent(query);\r\n      dispatch({\r\n        types: [\r\n          ActionType.SearchRequest,\r\n          ActionType.SearchSuccess,\r\n          ActionType.SearchFailure\r\n        ],\r\n        path: `search?q=${encoded}*&type=album,artist,playlist`,\r\n        schema: Schemas.Results\r\n      });\r\n    };\r\n  } else {\r\n    return (dispatch: Dispatch) => {\r\n      dispatch({\r\n        type: ActionType.ClearResults\r\n      });\r\n    };\r\n  }\r\n}\r\n\r\nexport interface SelectAlbumAction\r\n  extends PayloadAction<ActionType.SelectAlbum, Album> {}\r\n\r\nexport function selectAlbum(albumId: string) {\r\n  return (dispatch: Dispatch<SelectAlbumAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const album = selectAlbumById(state, albumId);\r\n    dispatch({ type: ActionType.SelectAlbum, payload: album });\r\n  };\r\n}\r\n\r\nexport interface SelectArtistAction\r\n  extends PayloadAction<ActionType.SelectArtist, Artist> {}\r\n\r\nexport function selectArtist(artistId: string) {\r\n  return (dispatch: Dispatch<SelectArtistAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const artist = selectArtistById(state, artistId);\r\n    dispatch({ type: ActionType.SelectArtist, payload: artist });\r\n  };\r\n}\r\n\r\nexport interface SelectPlaylistAction\r\n  extends PayloadAction<ActionType.selectPlaylist, Playlist> {}\r\n\r\nexport function selectPlaylist(playlistId: string) {\r\n  return (dispatch: Dispatch<SelectPlaylistAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const playlist = selectPlaylistById(state, playlistId);\r\n    dispatch({ type: ActionType.selectPlaylist, payload: playlist });\r\n  };\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { AlbumDictionary, ArtistDictionary } from \"./types\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends AlbumDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeAlbums(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.albums);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeAlbums,\r\n  [ArtistActionType.FullArtistSuccess]: mergeAlbums,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeAlbums,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: mergeAlbums,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeAlbums,\r\n  [SearchActionType.SearchSuccess]: mergeAlbums\r\n});\r\n\r\nexport function selectIsAlbum({ albums }: CombinedState, albumId: string) {\r\n  return !!albums[albumId];\r\n}\r\n\r\nexport function selectAlbum({ albums }: CombinedState, albumId: string) {\r\n  return albums[albumId];\r\n}\r\n\r\nexport const selectAlbumArtists = createSelector(\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  (albums: AlbumDictionary, artists: ArtistDictionary) =>\r\n    memoize((albumId: string) => {\r\n      const album = albums[albumId];\r\n      if (album) {\r\n        return album.artists.map(artistId => artists[artistId]);\r\n      }\r\n\r\n      return [];\r\n    })\r\n);\r\n\r\nexport function selectAlbumTracks(state: CombinedState, albumId: string) {\r\n  const album = selectAlbum(state, albumId);\r\n  if (album) {\r\n    const tracks = selectTracks(state)(album.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectAlbums = createSelector(\r\n  (state: CombinedState) => state.albums,\r\n  (albums: AlbumDictionary) =>\r\n    memoize((albumIds: string[]) =>\r\n      albumIds ? albumIds.map(albumId => albums[albumId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, albumId: string) {\r\n  const tracks = selectAlbumTracks(state, albumId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, albumId: string) {\r\n  return !!selectPlayableTracks(state, albumId).length;\r\n}\r\n","import { ActionType } from \"../actions/authorization\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoggedIn: false\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.ReceiveLogIn]: (state: State) => ({\r\n    ...state,\r\n    isLoggedIn: true\r\n  })\r\n});\r\n\r\nexport function selectIsLoggedIn(state: CombinedState): boolean {\r\n  return !!state.authorization.isLoggedIn;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Album, Category, Playlist } from \"../types\";\r\nimport {\r\n  ActionType,\r\n  CategorySuccessAction,\r\n  CategoriesSuccessAction,\r\n  NewReleasesSuccessAction,\r\n  CategoryPlaylistsSuccessAction,\r\n  FeaturedPlaylistsSuccessAction\r\n} from \"../actions/browse\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectPlaylists } from \"./playlists\";\r\nimport { selectAlbums } from \"./albums\";\r\n\r\nexport interface State {\r\n  categories: { [id: string]: Category };\r\n  categoryPlaylistIds: string[];\r\n  featuredPlaylistIds: string[];\r\n  newReleaseIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  categories: {},\r\n  categoryPlaylistIds: [],\r\n  featuredPlaylistIds: [],\r\n  newReleaseIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.CategoriesSuccess]: (\r\n    state: State,\r\n    action: CategoriesSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategorySuccess]: (\r\n    state: State,\r\n    action: CategorySuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategoryPlaylistsSuccess]: (\r\n    state: State,\r\n    action: CategoryPlaylistsSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categoryPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.FeaturedPlaylistsSuccess]: (\r\n    state: State,\r\n    action: FeaturedPlaylistsSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    featuredPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.NewReleasesSuccess]: (\r\n    state: State,\r\n    action: NewReleasesSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    newReleaseIds: Object.keys(action.payload.albums)\r\n  })\r\n});\r\n\r\nexport const selectCategories = createSelector(\r\n  ({ browse }: CombinedState) => browse.categories,\r\n  (categories: { [categoryId: string]: Category }) => Object.values(categories)\r\n);\r\n\r\nexport function selectCategory(\r\n  state: CombinedState,\r\n  categoryId: string\r\n): Category | undefined {\r\n  return state.browse.categories[categoryId];\r\n}\r\n\r\nexport function selectCategoryPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.categoryPlaylistIds);\r\n}\r\n\r\nexport function selectFeaturedPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.featuredPlaylistIds);\r\n}\r\n\r\nexport function selectNewReleases(state: CombinedState): Album[] {\r\n  return selectAlbums(state)(state.browse.newReleaseIds);\r\n}\r\n","import {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  count: number;\r\n}\r\n\r\nconst initialState: State = {\r\n  count: 0\r\n};\r\n\r\nfunction increment(state: State): State {\r\n  return {\r\n    ...state,\r\n    count: state.count + 1\r\n  };\r\n}\r\n\r\nfunction decrement(state: State): State {\r\n  return {\r\n    ...state,\r\n    count: state.count - 1\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumRequest]: increment,\r\n  [AlbumActionType.AlbumSuccess]: decrement,\r\n  [AlbumActionType.AlbumFailure]: decrement,\r\n  [ArtistActionType.ArtistRequest]: increment,\r\n  [ArtistActionType.ArtistSuccess]: decrement,\r\n  [ArtistActionType.ArtistFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsRequest]: increment,\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.FullArtistRequest]: increment,\r\n  [ArtistActionType.FullArtistSuccess]: decrement,\r\n  [ArtistActionType.FullArtistFailure]: decrement,\r\n  [BrowseActionType.CategoriesRequest]: increment,\r\n  [BrowseActionType.CategoriesSuccess]: decrement,\r\n  [BrowseActionType.CategoriesFailure]: decrement,\r\n  [BrowseActionType.CategoryRequest]: increment,\r\n  [BrowseActionType.CategorySuccess]: decrement,\r\n  [BrowseActionType.CategoryFailure]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsRequest]: increment,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsFailure]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsRequest]: increment,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsFailure]: decrement,\r\n  [BrowseActionType.NewReleasesRequest]: increment,\r\n  [BrowseActionType.NewReleasesSuccess]: decrement,\r\n  [BrowseActionType.NewReleasesFailure]: decrement,\r\n  [PlaylistActionType.PlaylistRequest]: increment,\r\n  [PlaylistActionType.PlaylistSuccess]: decrement,\r\n  [PlaylistActionType.PlaylistFailure]: decrement,\r\n  [SearchActionType.SearchRequest]: increment,\r\n  [SearchActionType.SearchSuccess]: decrement,\r\n  [SearchActionType.SearchFailure]: decrement\r\n});\r\n\r\nexport function selectIsLoading(state: CombinedState): boolean {\r\n  return !!state.loading.count;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { Track } from \"../types\";\r\nimport { PayloadAction } from \"./types\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsPlaying, selectIsLoaded } from \"../reducers/player\";\r\nimport {\r\n  selectIsAlbum,\r\n  selectPlayableTracks as selectAlbumTracks\r\n} from \"../reducers/albums\";\r\nimport {\r\n  selectIsArtist,\r\n  selectPlayableTracks as selectArtistTracks\r\n} from \"../reducers/artists\";\r\nimport {\r\n  selectIsPlaylist,\r\n  selectPlayableTracks as selectPlaylistTracks\r\n} from \"../reducers/playlists\";\r\n\r\nexport enum ActionType {\r\n  LoadCollection = \"LOAD_COLLECTION\",\r\n  LoadTrack = \"LOAD_TRACK\",\r\n  TrackLoaded = \"TRACK_LOADED\",\r\n  Play = \"PLAY\",\r\n  Playing = \"PLAYING\",\r\n  Update = \"UPDATE\",\r\n  Pause = \"PAUSE\",\r\n  Paused = \"PAUSED\",\r\n  Seek = \"SEEK\",\r\n  Seeked = \"SEEKED\",\r\n  ChangeVolume = \"CHANGE_VOLUME\",\r\n  VolumeChanged = \"VOLUME_CHANGED\",\r\n  Ended = \"ENDED\",\r\n  Next = \"NEXT\",\r\n  Previous = \"PREVIOUS\",\r\n  ToggleShuffle = \"TOGGLE_SHUFFLE\",\r\n  ToggleLoop = \"TOGGLE_LOOP\"\r\n}\r\n\r\nexport interface LoadCollectionAction\r\n  extends PayloadAction<\r\n    ActionType.LoadCollection,\r\n    { collectionId: string; trackIds: string[]; trackId?: string }\r\n  > {}\r\n\r\nconst providers: [\r\n  (state: State, id: string) => boolean,\r\n  (state: State, id: string) => Track[]\r\n][] = [\r\n  [selectIsAlbum, selectAlbumTracks],\r\n  [selectIsArtist, selectArtistTracks],\r\n  [selectIsPlaylist, selectPlaylistTracks]\r\n];\r\n\r\nfunction getTrackIds(state: State, collectionId: string): string[] {\r\n  for (const [isCollection, getTrackIds] of providers) {\r\n    if (isCollection(state, collectionId)) {\r\n      return getTrackIds(state, collectionId).map(track => track.id);\r\n    }\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function loadCollection(collectionId: string, trackId?: string) {\r\n  return (dispatch: Dispatch<LoadCollectionAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const trackIds = getTrackIds(state, collectionId);\r\n    if (trackIds.length) {\r\n      dispatch({\r\n        type: ActionType.LoadCollection,\r\n        payload: {\r\n          collectionId: collectionId,\r\n          trackIds,\r\n          trackId\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport interface LoadTrackAction\r\n  extends PayloadAction<ActionType.LoadTrack, { trackId: string }> {}\r\n\r\nexport function loadTrack(trackId: string) {\r\n  return (dispatch: Dispatch<LoadTrackAction>) => {\r\n    dispatch({\r\n      type: ActionType.LoadTrack,\r\n      payload: {\r\n        trackId\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface TrackLoadedAction\r\n  extends PayloadAction<ActionType.TrackLoaded, number> {}\r\n\r\nexport function trackLoaded(duration: number) {\r\n  return (dispatch: Dispatch<TrackLoadedAction>) => {\r\n    dispatch({\r\n      type: ActionType.TrackLoaded,\r\n      payload: duration\r\n    });\r\n  };\r\n}\r\n\r\nexport function playPause() {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isPlaying = selectIsPlaying(state);\r\n    dispatch({\r\n      type: isPlaying ? ActionType.Pause : ActionType.Play\r\n    });\r\n  };\r\n}\r\n\r\nexport function loadPlayPause(collectionId: string, trackId?: string) {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isLoaded = selectIsLoaded(state);\r\n    if (!isLoaded(collectionId)) {\r\n      loadCollection(collectionId, trackId)(dispatch, getState);\r\n    } else if (trackId && !isLoaded(trackId)) {\r\n      loadTrack(trackId)(dispatch);\r\n    } else {\r\n      playPause()(dispatch, getState);\r\n    }\r\n  };\r\n}\r\n\r\nexport function playing() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Playing\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UpdateAction\r\n  extends PayloadAction<ActionType.Update, number> {}\r\n\r\nexport function update(elapsed: number) {\r\n  return (dispatch: Dispatch<UpdateAction>) => {\r\n    dispatch({\r\n      type: ActionType.Update,\r\n      payload: elapsed\r\n    });\r\n  };\r\n}\r\n\r\nexport function paused() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Paused\r\n    });\r\n  };\r\n}\r\n\r\nexport interface SeekAction extends PayloadAction<ActionType.Seek, number> {}\r\n\r\nexport function seek(time: number) {\r\n  return (dispatch: Dispatch<SeekAction>) => {\r\n    dispatch({\r\n      type: ActionType.Seek,\r\n      payload: time\r\n    });\r\n  };\r\n}\r\n\r\nexport function seeked() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Seeked\r\n    });\r\n  };\r\n}\r\n\r\nexport function ended() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Ended });\r\n  };\r\n}\r\n\r\nexport function next() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Next });\r\n  };\r\n}\r\n\r\nexport function previous() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Previous });\r\n  };\r\n}\r\n\r\nexport interface ChangeVolumeAction\r\n  extends PayloadAction<\r\n    ActionType.ChangeVolume,\r\n    { volume: number; isMuted: boolean }\r\n  > {}\r\n\r\nexport function changeVolume(volume: number, isMuted: boolean) {\r\n  return (dispatch: Dispatch<ChangeVolumeAction>) => {\r\n    dispatch({\r\n      type: ActionType.ChangeVolume,\r\n      payload: {\r\n        volume,\r\n        isMuted\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function volumeChanged() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.VolumeChanged\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleShuffle() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.ToggleShuffle\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleLoop() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.ToggleLoop\r\n    });\r\n  };\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  ActionType,\r\n  LoadCollectionAction,\r\n  LoadTrackAction,\r\n  TrackLoadedAction,\r\n  UpdateAction,\r\n  SeekAction,\r\n  ChangeVolumeAction\r\n} from \"../actions/player\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTrack, selectTracks } from \"./tracks\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nenum PlayerState {\r\n  None = \"NONE\",\r\n  Playing = \"IS_PLAYING\",\r\n  Paused = \"IS_PAUSED\"\r\n}\r\n\r\nexport enum Command {\r\n  None = \"NONE\",\r\n  Play = \"PLAY\",\r\n  Pause = \"PAUSE\",\r\n  Seek = \"SEEK\",\r\n  ChangeVolume = \"CHANGE_VOLUME\"\r\n}\r\n\r\nexport interface State {\r\n  collectionId: string;\r\n  trackIds: string[];\r\n  trackIndex: number;\r\n  playerState: PlayerState;\r\n  duration: number;\r\n  currentTime: number;\r\n  isShuffled: boolean;\r\n  isLooped: boolean;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n}\r\n\r\nconst initialState: State = {\r\n  collectionId: \"\",\r\n  trackIds: [],\r\n  trackIndex: 0,\r\n  playerState: PlayerState.None,\r\n  duration: 0,\r\n  currentTime: 0,\r\n  isShuffled: false,\r\n  isLooped: false,\r\n  volume: 1,\r\n  isMuted: false,\r\n  command: Command.None\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.LoadCollection]: (\r\n    state: State,\r\n    action: LoadCollectionAction\r\n  ): State => {\r\n    const { collectionId, trackIds, trackId } = action.payload;\r\n    return {\r\n      ...state,\r\n      collectionId: collectionId,\r\n      trackIds: trackIds,\r\n      trackIndex: trackId ? trackIds.indexOf(trackId) : 0,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.LoadTrack]: (state: State, action: LoadTrackAction) => ({\r\n    ...state,\r\n    trackIndex: state.trackIds.indexOf(action.payload.trackId),\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.TrackLoaded]: (\r\n    state: State,\r\n    action: TrackLoadedAction\r\n  ): State => ({\r\n    ...state,\r\n    duration: action.payload\r\n  }),\r\n  [ActionType.Playing]: (state: State): State => ({\r\n    ...state,\r\n    playerState: PlayerState.Playing,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Update]: (state: State, action: UpdateAction): State => ({\r\n    ...state,\r\n    currentTime: action.payload,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Play]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Pause]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Pause\r\n  }),\r\n  [ActionType.Paused]: (state: State): State => ({\r\n    ...state,\r\n    playerState: PlayerState.Paused,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Seek]: (state: State, action: SeekAction): State => ({\r\n    ...state,\r\n    currentTime: action.payload,\r\n    command: Command.Seek\r\n  }),\r\n  [ActionType.Seeked]: (state: State): State => ({\r\n    ...state\r\n  }),\r\n  [ActionType.Ended]: (state: State): State => {\r\n    const { trackIndex, trackIds } = state;\r\n    return trackIndex === trackIds.length - 1\r\n      ? { ...state, playerState: PlayerState.Paused }\r\n      : {\r\n          ...state,\r\n          trackIndex: trackIndex + 1,\r\n          command: Command.Play\r\n        };\r\n  },\r\n  [ActionType.Next]: (state: State): State => ({\r\n    ...state,\r\n    trackIndex: state.trackIndex + 1,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Previous]: (state: State): State => ({\r\n    ...state,\r\n    trackIndex: state.trackIndex - 1,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.ToggleShuffle]: (state: State): State => ({\r\n    ...state,\r\n    isShuffled: !state.isShuffled\r\n  }),\r\n  [ActionType.ToggleLoop]: (state: State): State => ({\r\n    ...state,\r\n    isLooped: !state.isLooped\r\n  }),\r\n  [ActionType.ChangeVolume]: (\r\n    state: State,\r\n    action: ChangeVolumeAction\r\n  ): State => ({\r\n    ...state,\r\n    ...action.payload,\r\n    command: Command.ChangeVolume\r\n  }),\r\n  [ActionType.VolumeChanged]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.None\r\n  })\r\n});\r\n\r\nexport enum CollectionType {\r\n  Album = \"ALBUM\",\r\n  Artist = \"ARTIST\",\r\n  Playlist = \"PLAYLIST\"\r\n}\r\n\r\nexport interface Collection {\r\n  id: string;\r\n  type?: CollectionType;\r\n}\r\n\r\nexport const selectCollection = createSelector(\r\n  ({ player }: CombinedState) => player,\r\n  (state: State): Collection => ({\r\n    id: state.collectionId\r\n  })\r\n);\r\n\r\nexport function selectLoadedTrack(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  if (trackIds) {\r\n    return selectTrack(state, trackIds[trackIndex]);\r\n  }\r\n}\r\n\r\nexport function selectLoadedTracks(state: CombinedState) {\r\n  const { trackIds } = state.player;\r\n  return trackIds ? selectTracks(state)(trackIds) : [];\r\n}\r\n\r\nexport function selectLoadedAlbum(state: CombinedState) {\r\n  const track = selectLoadedTrack(state);\r\n  if (track) {\r\n    return selectAlbum(state, track.album);\r\n  }\r\n}\r\n\r\nexport function selectLoadedArtists(state: CombinedState) {\r\n  const track = selectLoadedTrack(state);\r\n  return track ? selectArtists(state)(track.artists) : [];\r\n}\r\n\r\nexport function selectIsLoaded(state: CombinedState) {\r\n  const { collectionId, trackIds, trackIndex } = state.player;\r\n  return (id: string) =>\r\n    collectionId === id || (!!trackIds.length && trackIds[trackIndex] === id);\r\n}\r\n\r\nexport function selectIsPlaying(state: CombinedState, id?: string) {\r\n  const { playerState } = state.player;\r\n  return (\r\n    (!id || selectIsLoaded(state)(id)) && playerState === PlayerState.Playing\r\n  );\r\n}\r\n\r\nexport function selectCanPlayPause(state: CombinedState) {\r\n  const { player } = state;\r\n  return (\r\n    player.playerState !== PlayerState.None &&\r\n    player.currentTime !== player.duration\r\n  );\r\n}\r\n\r\nexport function selectCanSeek(state: CombinedState) {\r\n  return state.player.playerState !== PlayerState.None;\r\n}\r\n\r\nexport function selectCanNext(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  return trackIds.length > 1 && trackIndex < trackIds.length - 1;\r\n}\r\n\r\nexport function selectCanPrevious(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  return trackIds.length > 1 && trackIndex > 0;\r\n}\r\n\r\nexport function selectIsShuffled({ player }: CombinedState) {\r\n  return player.isShuffled;\r\n}\r\n\r\nexport function selectIsLooped({ player }: CombinedState) {\r\n  return player.isLooped;\r\n}\r\n\r\nexport interface Times {\r\n  duration: number;\r\n  currentTime: number;\r\n}\r\n\r\nexport const selectTimes = createSelector(\r\n  ({ player }: CombinedState) => player.duration,\r\n  ({ player }: CombinedState) => player.currentTime,\r\n  (duration: number, currentTime: number) => ({\r\n    duration,\r\n    currentTime\r\n  })\r\n);\r\n\r\nexport function selectVolume({ player }: CombinedState) {\r\n  return player.volume;\r\n}\r\n\r\nexport function selectIsMuted({ player }: CombinedState) {\r\n  return player.isMuted;\r\n}\r\n\r\nexport function selectCommand(state: CombinedState): Command {\r\n  return state.player.command;\r\n}\r\n","import { Album, Artist, Playlist } from \"../types\";\r\nimport {\r\n  ActionType,\r\n  SearchSuccessAction,\r\n  SelectAlbumAction,\r\n  SelectArtistAction,\r\n  SelectPlaylistAction\r\n} from \"../actions/search\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums as selectAlbumsById } from \"./albums\";\r\nimport { selectArtists as selectArtistsById } from \"./artists\";\r\nimport { selectPlaylists as selectPlaylistsById } from \"./playlists\";\r\n\r\nexport enum RecentType {\r\n  Album = \"ALBUM\",\r\n  Artist = \"ARTIST\",\r\n  Playlist = \"PLAYLIST\"\r\n}\r\n\r\nexport interface Recent {\r\n  name: string;\r\n  type: RecentType;\r\n}\r\n\r\nexport interface State {\r\n  albumIds: string[];\r\n  artistIds: string[];\r\n  playlistIds: string[];\r\n  recents: Recent[];\r\n}\r\n\r\nconst initialState: State = {\r\n  albumIds: [],\r\n  artistIds: [],\r\n  playlistIds: [],\r\n  recents: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.SearchSuccess]: (state: State, action: SearchSuccessAction) => {\r\n    const { results } = action.payload;\r\n    const { albums, artists, playlists } = results[Object.keys(results)[0]];\r\n    return {\r\n      ...state,\r\n      albumIds: albums,\r\n      artistIds: artists,\r\n      playlistIds: playlists\r\n    };\r\n  },\r\n  [ActionType.ClearResults]: () => initialState,\r\n  [ActionType.SelectAlbum]: (state: State, { payload }: SelectAlbumAction) => ({\r\n    ...state,\r\n    recents: [...state.recents, { type: RecentType.Album, name: payload.name }]\r\n  }),\r\n  [ActionType.SelectArtist]: (\r\n    state: State,\r\n    { payload }: SelectArtistAction\r\n  ) => ({\r\n    ...state,\r\n    recents: [...state.recents, { type: RecentType.Artist, name: payload.name }]\r\n  }),\r\n  [ActionType.selectPlaylist]: (\r\n    state: State,\r\n    { payload }: SelectPlaylistAction\r\n  ) => ({\r\n    ...state,\r\n    recents: [\r\n      ...state.recents,\r\n      { type: RecentType.Playlist, name: payload.name }\r\n    ]\r\n  })\r\n});\r\n\r\nexport function selectAlbums(state: CombinedState): Album[] {\r\n  return selectAlbumsById(state)(state.search.albumIds);\r\n}\r\n\r\nexport function selectArtists(state: CombinedState): Artist[] {\r\n  return selectArtistsById(state)(state.search.artistIds).sort(\r\n    (x, y) => y.popularity - x.popularity\r\n  );\r\n}\r\n\r\nexport function selectPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylistsById(state)(state.search.playlistIds);\r\n}\r\n","import { UserProfile } from \"../types\";\r\nimport { FetchDispatch, PayloadAction } from \"./types\";\r\n\r\nexport enum ActionType {\r\n  UserProfileRequest = \"USER_PROFILE_REQUEST\",\r\n  UserProfileSuccess = \"USER_PROFILE_SUCCESS\",\r\n  UserProfileFailure = \"USER_PROFILE_FAILURE\"\r\n}\r\n\r\nexport interface UserProfileSuccessAction\r\n  extends PayloadAction<ActionType.UserProfileSuccess, UserProfile> {}\r\n\r\nexport function getUserProfile() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UserProfileRequest,\r\n        ActionType.UserProfileSuccess,\r\n        ActionType.UserProfileFailure\r\n      ],\r\n      path: \"me\"\r\n    });\r\n  };\r\n}\r\n","import { UserProfile } from \"../types\";\r\nimport { ActionType, UserProfileSuccessAction } from \"../actions/userProfile\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.UserProfileSuccess]: (\r\n    state: State,\r\n    action: UserProfileSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    userProfile: action.payload\r\n  })\r\n});\r\n\r\nexport function selectUserProfile(\r\n  state: CombinedState\r\n): UserProfile | undefined {\r\n  return state.userProfile.userProfile;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport albums, { State as AlbumsState } from \"./albums\";\r\nimport artists, { State as ArtistsState } from \"./artists\";\r\nimport authorization, { State as AuthorizationState } from \"./authorization\";\r\nimport browse, { State as BrowseState } from \"./browse\";\r\nimport loading, { State as LoadingState } from \"./loading\";\r\nimport player, { State as PlayerState } from \"./player\";\r\nimport playlists, { State as PlaylistsState } from \"./playlists\";\r\nimport search, { State as SearchState } from \"./search\";\r\nimport tracks, { State as TracksState } from \"./tracks\";\r\nimport userProfile, { State as UserProfileState } from \"./userProfile\";\r\n\r\nexport interface State {\r\n  albums: AlbumsState;\r\n  artists: ArtistsState;\r\n  authorization: AuthorizationState;\r\n  browse: BrowseState;\r\n  loading: LoadingState;\r\n  player: PlayerState;\r\n  playlists: PlaylistsState;\r\n  search: SearchState;\r\n  tracks: TracksState;\r\n  userProfile: UserProfileState;\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  albums,\r\n  artists,\r\n  authorization,\r\n  browse,\r\n  loading,\r\n  player,\r\n  playlists,\r\n  search,\r\n  tracks,\r\n  userProfile\r\n});\r\n","const click = (props: any) => `\r\n  overflow: hidden;\r\n  position relative;\r\n  \r\n  &::before, &::after {\r\n    content: \"\";\r\n    height: 100%;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    background: ${props.theme.background.active};\r\n    opacity: 0;\r\n    transition: opacity .2s;\r\n  }\r\n  \r\n  &:not(:disabled):hover {\r\n    color: ${props.theme.foreground.default};\r\n  }\r\n\r\n  &:not(:disabled):hover::before {\r\n    background: ${props.theme.background.hover};\r\n  }\r\n\r\n  &:not(:disabled):active::after {\r\n    opacity: 1;\r\n    transition: 0s;\r\n  }\r\n`;\r\n\r\nexport { click };\r\n","import styled from \"styled-components\";\r\nimport { click } from \"../../styles/effects\";\r\n\r\nconst ButtonBase = styled.button`\r\n  ${click}\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.dark};\r\n  }\r\n`;\r\n\r\nexport default ButtonBase;\r\n","import styled from \"../../styles/styled\";\r\nimport ButtonBase from \"./ButtonBase\";\r\n\r\nconst Button = styled(ButtonBase)`\r\n  background: ${props => props.theme.primary};\r\n  border-radius: ${props => props.theme.thickness.medium}px;\r\n  color: ${props => props.theme.foreground.default};\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: ${props => props.theme.thickness.small}px\r\n    ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${props => props.theme.fontSize.extraLarge};\r\n  font-weight: ${props => props.theme.fontWeight.bold};\r\n  margin-bottom: ${props => props.theme.thickness.medium}px;\r\n  text-align: center;\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nexport default Heading;\r\n","import React, { HTMLAttributes } from \"react\";\r\n\r\nexport enum IconType {\r\n  Loop = \"loop\",\r\n  MusicNote = \"music_note\",\r\n  MusicOff = \"music_off\",\r\n  Pause = \"pause\",\r\n  Person = \"person\",\r\n  PlayArrow = \"play_arrow\",\r\n  PlaylistPlay = \"playlist_play\",\r\n  Refresh = \"refresh\",\r\n  Search = \"search\",\r\n  Shuffle = \"shuffle\",\r\n  SkipNext = \"skip_next\",\r\n  SkipPrevious = \"skip_previous\",\r\n  ViewModule = \"view_module\",\r\n  VolumeOff = \"volume_off\",\r\n  VolumeUp = \"volume_up\",\r\n  Wifi = \"wifi\"\r\n}\r\n\r\ninterface Props {\r\n  type: IconType;\r\n}\r\n\r\nfunction Icon({ className, type }: Props & HTMLAttributes<HTMLElement>) {\r\n  return <i className={`material-icons ${className}`}>{type}</i>;\r\n}\r\n\r\nexport default Icon;\r\n","import React, { useState, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport enum ImageShape {\r\n  Square = \"SQUARE\",\r\n  Round = \"ROUND\"\r\n}\r\n\r\nconst StyledImg = styled.img<{ shape: ImageShape; isLoaded: boolean }>`\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: auto;\r\n  object-fit: cover;\r\n  opacity: ${props => (props.isLoaded ? \"1\" : \"0\")}\r\n  width: 100%;\r\n  transition: opacity .2s;\r\n`;\r\n\r\nconst Container = styled.div<{ shape: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledText = styled.span`\r\n  font-size: ${props => props.theme.thickness.extraLarge}px;\r\n  font-weight: ${props => props.theme.fontWeight.light}\r\n  left: 50%;\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\ninterface Props {\r\n  source?: string;\r\n  shape: ImageShape;\r\n}\r\n\r\nfunction Image({\r\n  className,\r\n  source,\r\n  shape\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  function handleLoad() {\r\n    setIsLoaded(true);\r\n  }\r\n\r\n  return source ? (\r\n    <StyledImg\r\n      className={className}\r\n      src={source}\r\n      shape={shape}\r\n      onLoad={handleLoad}\r\n      isLoaded={isLoaded}\r\n    />\r\n  ) : (\r\n    <Container className={className} shape={shape}>\r\n      <StyledText>?</StyledText>\r\n    </Container>\r\n  );\r\n}\r\n\r\nImage.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default Image;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonBase from \"./ButtonBase\";\r\nimport Icon, { IconType } from \"./Icon\";\r\n\r\nconst StyedButton = styled(ButtonBase)`\r\n  border-radius: 50%;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  margin: ${props => props.theme.thickness.extraSmall}px\r\n    ${props => props.theme.thickness.small}px;\r\n  padding: ${props => props.theme.thickness.extraSmall}px;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.darker};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  font-size: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nexport interface Props {\r\n  iconType: IconType;\r\n}\r\n\r\nfunction RoundButton({\r\n  iconType,\r\n  ...rest\r\n}: Props & ButtonHTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <StyedButton {...rest}>\r\n      <StyledIcon type={iconType} />\r\n    </StyedButton>\r\n  );\r\n}\r\n\r\nexport default RoundButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst Text = styled.span`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport default Text;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport RoundButton, { Props as RoundButtonProps } from \"./RoundButton\";\r\n\r\nconst StyledRoundButton = styled(RoundButton)<{ isToggled: boolean }>`\r\n  ${props => props.isToggled && `color: ${props.theme.primary};`}\r\n\r\n  &:not(:disabled):hover {\r\n    ${props => props.isToggled && `color: ${props.theme.primary};`}\r\n  }\r\n`;\r\n\r\ninterface Props extends RoundButtonProps {\r\n  isToggled: boolean;\r\n}\r\n\r\nfunction ToggleButton({\r\n  iconType,\r\n  isToggled,\r\n  ...rest\r\n}: Props & ButtonHTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <StyledRoundButton {...rest} iconType={iconType} isToggled={isToggled} />\r\n  );\r\n}\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Icon, IconType, Text } from \"../core\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledText = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.large};\r\n  font-weight: ${props => props.theme.fontWeight.bold};\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst Title = () => {\r\n  return (\r\n    <StyledLink to={`${process.env.PUBLIC_URL}/browse`}>\r\n      <StyledIcon type={IconType.Wifi} />\r\n      <StyledText>Spotify</StyledText>\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst User = (props: UserProfile) => {\r\n  const { display_name } = props;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledIcon type={IconType.Person} />\r\n      <span>{display_name}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { getUserProfile } from \"../../actions/userProfile\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoggedIn } from \"../../reducers/authorization\";\r\nimport { selectUserProfile } from \"../../reducers/userProfile\";\r\nimport Title from \"./Title\";\r\nimport User from \"./User\";\r\n\r\nconst Wrapper = styled.header`\r\n  align-items: center;\r\n  display: flex;\r\n  background: ${props => props.theme.primary};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  justify-content: space-between;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  z-index: 2;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.large}px;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  userProfile?: UserProfile;\r\n  getUserProfile: () => void;\r\n}\r\n\r\nfunction Header({\r\n  className,\r\n  isLoggedIn,\r\n  userProfile,\r\n  getUserProfile\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const effect = () => {\r\n    if (isLoggedIn) {\r\n      getUserProfile();\r\n    }\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Title />\r\n      {userProfile && <User {...userProfile} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state),\r\n  userProfile: selectUserProfile(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getUserProfile\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Header);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { click } from \"../../styles/effects\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst Wrapper = styled.ul`\r\n  background: ${props => props.theme.background.dark};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 0;\r\n  justify-content: center;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  width: 100%;\r\n  z-index: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    box-shadow: 2px 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    padding: ${props => props.theme.thickness.medium}px 0;\r\n    width: ${props => props.theme.thickness.extraExtraLarge}px;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  ${click}\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    border-bottom: ${props => props.theme.thickness.extraExtraSmall}px solid\r\n      ${props => props.theme.primaryLight};\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.large}px;\r\n\r\n    &.active {\r\n      border: none;\r\n      border-right: ${props => props.theme.thickness.extraExtraSmall}px solid\r\n        ${props => props.theme.primaryLight};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst Text = styled.span``;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <Wrapper>\r\n      <li>\r\n        <StyledNavLink to={`${process.env.PUBLIC_URL}/browse`}>\r\n          <StyledIcon type={IconType.ViewModule} />\r\n          <Text>Browse</Text>\r\n        </StyledNavLink>\r\n      </li>\r\n      <li>\r\n        <StyledNavLink to={`${process.env.PUBLIC_URL}/search`}>\r\n          <StyledIcon type={IconType.Search} />\r\n          <Text>Search</Text>\r\n        </StyledNavLink>\r\n      </li>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { Artist, Image } from \"../types\";\r\n\r\nexport function getArtistNames(artists: Artist[]): string {\r\n  return artists.map(artist => artist.name).join(\", \");\r\n}\r\n\r\nexport function getImageSource(object: {\r\n  images: Image[];\r\n}): string | undefined {\r\n  return object && object.images && object.images.length\r\n    ? object.images[0].url\r\n    : undefined;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist } from \"../../types\";\r\n\r\nconst List = styled.ul`\r\n  color: ${props => props.theme.foreground.dark};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  margin-right: ${props => props.theme.thickness.extraSmall}px;\r\n\r\n  :not(:last-child)::after {\r\n    content: \",\";\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${props => props.theme.foreground.dark};\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nfunction ArtistList({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <List>\r\n      {artists.map(artist => (\r\n        <Item key={artist.id}>\r\n          <StyledLink to={`${process.env.PUBLIC_URL}/artist/${artist.id}`}>\r\n            {artist.name}\r\n          </StyledLink>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default ArtistList;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Album, Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { Image, Text } from \"../core\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport {\r\n  selectLoadedArtists,\r\n  selectLoadedAlbum,\r\n  selectLoadedTrack\r\n} from \"../../reducers/player\";\r\nimport ArtistList from \"./ArtistList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyedImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  height: 75px;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  width: 75px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  track?: Track;\r\n  album?: Album;\r\n  artists: Artist[];\r\n}\r\n\r\nfunction TrackInfos({\r\n  className,\r\n  track,\r\n  album,\r\n  artists\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <Wrapper className={className}>\r\n      {album && (\r\n        <Link to={`${process.env.PUBLIC_URL}/album/${album.id}`}>\r\n          <StyedImage source={getImageSource(album)} />\r\n        </Link>\r\n      )}\r\n      <Container>\r\n        {track && <Title>{track.name}</Title>}\r\n        <ArtistList artists={artists} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  track: selectLoadedTrack(state),\r\n  album: selectLoadedAlbum(state),\r\n  artists: selectLoadedArtists(state)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(TrackInfos);\r\n","import React, { useEffect, useRef, SyntheticEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectLoadedTrack,\r\n  Times,\r\n  selectTimes,\r\n  selectVolume,\r\n  selectIsMuted,\r\n  Command,\r\n  selectCommand\r\n} from \"../../reducers/player\";\r\nimport {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n} from \"../../actions/player\";\r\n\r\ninterface Props {\r\n  loadedTrack?: Track;\r\n  times: Times;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n  trackLoaded: (duration: number) => void;\r\n  playing: () => void;\r\n  update: (elaped: number) => void;\r\n  paused: () => void;\r\n  seeked: () => void;\r\n  volumeChanged: () => void;\r\n  ended: () => void;\r\n}\r\n\r\nfunction Audio({\r\n  loadedTrack,\r\n  times,\r\n  volume,\r\n  isMuted,\r\n  command,\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n}: Props) {\r\n  const audio = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    const currentAudio = audio.current;\r\n\r\n    if (currentAudio) {\r\n      const { currentTime } = times;\r\n\r\n      switch (command) {\r\n        case Command.Play:\r\n          currentAudio.play();\r\n          break;\r\n        case Command.Pause:\r\n          currentAudio.pause();\r\n          break;\r\n        case Command.Seek:\r\n          currentAudio.currentTime = currentTime;\r\n          break;\r\n        case Command.ChangeVolume:\r\n          currentAudio.volume = isMuted ? 0 : volume;\r\n      }\r\n    }\r\n  });\r\n\r\n  function handleLoadedMetadata(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    trackLoaded(target.duration);\r\n  }\r\n\r\n  function handleTimeUpdate(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    update(target.currentTime);\r\n  }\r\n\r\n  function handlePause(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    if (target.currentTime !== target.duration) {\r\n      paused();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <audio\r\n      ref={audio}\r\n      src={loadedTrack && loadedTrack.preview_url}\r\n      onLoadedMetadata={handleLoadedMetadata}\r\n      onPlay={playing}\r\n      onTimeUpdate={handleTimeUpdate}\r\n      onPause={handlePause}\r\n      onSeeked={seeked}\r\n      onVolumeChange={volumeChanged}\r\n      onEnded={ended}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  loadedTrack: selectLoadedTrack(state),\r\n  times: selectTimes(state),\r\n  volume: selectVolume(state),\r\n  isMuted: selectIsMuted(state),\r\n  command: selectCommand(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Audio);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { State } from \"../../reducers\";\r\nimport { IconType, RoundButton, ToggleButton } from \"../core\";\r\nimport {\r\n  selectCanNext,\r\n  selectCanPrevious,\r\n  selectCanPlayPause,\r\n  selectIsLooped,\r\n  selectIsPlaying,\r\n  selectIsShuffled\r\n} from \"../../reducers/player\";\r\nimport {\r\n  next,\r\n  previous,\r\n  toggleLoop,\r\n  playPause,\r\n  toggleShuffle\r\n} from \"../../actions/player\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ShuffleButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Shuffle\r\n}))``;\r\n\r\nconst PreviousButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.SkipPrevious\r\n}))``;\r\n\r\ninterface PlayButtonProps {\r\n  isPlaying: boolean;\r\n}\r\n\r\nconst PlayButton = styled(RoundButton).attrs<\r\n  PlayButtonProps,\r\n  { iconType: IconType }\r\n>(({ isPlaying }) => ({\r\n  iconType: isPlaying ? IconType.Pause : IconType.PlayArrow\r\n}))<PlayButtonProps>`\r\n  transform: scale(1.25);\r\n`;\r\n\r\nconst NextButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.SkipNext\r\n}))``;\r\n\r\nconst LoopButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Loop\r\n}))``;\r\n\r\ninterface Props {\r\n  isPlaying: boolean;\r\n  isShuffled: boolean;\r\n  canPrevious: boolean;\r\n  canPlayPause: boolean;\r\n  canNext: boolean;\r\n  isLooped: boolean;\r\n  toggleShuffle: () => void;\r\n  previous: () => void;\r\n  playPause: () => void;\r\n  next: () => void;\r\n  toggleLoop: () => void;\r\n}\r\n\r\nfunction Controls({\r\n  isPlaying,\r\n  isShuffled,\r\n  canPrevious,\r\n  canPlayPause,\r\n  canNext,\r\n  isLooped,\r\n  toggleShuffle,\r\n  previous,\r\n  playPause,\r\n  next,\r\n  toggleLoop\r\n}: Props) {\r\n  return (\r\n    <Wrapper>\r\n      <ShuffleButton onClick={toggleShuffle} isToggled={isShuffled} />\r\n      <PreviousButton disabled={!canPrevious} onClick={previous} />\r\n\r\n      <PlayButton\r\n        disabled={!canPlayPause}\r\n        onClick={playPause}\r\n        isPlaying={isPlaying}\r\n      />\r\n\r\n      <NextButton disabled={!canNext} onClick={next} />\r\n      <LoopButton onClick={toggleLoop} isToggled={isLooped} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isPlaying: selectIsPlaying(state),\r\n  isShuffled: selectIsShuffled(state),\r\n  canPrevious: selectCanPrevious(state),\r\n  canPlayPause: selectCanPlayPause(state),\r\n  canNext: selectCanNext(state),\r\n  isLooped: selectIsLooped(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  toggleShuffle,\r\n  previous,\r\n  playPause,\r\n  next,\r\n  toggleLoop\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Controls);\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div<{ isDisabled: boolean }>`\r\n  border-radius: ${props => props.theme.thickness.extraExtraSmall}px;\r\n  cursor: ${props => (props.isDisabled ? \"default\" : \"pointer\")};\r\n  padding: 0 ${props => props.theme.thickness.small}px\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.medium}px;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst Left = styled.div.attrs<{ width: number }>(props => ({\r\n  style: { width: `${props.width * 100}%` }\r\n}))<{ width: number }>`\r\n  background: ${props => props.theme.primaryLight};\r\n  border-radius: ${props => props.theme.thickness.extraExtraSmall}px 0 0\r\n    ${props => props.theme.thickness.extraExtraSmall}px;\r\n  height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n`;\r\n\r\nconst Thumb = styled.div.attrs<{ position: number }>(({ position }) => ({\r\n  style: { left: `${position * 100}%` }\r\n}))<{ position: number }>`\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  height: ${props => props.theme.thickness.medium}px;\r\n  margin-left: -12.5px;\r\n  position: absolute;\r\n  visibility: hidden;\r\n  width: ${props => props.theme.thickness.medium}px;\r\n  z-index: 1;\r\n  transition: left 0.2s;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.default};\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    content: \"\";\r\n    height: 50%;\r\n    left: 25%;\r\n    position: absolute;\r\n    top: 25%;\r\n    width: 50%;\r\n  }\r\n\r\n  ${Wrapper}:hover & {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div.attrs<{ width: number }>(props => ({\r\n  style: { width: `${100 - props.width * 100}%` }\r\n}))<{ width: number }>`\r\n  background: ${props => props.theme.foreground.dark};\r\n  border-radius: 0 ${props => props.theme.thickness.extraExtraSmall}px\r\n    ${props => props.theme.thickness.extraExtraSmall}px 0;\r\n  height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  className?: string;\r\n  value: number;\r\n  canChange: boolean;\r\n  onChange: (value: number) => void;\r\n}\r\n\r\nfunction Slider({ className, value, canChange, onChange }: Props) {\r\n  const [isDown, setIsDown] = useState(false);\r\n  const [localValue, setLocalValue] = useState(0);\r\n\r\n  const wrapper = useRef<HTMLDivElement>(null);\r\n  const thumb = useRef<HTMLDivElement>(null);\r\n\r\n  function getValue(x: number) {\r\n    const currentWrapper = wrapper.current;\r\n    const currentTHunb = thumb.current;\r\n    if (!currentWrapper || !currentTHunb) {\r\n      return 0;\r\n    }\r\n\r\n    const clientRect = currentWrapper.getBoundingClientRect();\r\n    let value = (x - clientRect.left) / currentWrapper.clientWidth;\r\n    if (value < 0) {\r\n      value = 0;\r\n    } else if (value > 1) {\r\n      value = 1;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleMouseDown(event: React.MouseEvent<HTMLElement>) {\r\n    if (!canChange) {\r\n      return;\r\n    }\r\n\r\n    setIsDown(true);\r\n    setLocalValue(getValue(event.pageX));\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n  }\r\n\r\n  function handleMouseMove(event: MouseEvent) {\r\n    setLocalValue(getValue(event.pageX));\r\n  }\r\n\r\n  function handleMouseUp(event: MouseEvent) {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    setIsDown(false);\r\n    const value = getValue(event.pageX);\r\n    onChange(value);\r\n  }\r\n\r\n  function getCurrentValue() {\r\n    return isDown ? localValue : value;\r\n  }\r\n\r\n  const currentValue = getCurrentValue();\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapper}\r\n      onMouseDown={handleMouseDown}\r\n      isDisabled={!canChange}\r\n      className={className}\r\n    >\r\n      <Container>\r\n        <Left width={currentValue} />\r\n        {canChange && <Thumb ref={thumb} position={currentValue} />}\r\n        <Right width={currentValue} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nSlider.defaultProps = {\r\n  value: 0,\r\n  canChange: true,\r\n  onChange: () => {}\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-cotent: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProgressTime = styled.div`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.fontSize.small};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n`;\r\n\r\ninterface Props {\r\n  duration: number;\r\n  currentTime: number;\r\n  canSeek: boolean;\r\n  onSeek: (time: number) => void;\r\n}\r\n\r\nfunction Playback({ duration, currentTime, canSeek, onSeek }: Props) {\r\n  function renderTime(seconds: number) {\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.round(seconds);\r\n\r\n    return (\r\n      <ProgressTime>\r\n        {`${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`}\r\n      </ProgressTime>\r\n    );\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    onSeek(duration * value);\r\n  }\r\n\r\n  const progress = duration ? currentTime / duration : 0;\r\n\r\n  return (\r\n    <Wrapper>\r\n      {renderTime(currentTime)}\r\n      <Slider value={progress} onChange={handleChange} canChange={canSeek} />\r\n      {renderTime(duration)}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Playback;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { changeVolume } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectVolume, selectIsMuted } from \"../../reducers/player\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\ninterface VolumeButtonProps {\r\n  isMuted: boolean;\r\n}\r\n\r\nconst VolumeButton = styled(RoundButton).attrs<\r\n  VolumeButtonProps,\r\n  { iconType: IconType }\r\n>(({ isMuted }) => ({\r\n  iconType: isMuted ? IconType.VolumeOff : IconType.VolumeUp\r\n}))<VolumeButtonProps>`\r\n  margin: 0;\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\ninterface Props {\r\n  volume: number;\r\n  isMuted: boolean;\r\n  changeVolume: (volume: number, isMuted: boolean) => void;\r\n}\r\n\r\nfunction Volume({ volume, isMuted, changeVolume }: Props) {\r\n  function handleClick() {\r\n    changeVolume(volume, !isMuted);\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    changeVolume(value, false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <VolumeButton isMuted={isMuted || !volume} onClick={handleClick} />\r\n      <StyledSlider value={isMuted ? 0 : volume} onChange={handleChange} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  volume: selectVolume(state),\r\n  isMuted: selectIsMuted(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  changeVolume\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Volume);\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { State } from \"../../reducers\";\r\nimport { Times, selectTimes, selectCanSeek } from \"../../reducers/player\";\r\nimport { seek } from \"../../actions/player\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport TrackInfos from \"./TrackInfos\";\r\nimport Audio from \"./Audio\";\r\nimport Controls from \"./Controls\";\r\nimport Playback from \"./Playback\";\r\nimport Volume from \"./Volume\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  background: ${props => props.theme.background.light};\r\n  box-sizing: border-box;\r\n  box-shadow: 0 -2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.extraLarge}px;\r\n  padding: ${props => props.theme.thickness.small}px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst ThirdWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftWrapper = styled(ThirdWrapper)`\r\n  display: none;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    display: block;\r\n    min-width: 25%;\r\n  }\r\n`;\r\n\r\nconst CenterWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.small}px;\r\n    max-width: 50%;\r\n  }\r\n`;\r\n\r\nconst RightWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: none;\r\n  justify-content: flex-end;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    display: flex;\r\n    min-width: 25%;\r\n  }\r\n`;\r\n\r\nconst QueueButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.PlaylistPlay\r\n}))`\r\n  flex-shrink: 0;\r\n  margin: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  times: Times;\r\n  canSeek: boolean;\r\n  seek: (time: number) => void;\r\n}\r\n\r\nfunction Player({\r\n  className,\r\n  history,\r\n  times,\r\n  canSeek,\r\n  seek\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  function handleQueueClick() {\r\n    history.push(`${process.env.PUBLIC_URL}/queue`);\r\n  }\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <LeftWrapper>\r\n        <TrackInfos />\r\n      </LeftWrapper>\r\n\r\n      <CenterWrapper>\r\n        <Controls />\r\n\r\n        <Playback\r\n          duration={times.duration}\r\n          currentTime={times.currentTime}\r\n          canSeek={canSeek}\r\n          onSeek={seek}\r\n        />\r\n      </CenterWrapper>\r\n\r\n      <RightWrapper>\r\n        <QueueButton onClick={handleQueueClick} />\r\n        <Volume />\r\n      </RightWrapper>\r\n\r\n      <Audio />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  times: selectTimes(state),\r\n  canSeek: selectCanSeek(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  seek\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Player)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nfunction DefaultRoute({ from, to }: Props) {\r\n  return <Route exact path={from} render={() => <Redirect to={to} />} />;\r\n}\r\n\r\nexport default DefaultRoute;\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoggedIn } from \"../reducers/authorization\";\r\n\r\ninterface Props extends RouteProps {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nfunction PrivateRoute({\r\n  component: Component,\r\n  isLoggedIn,\r\n  ...rest\r\n}: Props & RouteComponentProps) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? (\r\n          Component && <Component {...props} />\r\n        ) : (\r\n          <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    null\r\n  )(PrivateRoute)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Heading } from \"../core\";\r\nimport { logInRedirect } from \"../../utils/authorization\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\nfunction LogIn() {\r\n  function handleCLick() {\r\n    logInRedirect();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>You are not logged in.</Heading>\r\n      <StyledButton onClick={handleCLick}>Log In</StyledButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Image, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { ImageShape } from \"../core/Image\";\r\n\r\nconst StyledList = styled.ul`\r\n  align-content: flex-start;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -12.5px;\r\n`;\r\n\r\nfunction splitWidth(times: number) {\r\n  return `calc((100% - ${times * 25}px) / ${times})`;\r\n}\r\n\r\nconst StyledItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: ${props => props.theme.thickness.small}px;\r\n  width: ${splitWidth(2)};\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    width: ${splitWidth(3)};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    width: ${splitWidth(6)};\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(ButtonBase)<{ type: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.type === ImageShape.Round && \"border-radius: 50%;\"}\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  margin-bottom: ${props => props.theme.thickness.small}px;\r\n  padding-top: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledImge = styled(Image)`\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport interface Cover {\r\n  id: string;\r\n  image?: string;\r\n  title: string;\r\n  subTitle?: string;\r\n}\r\n\r\nfunction Cover({\r\n  cover,\r\n  shape: type,\r\n  onClick\r\n}: {\r\n  cover: Cover;\r\n  shape: ImageShape;\r\n  onClick: (coverId: string) => void;\r\n}) {\r\n  function handleClick() {\r\n    onClick(cover.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledButton onClick={handleClick} type={type}>\r\n        <StyledImge source={cover.image} />\r\n      </StyledButton>\r\n      <Title>{cover.title}</Title>\r\n      {cover.subTitle && <SubTitle>{cover.subTitle}</SubTitle>}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  covers: Cover[];\r\n  shape: ImageShape;\r\n  onClick: (id: string) => void;\r\n}\r\n\r\nfunction Covers({ covers, shape, onClick }: Props) {\r\n  return (\r\n    <StyledList>\r\n      {covers.map(cover => (\r\n        <StyledItem key={cover.id}>\r\n          <Cover cover={cover} shape={shape} onClick={onClick} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nCovers.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default Covers;\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category } from \"../../types\";\r\nimport Covers, { Cover } from \"./Covers\";\r\n\r\nfunction getCovers(categories: Category[]): Cover[] {\r\n  return categories.map(category => ({\r\n    id: category.id,\r\n    image:\r\n      category.icons && category.icons.length\r\n        ? category.icons[0].url\r\n        : undefined,\r\n    title: category.name\r\n  }));\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  categories: Category[];\r\n}\r\n\r\nfunction CategoryCovers({ history, categories }: Props) {\r\n  function handleClick(categoryId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/category/${categoryId}`);\r\n  }\r\n\r\n  const covers = getCovers(categories);\r\n  return <Covers covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nexport default withRouter(CategoryCovers);\r\n","import React, { ComponentType, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport styled from \"../styles/styled\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoading } from \"../reducers/loading\";\r\n\r\nconst Fader = styled.div<{ isLoading: boolean }>`\r\n  opacity: ${props => (props.isLoading ? \"0\" : \"1\")};\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n`;\r\n\r\nconst Loader = styled.div<{ isLoading: boolean }>`\r\n  height: 5px;\r\n  left: 0;\r\n  position: absolute;\r\n  opacity: ${props => (props.isLoading ? \"1\" : \"0\")};\r\n  top: 0;\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.dark};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    animation: transform 2s linear infinite;\r\n    background: ${props => props.theme.foreground.default};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    transform-origin: 0;\r\n    width: 100%;\r\n\r\n    @keyframes transform {\r\n      0% {\r\n        left: 0;\r\n        width: 0;\r\n      }\r\n      50% {\r\n        left: 0;\r\n        width: 100%;\r\n      }\r\n      100% {\r\n        left: 100%;\r\n        width: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst withLoader = (WrappedComponent: ComponentType<any>) => {\r\n  const WithLoader = ({ match, isLoading, ...rest }: any) => {\r\n    const [prevUrl, setPrevUrl] = useState(match.url);\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setHasLoaded(!isLoading);\r\n    }, [isLoading]);\r\n\r\n    if (prevUrl !== match.url) {\r\n      setHasLoaded(false);\r\n      setPrevUrl(match.url);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Loader isLoading={!hasLoaded || isLoading} />\r\n        <Fader isLoading={!hasLoaded || isLoading}>\r\n          <WrappedComponent {...rest} />\r\n        </Fader>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const mapState = (state: State) => ({\r\n    isLoading: selectIsLoading(state)\r\n  });\r\n\r\n  return withRouter(\r\n    //@ts-ignore\r\n    connect(\r\n      mapState,\r\n      null\r\n    )(WithLoader)\r\n  );\r\n};\r\n\r\nexport default withLoader;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Category } from \"../../types\";\r\nimport { getCategories } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategories } from \"../../reducers/browse\";\r\nimport CategoryCovers from \"../covers/CategoryCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  categories: Category[];\r\n  getCategories: () => void;\r\n}\r\n\r\nfunction Categories({ categories, getCategories }: Props) {\r\n  useEffect(getCategories, []);\r\n\r\n  return <CategoryCovers categories={categories} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  categories: selectCategories(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getCategories: getCategories\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Categories)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist } from \"../../types\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport Covers, { Cover } from \"./Covers\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectAlbumArtists } from \"../../reducers/albums\";\r\n\r\nfunction getCovers(\r\n  albums: Album[],\r\n  selectAlbumArtists: (albumId: string) => Artist[]\r\n): Cover[] {\r\n  return albums.map(album => {\r\n    const artists = selectAlbumArtists(album.id);\r\n    return {\r\n      id: album.id,\r\n      image: getImageSource(album),\r\n      title: album.name,\r\n      subTitle: getArtistNames(artists)\r\n    };\r\n  });\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  albums: Album[];\r\n  selectAbumArtists: (albumId: string) => Artist[];\r\n  onSelect?: (albumId: string) => void;\r\n}\r\n\r\nfunction AlbumCovers({ history, albums, selectAbumArtists, onSelect }: Props) {\r\n  function handleClick(albumId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/album/${albumId}`);\r\n    onSelect && onSelect(albumId);\r\n  }\r\n\r\n  const covers = getCovers(albums, selectAbumArtists);\r\n  return <Covers covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nconst mapDispatch = (state: State) => ({\r\n  selectAbumArtists: selectAlbumArtists(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapDispatch,\r\n    null\r\n  )(AlbumCovers)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Album } from \"../../types\";\r\nimport { getNewReleases } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectNewReleases } from \"../../reducers/browse\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  getAlbums: () => void;\r\n}\r\n\r\nfunction NewReleases({ albums, getAlbums }: Props) {\r\n  useEffect(getAlbums, []);\r\n\r\n  return <AlbumCovers albums={albums} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectNewReleases(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getAlbums: getNewReleases\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(NewReleases)\r\n);\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport Covers, { Cover } from \"./Covers\";\r\n\r\nfunction getCovers(playlists: Playlist[]): Cover[] {\r\n  return playlists.map(playlist => ({\r\n    id: playlist.id,\r\n    image: getImageSource(playlist),\r\n    title: playlist.name,\r\n    subTitle: playlist.owner.display_name\r\n  }));\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  playlists: Playlist[];\r\n  onSelect?: (playlistId: string) => void;\r\n}\r\n\r\nfunction PlayistCovers({ history, playlists, onSelect }: Props) {\r\n  function handleClick(playlistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/playlist/${playlistId}`);\r\n    onSelect && onSelect(playlistId);\r\n  }\r\n\r\n  const covers = getCovers(playlists);\r\n  return <Covers covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nexport default withRouter(PlayistCovers);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getFeaturedPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectFeaturedPlaylists } from \"../../reducers/browse\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  playlists: Playlist[];\r\n  getPlaylists: () => void;\r\n}\r\n\r\nfunction FeaturedPlaylists({ playlists, getPlaylists }: Props) {\r\n  useEffect(getPlaylists, []);\r\n\r\n  return <PlaylistCovers playlists={playlists} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  playlists: selectFeaturedPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getPlaylists: getFeaturedPlaylists\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(FeaturedPlaylists)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  RouteComponentProps,\r\n  NavLink,\r\n  Route,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport Categories from \"./Categories\";\r\nimport NewReleases from \"./NewReleases\";\r\nimport FeaturedPlaylists from \"./FeaturedPlaylists\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  justify-content: center;\r\n  margin-bottom: 0;\r\n  position: relative;\r\n  top: -25px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    margin-bottom: ${props => props.theme.thickness.medium}px;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  justify-content: center;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active::after {\r\n    background: ${props => props.theme.primaryLight};\r\n    bottom: 0;\r\n    content: \"\";\r\n    height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, 0);\r\n    width: ${props => props.theme.thickness.large}px;\r\n  }\r\n`;\r\n\r\nconst links = [\r\n  {\r\n    url: \"categories\",\r\n    label: \"Categories\"\r\n  },\r\n  {\r\n    url: \"new-releases\",\r\n    label: \"New Releases\"\r\n  },\r\n  {\r\n    url: \"featured-playists\",\r\n    label: \"Featured Playlists\"\r\n  }\r\n];\r\n\r\nfunction Browse({ match }: RouteComponentProps) {\r\n  return (\r\n    <Wrapper>\r\n      <StyledList>\r\n        {links.map(link => (\r\n          <li key={link.url}>\r\n            <StyledNavLink to={`${match.url}/${link.url}`}>\r\n              {link.label}\r\n            </StyledNavLink>\r\n          </li>\r\n        ))}\r\n      </StyledList>\r\n\r\n      <DefaultRoute from={`${match.path}`} to={`${match.path}/categories`} />\r\n      <Route exact path={`${match.path}/categories`} component={Categories} />\r\n      <Route path={`${match.path}/new-releases`} component={NewReleases} />\r\n      <Route\r\n        path={`${match.path}/featured-playists`}\r\n        component={FeaturedPlaylists}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default withRouter(Browse);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category, Playlist } from \"../../types\";\r\nimport { getCategory, getCategoryPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategory, selectCategoryPlaylists } from \"../../reducers/browse\";\r\nimport { Heading } from \"../core\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Params {\r\n  categoryId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  category?: Category;\r\n  playlists: Playlist[];\r\n  getCategory: (categoryId: string) => void;\r\n  getPlaylists: (categoryId: string) => void;\r\n}\r\n\r\nfunction CategoryPlaylists({\r\n  match,\r\n  category,\r\n  playlists,\r\n  getCategory,\r\n  getPlaylists\r\n}: Props) {\r\n  const effect = () => {\r\n    const { categoryId } = match.params;\r\n    if (!category) {\r\n      getCategory(categoryId);\r\n    }\r\n    getPlaylists(categoryId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <div>\r\n      <Heading>{category && category.name}</Heading>\r\n      <PlaylistCovers playlists={playlists} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, { match }: Props) => {\r\n  const categoryId = match.params.categoryId;\r\n\r\n  return {\r\n    category: selectCategory(state, categoryId),\r\n    playlists: selectCategoryPlaylists(state)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getCategory: (categoryId: string) => getCategory(categoryId),\r\n  getPlaylists: (categoryId: string) => getCategoryPlaylists(categoryId)\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(CategoryPlaylists)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Artist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport Covers, { Cover } from \"./Covers\";\r\n\r\nfunction getCovers(artists: Artist[]): Cover[] {\r\n  return artists.map(artist => ({\r\n    id: artist.id,\r\n    image: getImageSource(artist),\r\n    title: artist.name\r\n  }));\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  artists: Artist[];\r\n  onSelect?: (artistId: string) => void;\r\n}\r\n\r\nfunction ArtistCovers({ history, artists, onSelect }: Props) {\r\n  function handleClick(artistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/artist/${artistId}`);\r\n    onSelect && onSelect(artistId);\r\n  }\r\n\r\n  const covers = getCovers(artists);\r\n  return (\r\n    <Covers covers={covers} shape={ImageShape.Round} onClick={handleClick} />\r\n  );\r\n}\r\n\r\nexport default withRouter(ArtistCovers);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport {\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n} from \"../../actions/search\";\r\nimport { Heading } from \"../core\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: ${props => props.theme.thickness.large}px;\r\n`;\r\n\r\ninterface ArtistsProps {\r\n  artists: Artist[];\r\n  selectArtist: (artistId: string) => void;\r\n}\r\n\r\nfunction Artists({ artists, selectArtist }: ArtistsProps) {\r\n  return (\r\n    <>\r\n      {artists.length > 0 && (\r\n        <Section>\r\n          <Heading>Artists</Heading>\r\n          <ArtistCovers artists={artists} onSelect={selectArtist} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface AlbumsProps {\r\n  albums: Album[];\r\n  selectAlbum: (albumId: string) => void;\r\n}\r\n\r\nfunction Albums({ albums, selectAlbum }: AlbumsProps) {\r\n  return (\r\n    <>\r\n      {albums.length > 0 && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} onSelect={selectAlbum} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface PlaylistsProps {\r\n  playlists: Playlist[];\r\n  selectPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction Playlists({ playlists, selectPlaylist }: PlaylistsProps) {\r\n  return (\r\n    <>\r\n      {playlists.length > 0 && (\r\n        <Section>\r\n          <Heading>Playlists</Heading>\r\n          <PlaylistCovers playlists={playlists} onSelect={selectPlaylist} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  selectAlbum: (albumId: string) => void;\r\n  selectArtist: (artistId: string) => void;\r\n  selectPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction Results({\r\n  albums,\r\n  artists,\r\n  playlists,\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n}: Props) {\r\n  return (\r\n    <>\r\n      <Artists artists={artists} selectArtist={selectArtist} />\r\n      <Albums albums={albums} selectAlbum={selectAlbum} />\r\n      <Playlists playlists={playlists} selectPlaylist={selectPlaylist} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatch = {\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    null,\r\n    mapDispatch\r\n  )(Results)\r\n);\r\n","import _ from \"lodash\";\r\nimport React, { useState, ChangeEvent, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { search } from \"../../actions/search\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoading } from \"../../reducers/loading\";\r\nimport {\r\n  selectAlbums,\r\n  selectArtists,\r\n  selectPlaylists\r\n} from \"../../reducers/search\";\r\nimport Results from \"./Results\";\r\nimport { Heading } from \"../core\";\r\n\r\nconst StyledInput = styled.input`\r\n  background: ${props => props.theme.background.light}\r\n  border: none;\r\n  border-radius: ${props => props.theme.thickness.medium}px;\r\n  caret-color: ${props => props.theme.primaryLight}\r\n  color: ${props => props.theme.foreground.default}\r\n  font-size: ${props => props.theme.fontSize.extraLarge}\r\n  font-weight: ${props => props.theme.fontWeight.light}\r\n  height: ${props => props.theme.thickness.large}px;\r\n  margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  width: calc(100% - ${props => props.theme.thickness.large}px);\r\n`;\r\n\r\ninterface Params {\r\n  query: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  isLoading: boolean;\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  search: (query: string) => void;\r\n}\r\n\r\nlet debounced: (query: string) => void;\r\n\r\nfunction Search({\r\n  history,\r\n  match,\r\n  isLoading,\r\n  albums,\r\n  artists,\r\n  playlists,\r\n  search\r\n}: Props) {\r\n  const { query } = match.params;\r\n  const [value, setValue] = useState(query || \"\");\r\n\r\n  const effect = () => {\r\n    search(value);\r\n    debounced = _.debounce((query: string) => {\r\n      history.push(`${process.env.PUBLIC_URL}/search${query && \"/\"}${query}`);\r\n      search(query);\r\n    }, 500);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { value } = event.target;\r\n    setValue(value);\r\n    debounced(value);\r\n  }\r\n\r\n  const hasResults =\r\n    isLoading || artists.length || albums.length || playlists.length;\r\n  return (\r\n    <>\r\n      <StyledInput\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n        autoFocus\r\n      />\r\n      {query &&\r\n        (hasResults ? (\r\n          <Results artists={artists} albums={albums} playlists={playlists} />\r\n        ) : (\r\n          <Heading>No Results found for '{query}'.</Heading>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoading: selectIsLoading(state),\r\n  albums: selectAlbums(state),\r\n  artists: selectArtists(state),\r\n  playlists: selectPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  search\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Search)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Image, Text } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 1;\r\n  justify-content: center;\r\n  margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    margin: 0 ${props => props.theme.thickness.medium}px 0 0;\r\n  }\r\n`;\r\n\r\nconst length = 300;\r\nconst StyledImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  height: ${length / 2}px;\r\n  margin: 0 ${props => props.theme.thickness.medium}px 0 0;\r\n  width: ${length / 2}px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    height: ${length}px;\r\n    margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.large};\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    font-size: ${props => props.theme.fontSize.extraLarge};\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: inline-block;\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  margin-top: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    font-size: ${props => props.theme.fontSize.large};\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${props => props.theme.thickness.medium}px;\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\ninterface Props {\r\n  imageSource?: string;\r\n  imageShape: ImageShape;\r\n  title: string;\r\n  subTitle?: string;\r\n  canPlay: boolean;\r\n  isPlaying: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nfunction Header({\r\n  imageSource,\r\n  imageShape,\r\n  title,\r\n  subTitle,\r\n  canPlay,\r\n  isPlaying,\r\n  onToggle\r\n}: Props) {\r\n  function handleClick() {\r\n    onToggle();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledImage source={imageSource} shape={imageShape} />\r\n      <Div>\r\n        <Title>{title}</Title>\r\n        {subTitle && <SubTitle>{subTitle}</SubTitle>}\r\n        <StyledButton disabled={!canPlay} onClick={handleClick}>\r\n          {isPlaying ? \"Pause\" : \"Play\"}\r\n        </StyledButton>\r\n      </Div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  imageShape: ImageShape.Square\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Track } from \"../../types\";\r\nimport { getArtistNames } from \"../../utils\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoaded, selectIsPlaying } from \"../../reducers/player\";\r\nimport { Icon, IconType, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { selectTrackArtists } from \"../../reducers/tracks\";\r\n\r\nconst StyledButton = styled(ButtonBase)<{ isLoaded: boolean }>`\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  ${props => props.isLoaded && \"color: \" + props.theme.primaryLight};\r\n  display: flex;\r\n  padding: ${props => props.theme.thickness.small}px\r\n    ${props => props.theme.thickness.medium}px;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &&:hover {\r\n    ${props => props.isLoaded && \"color: \" + props.theme.primaryLight};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)<{ isLoaded?: boolean; isHover?: boolean }>`\r\n  color: ${props =>\r\n    props.isLoaded ? props.theme.primaryLight : props.theme.foreground.dark};\r\n  display: ${props => (props.isHover ? \"none\" : \"block\")};\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n\r\n  ${StyledButton}:not(:disabled):hover & {\r\n    color: ${props =>\r\n      props.isLoaded\r\n        ? props.theme.primaryLight\r\n        : props.theme.foreground.default};\r\n    display: ${props => (props.isHover ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nconst Infos = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  height: 100%;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-weight: ${props => props.theme.fontWeight.normal}\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: left;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  text-align: left;\r\n`;\r\n\r\nconst Duration = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  flex-shrink: 0;\r\n`;\r\n\r\ninterface OwnProps {\r\n  track: Track;\r\n  onToggle: (trackId: string) => void;\r\n}\r\n\r\ninterface Props extends OwnProps {\r\n  artists: Artist[];\r\n  isDisabled: boolean;\r\n  isLoaded: boolean;\r\n  isPlaying: boolean;\r\n}\r\n\r\nfunction TrackItem({\r\n  track,\r\n  artists,\r\n  isDisabled,\r\n  isLoaded,\r\n  isPlaying,\r\n  onToggle\r\n}: Props) {\r\n  function renderIcon() {\r\n    return isDisabled ? (\r\n      <StyledIcon type={IconType.MusicOff} />\r\n    ) : (\r\n      <>\r\n        <StyledIcon\r\n          type={isPlaying ? IconType.VolumeUp : IconType.MusicNote}\r\n          isLoaded={isLoaded}\r\n          isHover={false}\r\n        />\r\n        <StyledIcon\r\n          type={isPlaying ? IconType.Pause : IconType.PlayArrow}\r\n          isLoaded={isLoaded}\r\n          isHover={true}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderArtist() {\r\n    return <SubTitle>{getArtistNames(artists)}</SubTitle>;\r\n  }\r\n\r\n  function renderDuration() {\r\n    let seconds = track.duration_ms / 1000;\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.floor(seconds % 60);\r\n\r\n    return (\r\n      <Duration>{`${minutes}:${\r\n        seconds < 10 ? \"0\" + seconds : seconds\r\n      }`}</Duration>\r\n    );\r\n  }\r\n\r\n  function handleClick() {\r\n    onToggle(track.id);\r\n  }\r\n\r\n  return (\r\n    <StyledButton\r\n      onClick={handleClick}\r\n      disabled={isDisabled}\r\n      isLoaded={isLoaded}\r\n    >\r\n      {renderIcon()}\r\n\r\n      <Infos>\r\n        <Title>{track.name}</Title>\r\n        {renderArtist()}\r\n      </Infos>\r\n\r\n      {renderDuration()}\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nfunction isDisabled(track: Track) {\r\n  return !track.preview_url;\r\n}\r\n\r\nconst mapState = (state: State, { track }: OwnProps) => ({\r\n  artists: selectTrackArtists(state, track.id),\r\n  isDisabled: isDisabled(track),\r\n  isLoaded: selectIsLoaded(state)(track.id),\r\n  isPlaying: selectIsPlaying(state, track.id)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(TrackItem);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track } from \"../../types\";\r\nimport TrackItem from \"./TrackItem\";\r\n\r\nconst StyledList = styled.ul`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst StyledItem = styled.li`\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  tracks: Track[];\r\n  onToggle: (trackId: string) => void;\r\n}\r\n\r\nfunction TrackList({ tracks, onToggle }: Props) {\r\n  return (\r\n    <StyledList>\r\n      {tracks.map(track => (\r\n        <StyledItem key={track.id}>\r\n          <TrackItem track={track} onToggle={onToggle} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default TrackList;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist, Track } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getPlaylist } from \"../../actions/playlists\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectPlaylist,\r\n  selectPlaylistTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/playlists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withLoader from \"../withLoader\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\ninterface Params {\r\n  playlistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  playlist?: Playlist;\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getPlaylist: (playlistId: string) => void;\r\n  loadPlayPause: (collectionId: string, trackId?: string) => void;\r\n}\r\n\r\nfunction PlaylistDetails({\r\n  match,\r\n  playlist,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getPlaylist,\r\n  loadPlayPause\r\n}: Props) {\r\n  const { playlistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getPlaylist(playlistId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadPlayPause(playlistId, trackId);\r\n  }\r\n\r\n  return playlist ? (\r\n    <Wrapper>\r\n      <Header\r\n        imageSource={getImageSource(playlist)}\r\n        title={playlist.name}\r\n        subTitle={playlist.owner.display_name}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        onToggle={handleToggle}\r\n      />\r\n      <TrackList tracks={tracks} onToggle={handleToggle} />\r\n    </Wrapper>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { playlistId } = match.params;\r\n  return {\r\n    playlist: selectPlaylist(state, playlistId),\r\n    tracks: selectPlaylistTracks(state, playlistId),\r\n    isPlayable: selectIsPlayable(state, playlistId),\r\n    isPlaying: selectIsPlaying(state, playlistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getPlaylist,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(PlaylistDetails)\r\n  )\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist, Track } from \"../../types\";\r\nimport { getAlbum } from \"../../actions/albums\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectAlbum,\r\n  selectAlbumArtists,\r\n  selectAlbumTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/albums\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport Collection from \"./Wrapper\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Params {\r\n  albumId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  album?: Album;\r\n  artists: Artist[];\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getAlbum: (albumId: string) => void;\r\n  loadPlayPause: (collectionId: string, trackId?: string) => void;\r\n}\r\n\r\nfunction AlbumDetails({\r\n  match,\r\n  album,\r\n  artists,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getAlbum,\r\n  loadPlayPause\r\n}: Props) {\r\n  const { albumId } = match.params;\r\n\r\n  const effect = () => {\r\n    getAlbum(albumId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadPlayPause(albumId, trackId);\r\n  }\r\n\r\n  return album ? (\r\n    <Collection>\r\n      <Header\r\n        imageSource={getImageSource(album)}\r\n        title={album.name}\r\n        subTitle={getArtistNames(artists)}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        onToggle={handleToggle}\r\n      />\r\n      <TrackList tracks={tracks} onToggle={handleToggle} />\r\n    </Collection>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { albumId } = match.params;\r\n  return {\r\n    album: selectAlbum(state, albumId),\r\n    artists: selectAlbumArtists(state)(albumId),\r\n    tracks: selectAlbumTracks(state, albumId),\r\n    isPlayable: selectIsPlayable(state, albumId),\r\n    isPlaying: selectIsPlaying(state, albumId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getAlbum,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(AlbumDetails)\r\n  )\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Track } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getFullArtist } from \"../../actions/artists\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectArtist,\r\n  selectIsPlayable,\r\n  selectArtistAlbums,\r\n  selectArtistTopTracks,\r\n  selectArtistRelatedArtists\r\n} from \"../../reducers/artists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport TrackList from \"./TrackList\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport { Heading } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport Header from \"./Header\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nfunction TopTracks({\r\n  tracks,\r\n  onToggle\r\n}: {\r\n  tracks: Track[];\r\n  onToggle: (trackId: string) => void;\r\n}) {\r\n  return <>{tracks && <TrackList tracks={tracks} onToggle={onToggle} />}</>;\r\n}\r\n\r\nfunction Albums({ albums }: { albums: Album[] }) {\r\n  return (\r\n    <>\r\n      {albums && !!albums.length && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RelatedArtists({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <>\r\n      {artists && !!artists.length && (\r\n        <Section>\r\n          <Heading>Related Artists</Heading>\r\n          <ArtistCovers artists={artists} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Params {\r\n  artistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  artist?: Artist;\r\n  albums: Album[];\r\n  relatedArtists: Artist[];\r\n  topTracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getFullArtist: (artistId: string) => void;\r\n  loadPlayPause: (artistId: string, trackId?: string) => void;\r\n}\r\n\r\nfunction ArtistDetails({\r\n  match,\r\n  artist,\r\n  albums,\r\n  relatedArtists,\r\n  topTracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getFullArtist,\r\n  loadPlayPause\r\n}: Props) {\r\n  const { artistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getFullArtist(artistId);\r\n  };\r\n  useEffect(effect, [artistId]);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadPlayPause(artistId, trackId);\r\n  }\r\n\r\n  return artist ? (\r\n    <>\r\n      <Wrapper>\r\n        <Header\r\n          imageSource={getImageSource(artist)}\r\n          imageShape={ImageShape.Round}\r\n          title={artist.name}\r\n          canPlay={isPlayable}\r\n          isPlaying={isPlaying}\r\n          onToggle={handleToggle}\r\n        />\r\n        <TopTracks tracks={topTracks} onToggle={handleToggle} />\r\n      </Wrapper>\r\n      <Albums albums={albums} />\r\n      <RelatedArtists artists={relatedArtists} />\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { artistId } = match.params;\r\n  return {\r\n    artist: selectArtist(state, artistId),\r\n    albums: selectArtistAlbums(state, artistId),\r\n    relatedArtists: selectArtistRelatedArtists(state, artistId),\r\n    topTracks: selectArtistTopTracks(state, artistId),\r\n    isPlayable: selectIsPlayable(state, artistId),\r\n    isPlaying: selectIsPlaying(state, artistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getFullArtist,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(ArtistDetails)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track } from \"../../types\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  Collection,\r\n  selectCollection,\r\n  selectLoadedTracks\r\n} from \"../../reducers/player\";\r\nimport { Heading } from \"../core\";\r\nimport TrackList from \"../details/TrackList\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\ninterface Props {\r\n  collection: Collection;\r\n  tracks: Track[];\r\n  loadPlayPause: (collectionId: string, trackId: string) => void;\r\n}\r\n\r\nfunction Queue({ collection, tracks, loadPlayPause }: Props) {\r\n  const { id: collectionId } = collection;\r\n  function handleToggle(trackId: string) {\r\n    loadPlayPause(collectionId, trackId);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {tracks && tracks.length ? (\r\n        <>\r\n          <Heading>Queue</Heading>\r\n          <TrackList tracks={tracks} onToggle={handleToggle} />\r\n        </>\r\n      ) : (\r\n        <Wrapper>\r\n          <Heading>No tracks in the queue.</Heading>\r\n        </Wrapper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  collection: selectCollection(state),\r\n  tracks: selectLoadedTracks(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  loadPlayPause\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Queue);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport LogIn from \"./Login\";\r\nimport Browse from \"../browse/Browse\";\r\nimport CategoryPlaylists from \"../browse/CategoryPlaylists\";\r\nimport Search from \"../search/Search\";\r\nimport PlaylistDetails from \"../details/PlaylistDetails\";\r\nimport AlbumDetails from \"../details/AlbumDetails\";\r\nimport ArtistDetails from \"../details/ArtistDetails\";\r\nimport Queue from \"../player/Queue\";\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst Routes = () => {\r\n  const publicUrl = process.env.PUBLIC_URL;\r\n  return (\r\n    <Wrapper>\r\n      <DefaultRoute from={`${publicUrl}/`} to={`${publicUrl}/browse`} />\r\n      <Route path={`${publicUrl}/login`} component={LogIn} />\r\n      <PrivateRoute path={`${publicUrl}/browse`} component={Browse} />\r\n      <PrivateRoute path={`${publicUrl}/search/:query?`} component={Search} />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/category/:categoryId`}\r\n        component={CategoryPlaylists}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/playlist/:playlistId`}\r\n        component={PlaylistDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/album/:albumId`}\r\n        component={AlbumDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/artist/:artistId`}\r\n        component={ArtistDetails}\r\n      />\r\n      <PrivateRoute path={`${publicUrl}/queue`} component={Queue} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Player from \"../player/Player\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledHeader = styled(Header)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledPlayer = styled(Player)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <StyledHeader />\r\n\r\n        <Body>\r\n          <Menu />\r\n          <Routes />\r\n        </Body>\r\n\r\n        <StyledPlayer />\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export interface Theme {\r\n  background: {\r\n    light: string;\r\n    default: string;\r\n    dark: string;\r\n    hover: string;\r\n    active: string;\r\n  };\r\n  breakpoints: {\r\n    extraSmall: number;\r\n    small: number;\r\n  };\r\n  fontSize: {\r\n    small: string;\r\n    medium: string;\r\n    large: string;\r\n    extraLarge: string;\r\n    extraExtraLarge: string;\r\n  };\r\n  fontWeight: {\r\n    light: number;\r\n    normal: number;\r\n    bold: number;\r\n  };\r\n  foreground: {\r\n    default: string;\r\n    dark: string;\r\n    darker: string;\r\n  };\r\n  primaryLight: string;\r\n  primary: string;\r\n  thickness: {\r\n    extraExtraSmall: number;\r\n    extraSmall: number;\r\n    small: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n    extraExtraLarge: number;\r\n  };\r\n}\r\n\r\nexport const theme: Theme = {\r\n  background: {\r\n    light: \"#303030\",\r\n    default: \"#202020\",\r\n    dark: \"#101010\",\r\n    hover: \"rgba(255, 255, 255, 0.1)\",\r\n    active: \"rgba(255, 255, 255, 0.1)\"\r\n  },\r\n  breakpoints: {\r\n    extraSmall: 480,\r\n    small: 960\r\n  },\r\n  fontSize: {\r\n    small: \"12px\",\r\n    medium: \"16px\",\r\n    large: \"20px\",\r\n    extraLarge: \"24px\",\r\n    extraExtraLarge: \"32px\"\r\n  },\r\n  fontWeight: {\r\n    light: 300,\r\n    normal: 400,\r\n    bold: 500\r\n  },\r\n  foreground: {\r\n    default: \"#ffffff\",\r\n    dark: \"rgba(255, 255, 255, 0.6)\",\r\n    darker: \"rgba(255, 255, 255, 0.3)\"\r\n  },\r\n  primary: \"#1db954\",\r\n  primaryLight: \"#1ed760\",\r\n  thickness: {\r\n    extraExtraSmall: 3.125,\r\n    extraSmall: 6.25,\r\n    small: 12.5,\r\n    medium: 25,\r\n    large: 50,\r\n    extraLarge: 100,\r\n    extraExtraLarge: 200\r\n  }\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\nexport default createGlobalStyle`\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body, h1, h2, button, ul {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background: ${theme.background.default}; \r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.fontSize.medium};\r\n    font-weight: ${theme.fontWeight.normal};\r\n    user-select: none;\r\n  }\r\n\r\n  a {\r\n    color: ${theme.foreground.default};\r\n    text-decoration: none;\r\n  }\r\n\r\n  button {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.fontSize.medium};\r\n    font-weight: ${theme.fontWeight.normal};\r\n\r\n    &:not(:disabled) {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  button, input {\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { ThemeProvider } from \"./styles/styled\";\r\nimport rootReducer from \"./reducers\";\r\nimport App from \"./components/layout/App\";\r\nimport { checkRedirection, initAuthorization } from \"./utils/authorization\";\r\nimport fetchMiddleware from \"./middlewares/fetchMiddleware\";\r\nimport { theme } from \"./styles/theme\";\r\nimport GlobalStyle from \"./styles/global\";\r\n\r\ncheckRedirection();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware, fetchMiddleware))\r\n);\r\ninitAuthorization(store.dispatch);\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { normalize } from \"normalizr\";\r\nimport { authorizedFetch } from \"../utils/authorization\";\r\n\r\nexport default () => (next: Dispatch) => (action: any) => {\r\n  const { types, path, schema, data } = action;\r\n\r\n  if (types) {\r\n    const [requestType, successType, failureType] = types;\r\n    next({ type: requestType });\r\n\r\n    return authorizedFetch(`${process.env.REACT_APP_BASE_URL}/${path}`).then(\r\n      response =>\r\n        response.json().then(json => {\r\n          if (response.ok) {\r\n            const payload = schema ? normalize(json, schema).entities : json;\r\n            next({\r\n              type: successType,\r\n              payload: data ? { ...payload, ...data } : payload\r\n            });\r\n          } else {\r\n            next({ type: failureType, payload: json.error });\r\n          }\r\n        })\r\n    );\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n"],"sourceRoot":""}