{"version":3,"sources":["actions/index.ts","styles/styled.ts","reducers/createReducer.ts","reducers/artists.ts","reducers/tracks.ts","reducers/albums.ts","actions/authorization.ts","utils/authorization.ts","reducers/authorization.ts","reducers/playlists.ts","reducers/browse.ts","reducers/following.ts","reducers/library.ts","reducers/loading.ts","reducers/notifications.ts","actions/player.ts","reducers/player.ts","components/core/Image.tsx","utils/index.ts","reducers/search.ts","reducers/userProfile.ts","reducers/index.ts","styles/effects.ts","components/core/ButtonBase.tsx","components/core/Button.tsx","components/core/Heading.tsx","components/core/Icon.tsx","components/core/RoundButton.tsx","components/core/Text.tsx","components/core/ToggleButton.tsx","components/layout/Title.tsx","components/layout/User.tsx","components/layout/Header.tsx","actions/userProfile.ts","components/layout/RecentItem.tsx","components/layout/RecentList.tsx","components/layout/Menu.tsx","components/details/ArtistNames.tsx","components/player/TrackInfos.tsx","components/player/Audio.tsx","components/player/Controls.tsx","components/player/Slider.tsx","components/player/Playback.tsx","components/player/Volume.tsx","components/player/Player.tsx","components/DefaultRoute.tsx","components/PrivateRoute.tsx","components/layout/Login.tsx","components/layout/SubMenu.tsx","components/layout/SubRoutes.tsx","actions/schemas.ts","components/covers/CoverItem.tsx","components/covers/CoverList.tsx","components/covers/CategoryCovers.tsx","components/withLoader.tsx","components/browse/Categories.tsx","actions/browse.ts","components/covers/AlbumCovers.tsx","components/browse/NewReleases.tsx","components/covers/PlaylistCovers.tsx","components/browse/FeaturedPlaylists.tsx","components/browse/Browse.tsx","components/browse/CategoryPlaylists.tsx","components/search/Recents.tsx","actions/search.ts","components/covers/ArtistCovers.tsx","components/layout/Empty.tsx","components/search/Results.tsx","components/search/Search.tsx","actions/types.ts","components/library/FollowedArtists.tsx","actions/following.ts","actions/library.ts","components/library/SavedAlbums.tsx","components/library/FollowedPlaylists.tsx","components/details/AlbumName.tsx","components/details/TrackItem.tsx","components/details/TrackList.tsx","components/library/SavedTracks.tsx","components/library/Library.tsx","components/details/Header.tsx","components/details/Wrapper.tsx","components/details/PlaylistDetails.tsx","actions/playlists.ts","components/details/AlbumDetails.tsx","actions/albums.ts","components/details/ArtistDetails.tsx","actions/artists.ts","components/player/Queue.tsx","components/layout/Routes.tsx","components/layout/App.tsx","styles/theme.ts","styles/global.ts","index.tsx","middlewares/fetchMiddleware.ts","types/index.ts","types/Type.ts"],"names":["AlbumActionType","ArtistActionType","BrowseActionType","FollowingActionType","LibraryActionType","PlaylistActionType","SearchActionType","UserProfileActionType","styledComponents","styled","default","ThemeProvider","css","createGlobalStyle","keyframes","createReducer","initialState","handlers","state","arguments","length","undefined","action","hasOwnProperty","type","mergeArtists","_ref","payload","merge","artists","updateArtist","artistId","props","Object","objectSpread","defineProperty","_createReducer","ArtistSuccess","ArtistAlbumsSuccess","_action$payload","albums","nexState","keys","ArtistRelatedArtistsSuccess","_action$payload2","relatedArtists","ArtistTopTracksSuccess","_action$payload3","tracks","topTracks","AlbumSuccess","PlaylistSuccess","NewReleasesSuccess","SearchSuccess","SavedAlbumsSuccess","SavedTracksSuccess","FollowedArtistsSuccess","CheckFollowedArtistSuccess","_ref2","isFollowed","FollowArtistSuccess","_ref3","UnfollowArtistSuccess","_ref4","selectArtist","_ref5","selectArtistAlbums","artist","selectAlbums","selectArtistRelatedArtists","selectArtists","selectArtistTopTracks","selectTracks","createSelector","memoize","artistIds","map","selectPlayableTracks","filter","track","preview_url","selectIsPlayable","mergeTracks","updateTrack","trackId","tracks_createReducer","CheckSavedTracksSuccess","trackIds","reduce","previous","current","index","isSaved","SaveTrackSuccess","UnsaveTrackSuccess","selectTrack","selectTrackAlbum","selectAlbum","album","selectTrackArtists","mergeAlbums","updateAlbum","albumId","albums_createReducer","CheckSavedAlbumSuccess","SaveAlbumSuccess","UnsaveAlbumSuccess","selectAlbumArtists","_ref6","_ref7","selectAlbumTracks","albumIds","ActionType","LOG_IN_URL","concat","process","encodeURIComponent","join","REGEX","ACCESS_TOKEN","TOKEN_TYPE","EXPIRES_AT","logInRedirect","Promise","resolve","reject","window","addEventListener","handleStorage","event","key","removeEventListener","location","assign","authorizedFetch","url","method","tokenType","localStorage","accessToken","fetch","headers","Authorization","receiveLogIn","ReceiveLogIn","isLoggedIn","selectIsLoggedIn","authorization","mergePlaylists","playlists","updatePlaylist","playlistId","playlists_createReducer","CategoryPlaylistsSuccess","FeaturedPlaylistsSuccess","FollowedPlaylistsSuccess","CheckFollowedPlaylistSuccess","FollowPlaylistSuccess","UnfollowPlaylistSuccess","selectPlaylist","selectPlaylistTracks","playlist","selectPlaylists","playlistIds","categories","categoryPlaylistIds","featuredPlaylistIds","newReleaseIds","browse_createReducer","CategoriesSuccess","CategorySuccess","selectCategories","browse","values","selectCategory","categoryId","selectCategoryPlaylists","selectFeaturedPlaylists","selectNewReleases","userArtistIds","userPlaylistIds","following_createReducer","selectFollowedArtists","following","selectFollowedPlaylists","userAlbumIds","userTrackIds","library_createReducer","selectSavedAlbums","library","selectSavedTracks","increment","count","decrement","loading_createReducer","AlbumRequest","AlbumFailure","ArtistRequest","ArtistFailure","ArtistAlbumsRequest","ArtistAlbumsFailure","ArtistRelatedArtistsRequest","ArtistRelatedArtistsFailure","CategoriesRequest","CategoriesFailure","CategoryRequest","CategoryFailure","CategoryPlaylistsRequest","CategoryPlaylistsFailure","FeaturedPlaylistsRequest","FeaturedPlaylistsFailure","NewReleasesRequest","NewReleasesFailure","FollowedArtistsRequest","FollowedArtistsFailure","FollowedPlaylistsRequest","FollowedPlaylistsFailure","SavedAlbumsRequest","SavedAlbumsFailure","SavedTracksRequest","SavedTracksFailure","PlaylistRequest","PlaylistFailure","SearchRequest","SearchFailure","UserProfileRequest","UserProfileSuccess","UserProfileFailure","selectIsLoading","loading","addNotification","message","toConsumableArray","id","v4","notifications_createReducer","PlayerState","Command","providers","_providers","Type","Album","Artist","selectArtistTracks","Playlist","Library","loadCollection","collectionId","collectionType","dispatch","getState","getTrackIds","LoadCollection","playPause","selectIsPlaying","Pause","Play","loadPlayPause","isLoaded","selectIsLoaded","LoadTrack","loadTrack","collections","trackIndex","playerState","None","duration","currentTime","isShuffled","isLooped","volume","isMuted","command","player_createReducer","recent","indexOf","TrackLoaded","Playing","Update","Paused","Seek","Seeked","Ended","Next","Previous","ToggleShuffle","ToggleLoop","ChangeVolume","VolumeChanged","selectCollection","player","selectLoadedTrack","_state$player","selectLoadedTracks","selectLoadedAlbum","selectLoadedArtists","_state$player2","recents","selectCanPlayPause","selectCanSeek","selectCanNext","_state$player3","selectCanPrevious","_state$player4","selectTimes","_ref10","_ref11","selectVolume","_ref12","selectIsMuted","_ref13","selectCommand","ImageShape","selectRecents","_ref14","_ref15","_ref16","_ref17","collection","StyledImg","img","_templateObject","shape","Round","Container","div","_templateObject2","theme","background","light","StyledText","span","_templateObject3","thickness","extraLarge","fontWeight","Image","className","source","_useState","useState","_useState2","slicedToArray","setIsLoaded","react_default","a","createElement","src","onLoad","defaultProps","Square","getArtistNames","name","getImageSource","object","images","getImageShape","addRecent","item","imageSource","search_createReducer","results","_results$Object$keys$","ClearResults","SelectAlbum","SelectArtist","SelectPlaylist","ClearRecents","selectAlbumsById","search","selectArtistsById","sort","x","y","popularity","selectPlaylistsById","userProfile","selectUserProfile","combineReducers","notifications","click","active","foreground","hover","ButtonBase","button","ButtonBase_templateObject","dark","Button","Button_templateObject","color","primary","medium","large","small","IconType","Heading","h2","Heading_templateObject","fontSize","bold","Icon","StyedButton","RoundButton_templateObject","darker","StyledIcon","RoundButton_templateObject2","RoundButton","iconType","rest","objectWithoutProperties","Text","Text_templateObject","StyledRoundButton","ToggleButton_templateObject","isToggled","ToggleButton","StyledLink","Link","Title_templateObject","Title_templateObject2","Title_templateObject3","Title","to","Title_StyledIcon","Wifi","Title_StyledText","Wrapper","User_templateObject","User_templateObject2","User","display_name","User_StyledIcon","Person","header","Header_templateObject","breakpoint","extraSmall","mapDispatch","getUserProfile","types","path","connect","useEffect","Header_Wrapper","layout_Title","layout_User","StyledButton","RecentItem_templateObject","StyledImage","RecentItem_templateObject2","RecentItem_templateObject3","Name","_templateObject4","_templateObject5","withRouter","history","onClick","push","RecentItem_Container","capitalize","h3","RecentList_templateObject","normal","RecentList_Title","layout_RecentItem","Menu_templateObject","extraExtraLarge","List","ul","Menu_templateObject2","StyledNavLink","NavLink","Menu_templateObject3","extraExtraSmall","Menu_templateObject4","StyledRecents","RecentList","Menu_templateObject5","items","icon","Home","text","Search","LibraryBooks","Menu","Menu_Wrapper","Menu_StyledIcon","ArtistNames_templateObject","Item","ArtistNames_templateObject2","ArtistNames_templateObject3","ArtistNames","ArtistNames_List","ArtistNames_StyledLink","TrackInfos_templateObject","StyedImage","TrackInfos_templateObject2","TrackInfos_templateObject3","TrackInfos_templateObject4","FavoriteButton","attrs","Favorite","TrackInfos_templateObject5","TrackInfos_Wrapper","Fragment","TrackInfos_Container","TrackInfos_Title","details_ArtistNames","trackLoaded","playing","update","elapsed","paused","seeked","volumeChanged","ended","loadedTrack","times","audio","useRef","currentAudio","play","pause","ref","onLoadedMetadata","target","onPlay","onTimeUpdate","onPause","onSeeked","onVolumeChange","onEnded","Controls_templateObject","Controls_templateObject2","StyledToggleButton","Controls_templateObject3","ShuffleButton","Shuffle","Controls_templateObject4","PreviousButton","SkipPrevious","Controls_templateObject5","PlayButton","_templateObject6","NextButton","SkipNext","_templateObject7","LoopButton","Loop","_templateObject8","toggleShuffle","next","toggleLoop","isPlaying","_ref8","canPrevious","canPlayPause","canNext","_ref9","Controls_Wrapper","disabled","PlayArrow","Slider_templateObject","isDisabled","Slider_templateObject2","Left","style","width","Slider_templateObject3","Thumb","position","left","Slider_templateObject4","Right","Slider_templateObject5","Slider","value","canChange","onChange","isDown","setIsDown","_useState3","_useState4","localValue","setLocalValue","wrapper","thumb","getValue","currentWrapper","currentTHunb","getBoundingClientRect","clientWidth","handleMouseMove","pageX","handleMouseUp","document","currentValue","Slider_Wrapper","onMouseDown","Slider_Container","Playback_templateObject","ProgressTime","Playback_templateObject2","Playback","canSeek","onSeek","renderTime","seconds","minutes","Math","floor","round","progress","Playback_Wrapper","player_Slider","Volume_templateObject","VolumeButton","Volume_templateObject2","StyledSlider","Volume_templateObject3","changeVolume","Volume_Wrapper","VolumeOff","VolumeUp","Player_templateObject","ThirdWrapper","Player_templateObject2","LeftWrapper","Player_templateObject3","CenterWrapper","Player_templateObject4","RightWrapper","Player_templateObject5","StyledVolume","Volume","Player_templateObject6","QueueButton","QueueMusic","Player_templateObject7","seek","time","Player_Wrapper","player_TrackInfos","player_Controls","player_Playback","player_Audio","DefaultRoute","from","Route","exact","render","Redirect","Component","component","Login_templateObject","Login_templateObject2","LogIn","Login_Wrapper","core_Heading","Login_StyledButton","SubMenu_templateObject","SubMenu_templateObject2","match","SubMenu_List","SubMenu_StyledNavLink","defaultItem","find","components_DefaultRoute","components_PrivateRoute","schema","Entity","processStrategy","Artists","Category","PagedAlbums","PagedArtists","PagedCategories","PagedPlaylists","PagedTracks","Results","SavedAlbums","Track","parent","Tracks","define","Schemas","CoverItem_templateObject","StyledImge","CoverItem_templateObject2","CoverItem_templateObject3","SubTitle","CoverItem_templateObject4","CoverItem","cover","CoverItem_StyledButton","imageShape","CoverItem_Title","title","subTitle","StyledList","CoverList_templateObject","splitWidth","StyledItem","li","CoverList_templateObject2","CoverList","covers","covers_CoverItem","category","icons","getCovers","covers_CoverList","Fader","withLoader_templateObject","isLoading","Loader","withLoader_templateObject2","withLoader","WrappedComponent","prevUrl","setPrevUrl","hasLoaded","setHasLoaded","getCategories","covers_CategoryCovers","selectAbumArtists","onSelect","getAlbums","covers_AlbumCovers","owner","getPlaylists","Categories","NewReleases","PlaylistCovers","Browse","layout_SubMenu","layout_SubRoutes","getCategory","getCategoryPlaylists","params","Recents_templateObject","StyledCoverList","Recents_templateObject2","ClearButton","children","Recents_templateObject3","clearRecents","Recents_Wrapper","Empty_templateObject","SentimentVeryDissatisfied","Empty_templateObject2","Empty_templateObject3","Empty","Empty_Wrapper","Empty_StyledIcon","Empty_StyledText","Results_templateObject","Section","section","Results_templateObject2","covers_ArtistCovers","Albums","Playlists","selectAlbumById","selectArtistById","selectPlaylistById","Results_Wrapper","Results_Artists","layout_Empty","debounced","StyledInput","input","Search_templateObject","FetchMethod","query","encoded","setValue","_","debounce","placeholder","autoFocus","search_Results","search_Recents","getFollowedArtists","checkSavedTracks","CheckSavedTracksRequest","CheckSavedTracksFailure","data","getSavedAlbums","getFollowedPlaylists","AlbumName_templateObject","AlbumName","AlbumName_StyledLink","TrackItem_templateObject","TrackItem_templateObject2","MusicIcon","MusicNote","TrackItem_templateObject3","NoMusicIcon","MusicOff","TrackItem_templateObject4","error","Names","TrackItem_templateObject5","TrackItem_templateObject6","Others","TrackItem_templateObject7","Separator","TrackItem_templateObject8","Duration","_templateObject9","_templateObject10","toggleSavedTrack","UnsaveTrackRequest","UnsaveTrackFailure","Delete","UnsaveTrack","SaveTrackRequest","SaveTrackFailure","Put","saveTrack","onTogglePlay","TrackItem_Wrapper","TrackItem_PlayButton","TrackItem_Name","details_AlbumName","duration_ms","renderDuration","TrackItem_FavoriteButton","TrackList_templateObject","TrackList","TrackList_StyledList","details_TrackItem","CollectionId","getSavedTracks","success","json","FollowedArtists","FollowedPlaylists","details_TrackList","details_Header_templateObject","Header_templateObject2","extraExtraExtraLarge","Vertical","Header_templateObject3","Header_templateObject4","Header_templateObject5","Horizontal","Header_templateObject6","Header_templateObject7","Header_templateObject8","Header","canPlay","isFavorite","onToggleFavorite","details_Header_Wrapper","Header_StyledImage","Header_Title","Header_SubTitle","Header_PlayButton","Header_FavoriteButton","Wrapper_templateObject","getPlaylist","userId","CheckFollowedPlaylistRequest","CheckFollowedPlaylistFailure","checkFollowedPlaylist","toggleFollowPlaylist","UnfollowPlaylistRequest","UnfollowPlaylistFailure","unfollowPlaylist","FollowPlaylistRequest","FollowPlaylistFailure","followPlaylist","ownProps","isPlayable","handleTogglePlay","details_Wrapper","details_Header","getAlbum","CheckSavedAlbumRequest","CheckSavedAlbumFailure","checkSavedAlbum","toggleSavedAlbum","UnsaveAlbumRequest","UnsaveAlbumFailure","UnsaveAlbum","SaveAlbumRequest","SaveAlbumFailure","saveAlbum","ArtistDetails_templateObject","TopTracks","ArtistDetails_Section","RelatedArtists","getArtist","getArtistAlbums","getArtistRelatedArtists","ArtistTopTracksRequest","ArtistTopTracksFailure","getArtistTopTracks","CheckFollowedArtistRequest","CheckFollowedArtistFailure","checkFollowedArtist","toggleFollowArtist","UnfollowArtistRequest","UnfollowArtistFailure","unfollowArtist","FollowArtistRequest","FollowArtistFailure","followArtist","ArtistDetails_Albums","Queue_templateObject","Queue_Wrapper","Routes_templateObject","publicUrl","Routes","Routes_Wrapper","CategoryPlaylists","PlaylistDetails","AlbumDetails","ArtistDetails","Queue","App_templateObject","StyledHeader","App_templateObject2","Body","App_templateObject3","StyledMenu","App_templateObject4","StyledRoutes","App_templateObject5","App","BrowserRouter","App_Wrapper","player_Player","global_templateObject","hash","date","Date","setSeconds","getSeconds","parseInt","toString","checkRedirection","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","_types","requestType","successType","failureType","then","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","sent","JSON","parse","ok","normalize","entities","stop","_x","apply","this","now","ReactDOM","global","es","layout_App","getElementById","_Album__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","o","d","__webpack_exports__","_Artist__WEBPACK_IMPORTED_MODULE_1__","_Category__WEBPACK_IMPORTED_MODULE_2__","_Copyright__WEBPACK_IMPORTED_MODULE_3__","_Endpoint__WEBPACK_IMPORTED_MODULE_4__","_ExternalId__WEBPACK_IMPORTED_MODULE_5__","_ExternalUrl__WEBPACK_IMPORTED_MODULE_6__","_Followers__WEBPACK_IMPORTED_MODULE_7__","_Image__WEBPACK_IMPORTED_MODULE_8__","_Paging__WEBPACK_IMPORTED_MODULE_9__","_Playlist__WEBPACK_IMPORTED_MODULE_10__","_PlaylistTrack__WEBPACK_IMPORTED_MODULE_11__","_PublicUser__WEBPACK_IMPORTED_MODULE_12__","_Restriction__WEBPACK_IMPORTED_MODULE_13__","_Track__WEBPACK_IMPORTED_MODULE_14__","_TrackLink__WEBPACK_IMPORTED_MODULE_15__","_Type__WEBPACK_IMPORTED_MODULE_16__"],"mappings":"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","file":"static/js/main.241d40ae.chunk.js","sourcesContent":["export enum AlbumActionType {\r\n  AlbumRequest = \"ALBUM_REQUEST\",\r\n  AlbumSuccess = \"ALBUM_SUCCESS\",\r\n  AlbumFailure = \"ALBUM_FAILURE\"\r\n}\r\n\r\nexport enum ArtistActionType {\r\n  ArtistRequest = \"ARTIST_REQUEST\",\r\n  ArtistSuccess = \"ARTIST_SUCCESS\",\r\n  ArtistFailure = \"ARTIST_FAILURE\",\r\n  ArtistAlbumsRequest = \"ARTIST_ALBUMS_REQUEST\",\r\n  ArtistAlbumsSuccess = \"ARTIST_ALBUMS_SUCCESS\",\r\n  ArtistAlbumsFailure = \"ARTIST_ALBUMS_FAILURE\",\r\n  ArtistRelatedArtistsRequest = \"ARTIST_RELATED_ARTISTS_REQUEST\",\r\n  ArtistRelatedArtistsSuccess = \"ARTIST_RELATED_ARTISTS_SUCCESS\",\r\n  ArtistRelatedArtistsFailure = \"ARTIST_RELATED_ARTISTS_FAILURE\",\r\n  ArtistTopTracksRequest = \"ARTIST_TOP_TRACKS_REQUEST\",\r\n  ArtistTopTracksSuccess = \"ARTIST_TOP_TRACKS_SUCCESS\",\r\n  ArtistTopTracksFailure = \"ARTIST_TOP_TRACKS_FAILURE\"\r\n}\r\n\r\nexport enum BrowseActionType {\r\n  CategoriesRequest = \"CATEGORIES_REQUEST\",\r\n  CategoriesSuccess = \"CATEGORIES_SUCCESS\",\r\n  CategoriesFailure = \"CATEGORIES_FAILURE\",\r\n  CategoryRequest = \"CATEGORY_REQUEST\",\r\n  CategorySuccess = \"CATEGORY_SUCCESS\",\r\n  CategoryFailure = \"CATEGORY_FAILURE\",\r\n  CategoryPlaylistsRequest = \"CATEGORY_PLAYLISTS_REQUEST\",\r\n  CategoryPlaylistsSuccess = \"CATEGORY_PLAYLISTS_SUCCESS\",\r\n  CategoryPlaylistsFailure = \"CATEGORY_PLAYLISTS_FAILURE\",\r\n  FeaturedPlaylistsRequest = \"FEATURED_PLAYLISTS_REQUEST\",\r\n  FeaturedPlaylistsSuccess = \"FEATURED_PLAYLISTS_SUCCESS\",\r\n  FeaturedPlaylistsFailure = \"FEATURED_PLAYLISTS_FAILURE\",\r\n  NewReleasesRequest = \"NEW_RELEASES_REQUEST\",\r\n  NewReleasesSuccess = \"NEW_RELEASES_SUCCESS\",\r\n  NewReleasesFailure = \"NEW_RELEASES_FAILURE\"\r\n}\r\n\r\nexport enum FollowingActionType {\r\n  FollowedArtistsRequest = \"FOLLOWED_ARTISTS_REQUEST\",\r\n  FollowedArtistsSuccess = \"FOLLOWED_ARTISTS_SUCCESS\",\r\n  FollowedArtistsFailure = \"FOLLOWED_ARTISTS_FAILURE\",\r\n  CheckFollowedArtistRequest = \"CHECK_FOLLOWED_ARTIST_REQUEST\",\r\n  CheckFollowedArtistSuccess = \"CHECK_FOLLOWED_ARTIST_SUCCESS\",\r\n  CheckFollowedArtistFailure = \"CHECK_FOLLOWED_ARTIST_FAILURE\",\r\n  FollowArtistRequest = \"FOLLOW_ARTIST_REQUEST\",\r\n  FollowArtistSuccess = \"FOLLOW_ARTIST_SUCCESS\",\r\n  FollowArtistFailure = \"FOLLOW_ARTIST_FAILURE\",\r\n  UnfollowArtistRequest = \"UNFOLLOW_ARTIST_REQUEST\",\r\n  UnfollowArtistSuccess = \"UNFOLLOW_ARTIST_SUCCESS\",\r\n  UnfollowArtistFailure = \"UNFOLLOW_ARTIST_FAILURE\",\r\n  FollowedPlaylistsRequest = \"FOLLOWED_PLAYLISTS_REQUEST\",\r\n  FollowedPlaylistsSuccess = \"FOLLOWED_PLAYLISTS_SUCCESS\",\r\n  FollowedPlaylistsFailure = \"FOLLOWED_PLAYLISTS_FAILURE\",\r\n  CheckFollowedPlaylistRequest = \"CHECK_FOLLOWED_PLAYLIST_REQUEST\",\r\n  CheckFollowedPlaylistSuccess = \"CHECK_FOLLOWED_PLAYLIST_SUCCESS\",\r\n  CheckFollowedPlaylistFailure = \"CHECK_FOLLOWED_PLAYLIST_FAILURE\",\r\n  FollowPlaylistRequest = \"FOLLOW_PLAYLIST_REQUEST\",\r\n  FollowPlaylistSuccess = \"FOLLOW_PLAYLIST_SUCCESS\",\r\n  FollowPlaylistFailure = \"FOLLOW_PLAYLIST_FAILURE\",\r\n  UnfollowPlaylistRequest = \"UNFOLLOW_PLAYLIST_REQUEST\",\r\n  UnfollowPlaylistSuccess = \"UNFOLLOW_PLAYLIST_SUCCESS\",\r\n  UnfollowPlaylistFailure = \"UNFOLLOW_PLAYLIST_FAILURE\"\r\n}\r\n\r\nexport enum LibraryActionType {\r\n  SavedAlbumsRequest = \"SAVED_ALBUMS_REQUEST\",\r\n  SavedAlbumsSuccess = \"SAVED_ALBUMS_SUCCESS\",\r\n  SavedAlbumsFailure = \"SAVED_ALBUMS_FAILURE\",\r\n  CheckSavedAlbumRequest = \"CHECK_SAVED_ALBUM_REQUEST\",\r\n  CheckSavedAlbumSuccess = \"CHECK_SAVED_ALBUM_SUCCESS\",\r\n  CheckSavedAlbumFailure = \"CHECK_SAVED_ALBUM_FAILURE\",\r\n  SaveAlbumRequest = \"SAVE_ALBUM_REQUEST\",\r\n  SaveAlbumSuccess = \"SAVE_ALBUM_SUCCESS\",\r\n  SaveAlbumFailure = \"SAVE_ALBUM_FAILURE\",\r\n  UnsaveAlbumRequest = \"UNSAVE_ALBUM_REQUEST\",\r\n  UnsaveAlbumSuccess = \"UNSAVE_ALBUM_SUCCESS\",\r\n  UnsaveAlbumFailure = \"UNSAVE_ALBUM_FAILURE\",\r\n  SavedTracksRequest = \"SAVED_TRACKS_REQUEST\",\r\n  SavedTracksSuccess = \"SAVED_TRACKS_SUCCESS\",\r\n  SavedTracksFailure = \"SAVED_TRACKS_FAILURE\",\r\n  CheckSavedTracksRequest = \"CHECK_SAVED_TRACKS_REQUEST\",\r\n  CheckSavedTracksSuccess = \"CHECK_SAVED_TRACKS_SUCCESS\",\r\n  CheckSavedTracksFailure = \"CHECK_SAVED_TRACKS_FAILURE\",\r\n  SaveTrackRequest = \"SAVE_TRACK_REQUEST\",\r\n  SaveTrackSuccess = \"SAVE_TRACK_SUCCESS\",\r\n  SaveTrackFailure = \"SAVE_TRACK_FAILURE\",\r\n  UnsaveTrackRequest = \"UNSAVE_TRACK_REQUEST\",\r\n  UnsaveTrackSuccess = \"UNSAVE_TRACK_SUCCESS\",\r\n  UnsaveTrackFailure = \"UNSAVE_TRACK_FAILURE\"\r\n}\r\n\r\nexport enum PlaylistActionType {\r\n  PlaylistRequest = \"PLAYLIST_REQUEST\",\r\n  PlaylistSuccess = \"PLAYLIST_SUCCESS\",\r\n  PlaylistFailure = \"PLAYLIST_FAILURE\"\r\n}\r\n\r\nexport enum SearchActionType {\r\n  SearchRequest = \"SEARCH_REQUEST\",\r\n  SearchSuccess = \"SEARCH_SUCCESS\",\r\n  SearchFailure = \"SEARCH_FAILURE\",\r\n  ClearResults = \"CLEAR_RESULTS\",\r\n  SelectAlbum = \"SELECT_ALBUM\",\r\n  SelectArtist = \"SELECT_ARTIST\",\r\n  SelectPlaylist = \"SELECT_PLAYLIST\",\r\n  ClearRecents = \"CLEAR_RECENTS\"\r\n}\r\n\r\nexport enum UserProfileActionType {\r\n  UserProfileRequest = \"USER_PROFILE_REQUEST\",\r\n  UserProfileSuccess = \"USER_PROFILE_SUCCESS\",\r\n  UserProfileFailure = \"USER_PROFILE_FAILURE\"\r\n}\r\n","import * as styledComponents from \"styled-components\";\r\nimport { Theme } from \"./theme\";\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\r\nexport default styled;\r\n","import { PayloadAction } from \"../actions/types\";\r\n\r\nexport default function createReducer<S>(\r\n  initialState: S,\r\n  handlers: { [key: string]: (state: S, action: PayloadAction) => S }\r\n) {\r\n  return function reducer(state = initialState, action: PayloadAction) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Artist } from \"../types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  FollowingActionType,\r\n  LibraryActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  ArtistAlbumsSuccessAction,\r\n  ArtistRelatedArtistsSuccessAction,\r\n  ArtistTopTracksSuccessAction\r\n} from \"../actions/artists\";\r\nimport { State as CombinedState } from \".\";\r\nimport { ArtistDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums } from \"./albums\";\r\nimport { selectTracks } from \"./tracks\";\r\nimport {\r\n  FollowArtistSuccessAction,\r\n  UnfollowArtistSuccessAction,\r\n  CheckFollowedArtistSuccessAction\r\n} from \"../actions/following\";\r\n\r\nexport interface State extends ArtistDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeArtists(state: State, { payload }: EntitiesAction) {\r\n  return merge({}, state, payload.artists);\r\n}\r\n\r\nfunction updateArtist(state: State, artistId: string, props: any) {\r\n  return {\r\n    ...state,\r\n    [artistId]: {\r\n      ...state[artistId],\r\n      ...props\r\n    }\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [ArtistActionType.ArtistSuccess]: mergeArtists,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: (\r\n    state: State,\r\n    action: ArtistAlbumsSuccessAction\r\n  ) => {\r\n    const { artistId, albums } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        albums: Object.keys(albums)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: (\r\n    state: State,\r\n    action: ArtistRelatedArtistsSuccessAction\r\n  ) => {\r\n    const { artistId, artists } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        relatedArtists: Object.keys(artists)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistTopTracksSuccess]: (\r\n    state: State,\r\n    action: ArtistTopTracksSuccessAction\r\n  ) => {\r\n    const { artistId, tracks } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        topTracks: Object.keys(tracks)\r\n      }\r\n    };\r\n  },\r\n  [AlbumActionType.AlbumSuccess]: mergeArtists,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeArtists,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeArtists,\r\n  [SearchActionType.SearchSuccess]: mergeArtists,\r\n  [LibraryActionType.SavedAlbumsSuccess]: mergeArtists,\r\n  [LibraryActionType.SavedTracksSuccess]: mergeArtists,\r\n  [FollowingActionType.FollowedArtistsSuccess]: mergeArtists,\r\n  [FollowingActionType.CheckFollowedArtistSuccess]: (\r\n    state: State,\r\n    { payload }: CheckFollowedArtistSuccessAction\r\n  ) => updateArtist(state, payload.artistId, { isFollowed: payload[0] }),\r\n  [FollowingActionType.FollowArtistSuccess]: (\r\n    state: State,\r\n    { payload }: FollowArtistSuccessAction\r\n  ) => updateArtist(state, payload.artistId, { isFollowed: true }),\r\n  [FollowingActionType.UnfollowArtistSuccess]: (\r\n    state: State,\r\n    { payload }: UnfollowArtistSuccessAction\r\n  ) => updateArtist(state, payload.artistId, { isFollowed: false })\r\n});\r\n\r\nexport function selectArtist({ artists }: CombinedState, artistId: string) {\r\n  return artists[artistId];\r\n}\r\n\r\nexport function selectArtistAlbums(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const albums = selectAlbums(state)(artist.albums);\r\n    if (albums) {\r\n      return albums;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistRelatedArtists(\r\n  state: CombinedState,\r\n  artistId: string\r\n) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const artists = selectArtists(state)(artist.relatedArtists);\r\n    if (artists) {\r\n      return artists;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistTopTracks(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const tracks = selectTracks(state)(artist.topTracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectArtists = createSelector(\r\n  (state: CombinedState) => state.artists,\r\n  (artists: ArtistDictionary): ((artistIds: string[]) => Artist[]) =>\r\n    memoize((artistIds: string[]) =>\r\n      artistIds ? artistIds.map(artistId => artists[artistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, artistId: string) {\r\n  const tracks = selectArtistTopTracks(state, artistId);\r\n  return tracks ? tracks.filter(track => track.preview_url) : [];\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, artistId: string) {\r\n  return !!selectPlayableTracks(state, artistId).length;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport merge from \"lodash/merge\";\r\nimport memoize from \"lodash/memoize\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  LibraryActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  SaveTrackSuccessAction,\r\n  UnsaveTrackSuccessAction,\r\n  CheckSavedTrackSuccess\r\n} from \"../actions/library\";\r\nimport { State as CombinedState } from \".\";\r\nimport { TrackDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nexport interface State extends TrackDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeTracks(state: State, { payload }: EntitiesAction) {\r\n  return merge({}, state, payload.tracks);\r\n}\r\n\r\nfunction updateTrack(state: State, trackId: string, props: any) {\r\n  return {\r\n    ...state,\r\n    [trackId]: {\r\n      ...state[trackId],\r\n      ...props\r\n    }\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeTracks,\r\n  [ArtistActionType.ArtistTopTracksSuccess]: mergeTracks,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeTracks,\r\n  [SearchActionType.SearchSuccess]: mergeTracks,\r\n  [LibraryActionType.SavedAlbumsSuccess]: mergeTracks,\r\n  [LibraryActionType.SavedTracksSuccess]: mergeTracks,\r\n  [LibraryActionType.CheckSavedTracksSuccess]: (\r\n    state: State,\r\n    { payload }: CheckSavedTrackSuccess\r\n  ) =>\r\n    payload.trackIds.reduce(\r\n      (previous, current, index) =>\r\n        updateTrack(previous, current, { isSaved: payload[index] }),\r\n      state\r\n    ),\r\n  [LibraryActionType.SaveTrackSuccess]: (\r\n    state: State,\r\n    { payload }: SaveTrackSuccessAction\r\n  ) => updateTrack(state, payload.trackId, { isSaved: true }),\r\n  [LibraryActionType.UnsaveTrackSuccess]: (\r\n    state: State,\r\n    { payload }: UnsaveTrackSuccessAction\r\n  ) => updateTrack(state, payload.trackId, { isSaved: false })\r\n});\r\n\r\nexport function selectTrack({ tracks }: CombinedState, trackId: string) {\r\n  return tracks[trackId];\r\n}\r\n\r\nexport function selectTrackAlbum(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  if (track) {\r\n    return selectAlbum(state, track.album);\r\n  }\r\n}\r\n\r\nexport function selectTrackArtists(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return track ? selectArtists(state)(track.artists) : [];\r\n}\r\n\r\nexport const selectTracks = createSelector(\r\n  (state: CombinedState) => state.tracks,\r\n  (tracks: TrackDictionary) =>\r\n    memoize((trackIds: string[]) =>\r\n      trackIds ? trackIds.map(trackId => tracks[trackId]) : []\r\n    )\r\n);\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  LibraryActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  SaveAlbumSuccessAction,\r\n  UnsaveAlbumSuccessAction,\r\n  CheckSavedAlbumSuccess\r\n} from \"../actions/library\";\r\nimport { State as CombinedState } from \".\";\r\nimport { AlbumDictionary, ArtistDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends AlbumDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeAlbums(state: State, { payload }: EntitiesAction) {\r\n  return merge({}, state, payload.albums);\r\n}\r\n\r\nfunction updateAlbum(state: State, albumId: string, props: any) {\r\n  return {\r\n    ...state,\r\n    [albumId]: {\r\n      ...state[albumId],\r\n      ...props\r\n    }\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeAlbums,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeAlbums,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: mergeAlbums,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeAlbums,\r\n  [SearchActionType.SearchSuccess]: mergeAlbums,\r\n  [LibraryActionType.SavedAlbumsSuccess]: mergeAlbums,\r\n  [LibraryActionType.SavedTracksSuccess]: mergeAlbums,\r\n  [LibraryActionType.CheckSavedAlbumSuccess]: (\r\n    state: State,\r\n    { payload }: CheckSavedAlbumSuccess\r\n  ) => updateAlbum(state, payload.albumId, { isSaved: payload[0] }),\r\n  [LibraryActionType.SaveAlbumSuccess]: (\r\n    state: State,\r\n    { payload }: SaveAlbumSuccessAction\r\n  ) => updateAlbum(state, payload.albumId, { isSaved: true }),\r\n  [LibraryActionType.UnsaveAlbumSuccess]: (\r\n    state: State,\r\n    { payload }: UnsaveAlbumSuccessAction\r\n  ) => updateAlbum(state, payload.albumId, { isSaved: false })\r\n});\r\n\r\nexport function selectAlbum({ albums }: CombinedState, albumId: string) {\r\n  return albums[albumId];\r\n}\r\n\r\nexport const selectAlbumArtists = createSelector(\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  (albums: AlbumDictionary, artists: ArtistDictionary) =>\r\n    memoize((albumId: string) => {\r\n      const album = albums[albumId];\r\n      if (album) {\r\n        return album.artists.map(artistId => artists[artistId]);\r\n      }\r\n\r\n      return [];\r\n    })\r\n);\r\n\r\nexport function selectAlbumTracks(state: CombinedState, albumId: string) {\r\n  const album = selectAlbum(state, albumId);\r\n  if (album) {\r\n    const tracks = selectTracks(state)(album.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectAlbums = createSelector(\r\n  (state: CombinedState) => state.albums,\r\n  (albums: AlbumDictionary) =>\r\n    memoize((albumIds: string[]) =>\r\n      albumIds ? albumIds.map(albumId => albums[albumId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, albumId: string) {\r\n  const tracks = selectAlbumTracks(state, albumId);\r\n  return tracks ? tracks.filter(track => track.preview_url) : [];\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, albumId: string) {\r\n  return !!selectPlayableTracks(state, albumId).length;\r\n}\r\n","import { Action, Dispatch } from \"redux\";\r\nimport { logInRedirect } from \"../utils/authorization\";\r\n\r\nexport enum ActionType {\r\n  RequestLogIn = \"REQUEST_LOG_IN\",\r\n  ReceiveLogIn = \"RECEIVE_LOG_IN\"\r\n}\r\n\r\nexport interface RequestLogInAction extends Action<ActionType.RequestLogIn> {}\r\n\r\nfunction requestLogIn(): RequestLogInAction {\r\n  return {\r\n    type: ActionType.RequestLogIn\r\n  };\r\n}\r\n\r\nexport interface ReceiveLogInAction extends Action<ActionType.ReceiveLogIn> {}\r\n\r\nexport function receiveLogIn(): ReceiveLogInAction {\r\n  return {\r\n    type: ActionType.ReceiveLogIn\r\n  };\r\n}\r\n\r\nexport function logIn() {\r\n  return async (\r\n    dispatch: Dispatch<RequestLogInAction | ReceiveLogInAction>\r\n  ) => {\r\n    dispatch(requestLogIn());\r\n    await logInRedirect();\r\n    dispatch(receiveLogIn());\r\n  };\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { receiveLogIn } from \"../actions/authorization\";\r\n\r\nconst SCOPES = [\r\n  \"user-library-read\",\r\n  \"user-library-modify\",\r\n  \"user-follow-read\",\r\n  \"user-follow-modify\",\r\n  \"playlist-read-private\",\r\n  \"playlist-read-collaborative\",\r\n  \"playlist-modify-private\",\r\n  \"playlist-modify-public\"\r\n];\r\nconst LOG_IN_URL = `https://accounts.spotify.com/authorize?client_id=${\r\n  process.env.REACT_APP_CLIENT_ID\r\n}&scope=${encodeURIComponent(\r\n  SCOPES.join(\" \")\r\n)}&response_type=token&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\r\nconst REGEX = /#access_token=(.*?)&token_type=(.*?)&expires_in=(.*)$/;\r\nconst ACCESS_TOKEN = \"token\";\r\nconst TOKEN_TYPE = \"tokenType\";\r\nconst EXPIRES_AT = \"expiresAt\";\r\n\r\nfunction logInRedirect(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    const handleStorage = (event: StorageEvent) => {\r\n      if (event.key === ACCESS_TOKEN) {\r\n        window.removeEventListener(\"storage\", handleStorage);\r\n        resolve();\r\n      }\r\n    };\r\n    window.addEventListener(\"storage\", handleStorage);\r\n    window.location.assign(LOG_IN_URL);\r\n  });\r\n}\r\n\r\nfunction checkRedirection(): void {\r\n  const match = window.location.hash.match(REGEX);\r\n  if (match) {\r\n    localStorage[ACCESS_TOKEN] = match[1];\r\n    localStorage[TOKEN_TYPE] = match[2];\r\n    const date = new Date();\r\n    date.setSeconds(date.getSeconds() + parseInt(match[3]));\r\n    localStorage[EXPIRES_AT] = date.toString();\r\n  }\r\n}\r\n\r\nfunction initAuthorization(dispatch: Dispatch): void {\r\n  if (\r\n    !!localStorage[ACCESS_TOKEN] &&\r\n    Date.parse(localStorage[EXPIRES_AT]) > Date.now()\r\n  ) {\r\n    dispatch(receiveLogIn());\r\n  }\r\n}\r\n\r\nfunction authorizedFetch(\r\n  url: string,\r\n  method: string = \"GET\"\r\n): Promise<Response> {\r\n  const tokenType = localStorage[TOKEN_TYPE];\r\n  const accessToken = localStorage[ACCESS_TOKEN];\r\n\r\n  return fetch(url, {\r\n    method,\r\n    headers: {\r\n      Authorization: `${tokenType} ${accessToken}`\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchJson(url: string): Promise<any> {\r\n  const response = await authorizedFetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport {\r\n  logInRedirect,\r\n  checkRedirection,\r\n  initAuthorization,\r\n  authorizedFetch,\r\n  fetchJson\r\n};\r\n","import { ActionType } from \"../actions/authorization\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoggedIn: false\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.ReceiveLogIn]: (state: State) => ({\r\n    ...state,\r\n    isLoggedIn: true\r\n  })\r\n});\r\n\r\nexport function selectIsLoggedIn(state: CombinedState): boolean {\r\n  return !!state.authorization.isLoggedIn;\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport {\r\n  BrowseActionType,\r\n  FollowingActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport { State as CombinedState } from \".\";\r\nimport { PlaylistDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\nimport {\r\n  FollowPlaylistSuccessAction,\r\n  UnfollowPlaylistSuccessAction,\r\n  CheckFollowedPlaylistSuccessAction\r\n} from \"../actions/following\";\r\n\r\nexport interface State extends PlaylistDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergePlaylists(state: State, { payload }: EntitiesAction) {\r\n  return merge({}, state, payload.playlists);\r\n}\r\n\r\nfunction updatePlaylist(state: State, playlistId: string, props: any) {\r\n  return {\r\n    ...state,\r\n    [playlistId]: {\r\n      ...state[playlistId],\r\n      ...props\r\n    }\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [PlaylistActionType.PlaylistSuccess]: mergePlaylists,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: mergePlaylists,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: mergePlaylists,\r\n  [SearchActionType.SearchSuccess]: mergePlaylists,\r\n  [FollowingActionType.FollowedPlaylistsSuccess]: mergePlaylists,\r\n  [FollowingActionType.CheckFollowedPlaylistSuccess]: (\r\n    state: State,\r\n    { payload }: CheckFollowedPlaylistSuccessAction\r\n  ) => updatePlaylist(state, payload.playlistId, { isFollowed: payload[0] }),\r\n  [FollowingActionType.FollowPlaylistSuccess]: (\r\n    state: State,\r\n    { payload }: FollowPlaylistSuccessAction\r\n  ) => updatePlaylist(state, payload.playlistId, { isFollowed: true }),\r\n  [FollowingActionType.UnfollowPlaylistSuccess]: (\r\n    state: State,\r\n    { payload }: UnfollowPlaylistSuccessAction\r\n  ) => updatePlaylist(state, payload.playlistId, { isFollowed: false })\r\n});\r\n\r\nexport function selectPlaylist(\r\n  { playlists }: CombinedState,\r\n  playlistId: string\r\n) {\r\n  return playlists[playlistId];\r\n}\r\n\r\nexport function selectPlaylistTracks(state: CombinedState, albumId: string) {\r\n  const playlist = selectPlaylist(state, albumId);\r\n  if (playlist) {\r\n    const tracks = selectTracks(state)(playlist.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectPlaylists = createSelector(\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (playlists: PlaylistDictionary) =>\r\n    memoize((playlistIds: string[]) =>\r\n      playlistIds ? playlistIds.map(playlistId => playlists[playlistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, playlistId: string) {\r\n  const tracks = selectPlaylistTracks(state, playlistId);\r\n  return tracks ? tracks.filter(track => track.preview_url) : [];\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, playlistId: string) {\r\n  return !!selectPlayableTracks(state, playlistId).length;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Album, Category, Playlist } from \"../types\";\r\nimport { BrowseActionType as ActionType } from \"../actions\";\r\nimport {\r\n  CategorySuccessAction,\r\n  CategoriesSuccessAction,\r\n  NewReleasesSuccessAction,\r\n  CategoryPlaylistsSuccessAction,\r\n  FeaturedPlaylistsSuccessAction\r\n} from \"../actions/browse\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectPlaylists } from \"./playlists\";\r\nimport { selectAlbums } from \"./albums\";\r\n\r\nexport interface State {\r\n  categories: { [id: string]: Category };\r\n  categoryPlaylistIds: string[];\r\n  featuredPlaylistIds: string[];\r\n  newReleaseIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  categories: {},\r\n  categoryPlaylistIds: [],\r\n  featuredPlaylistIds: [],\r\n  newReleaseIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.CategoriesSuccess]: (\r\n    state: State,\r\n    action: CategoriesSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategorySuccess]: (\r\n    state: State,\r\n    action: CategorySuccessAction\r\n  ) => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategoryPlaylistsSuccess]: (\r\n    state: State,\r\n    action: CategoryPlaylistsSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    categoryPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.FeaturedPlaylistsSuccess]: (\r\n    state: State,\r\n    action: FeaturedPlaylistsSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    featuredPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.NewReleasesSuccess]: (\r\n    state: State,\r\n    action: NewReleasesSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    newReleaseIds: Object.keys(action.payload.albums)\r\n  })\r\n});\r\n\r\nexport const selectCategories = createSelector(\r\n  ({ browse }: CombinedState) => browse.categories,\r\n  (categories: { [categoryId: string]: Category }) => Object.values(categories)\r\n);\r\n\r\nexport function selectCategory(\r\n  state: CombinedState,\r\n  categoryId: string\r\n): Category | undefined {\r\n  return state.browse.categories[categoryId];\r\n}\r\n\r\nexport function selectCategoryPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.categoryPlaylistIds);\r\n}\r\n\r\nexport function selectFeaturedPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.featuredPlaylistIds);\r\n}\r\n\r\nexport function selectNewReleases(state: CombinedState): Album[] {\r\n  return selectAlbums(state)(state.browse.newReleaseIds);\r\n}\r\n","import { FollowingActionType as ActionType } from \"../actions\";\r\nimport {\r\n  FollowedArtistsSuccessAction,\r\n  FollowedPlaylistsSuccessAction\r\n} from \"../actions/following\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectArtists } from \"./artists\";\r\nimport { selectPlaylists } from \"./playlists\";\r\n\r\nexport interface State {\r\n  userArtistIds: string[];\r\n  userPlaylistIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  userArtistIds: [],\r\n  userPlaylistIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.FollowedArtistsSuccess]: (\r\n    state: State,\r\n    { payload }: FollowedArtistsSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    userArtistIds: Object.keys(payload.artists || {})\r\n  }),\r\n  [ActionType.FollowedPlaylistsSuccess]: (\r\n    state: State,\r\n    { payload }: FollowedPlaylistsSuccessAction\r\n  ) => ({ ...state, userPlaylistIds: Object.keys(payload.playlists || []) })\r\n});\r\n\r\nexport function selectFollowedArtists(state: CombinedState) {\r\n  return selectArtists(state)(state.following.userArtistIds);\r\n}\r\n\r\nexport function selectFollowedPlaylists(state: CombinedState) {\r\n  return selectPlaylists(state)(state.following.userPlaylistIds);\r\n}\r\n","import { LibraryActionType as ActionType } from \"../actions\";\r\nimport {\r\n  SavedAlbumsSuccessAction,\r\n  SavedTracksSuccessAction\r\n} from \"../actions/library\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums } from \"./albums\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State {\r\n  userAlbumIds: string[];\r\n  userTrackIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  userAlbumIds: [],\r\n  userTrackIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.SavedAlbumsSuccess]: (\r\n    state: State,\r\n    { payload }: SavedAlbumsSuccessAction\r\n  ) => ({ ...state, userAlbumIds: Object.keys(payload.albums || {}) }),\r\n  [ActionType.SavedTracksSuccess]: (\r\n    state: State,\r\n    { payload }: SavedTracksSuccessAction\r\n  ) => ({ ...state, userTrackIds: Object.keys(payload.tracks || {}) })\r\n});\r\n\r\nexport function selectSavedAlbums(state: CombinedState) {\r\n  return selectAlbums(state)(state.library.userAlbumIds);\r\n}\r\n\r\nexport function selectSavedTracks(state: CombinedState) {\r\n  return selectTracks(state)(state.library.userTrackIds);\r\n}\r\n\r\nexport function selectPlayableTracks(state: CombinedState) {\r\n  const tracks = selectSavedTracks(state);\r\n  return tracks ? tracks.filter(track => track.preview_url) : [];\r\n}\r\n","import {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  FollowingActionType,\r\n  LibraryActionType,\r\n  PlaylistActionType,\r\n  SearchActionType,\r\n  UserProfileActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  count: number;\r\n}\r\n\r\nconst initialState: State = {\r\n  count: 0\r\n};\r\n\r\nfunction increment(state: State) {\r\n  return {\r\n    ...state,\r\n    count: state.count + 1\r\n  };\r\n}\r\n\r\nfunction decrement(state: State) {\r\n  return {\r\n    ...state,\r\n    count: state.count - 1\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumRequest]: increment,\r\n  [AlbumActionType.AlbumSuccess]: decrement,\r\n  [AlbumActionType.AlbumFailure]: decrement,\r\n  [ArtistActionType.ArtistRequest]: increment,\r\n  [ArtistActionType.ArtistSuccess]: decrement,\r\n  [ArtistActionType.ArtistFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsRequest]: increment,\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [BrowseActionType.CategoriesRequest]: increment,\r\n  [BrowseActionType.CategoriesSuccess]: decrement,\r\n  [BrowseActionType.CategoriesFailure]: decrement,\r\n  [BrowseActionType.CategoryRequest]: increment,\r\n  [BrowseActionType.CategorySuccess]: decrement,\r\n  [BrowseActionType.CategoryFailure]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsRequest]: increment,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsFailure]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsRequest]: increment,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsFailure]: decrement,\r\n  [BrowseActionType.NewReleasesRequest]: increment,\r\n  [BrowseActionType.NewReleasesSuccess]: decrement,\r\n  [BrowseActionType.NewReleasesFailure]: decrement,\r\n  [FollowingActionType.FollowedArtistsRequest]: increment,\r\n  [FollowingActionType.FollowedArtistsSuccess]: decrement,\r\n  [FollowingActionType.FollowedArtistsFailure]: decrement,\r\n  [FollowingActionType.FollowedPlaylistsRequest]: increment,\r\n  [FollowingActionType.FollowedPlaylistsSuccess]: decrement,\r\n  [FollowingActionType.FollowedPlaylistsFailure]: decrement,\r\n  [LibraryActionType.SavedAlbumsRequest]: increment,\r\n  [LibraryActionType.SavedAlbumsSuccess]: decrement,\r\n  [LibraryActionType.SavedAlbumsFailure]: decrement,\r\n  [LibraryActionType.SavedTracksRequest]: increment,\r\n  [LibraryActionType.SavedTracksSuccess]: decrement,\r\n  [LibraryActionType.SavedTracksFailure]: decrement,\r\n  [PlaylistActionType.PlaylistRequest]: increment,\r\n  [PlaylistActionType.PlaylistSuccess]: decrement,\r\n  [PlaylistActionType.PlaylistFailure]: decrement,\r\n  [SearchActionType.SearchRequest]: increment,\r\n  [SearchActionType.SearchSuccess]: decrement,\r\n  [SearchActionType.SearchFailure]: decrement,\r\n  [UserProfileActionType.UserProfileRequest]: increment,\r\n  [UserProfileActionType.UserProfileSuccess]: decrement,\r\n  [UserProfileActionType.UserProfileFailure]: decrement\r\n});\r\n\r\nexport function selectIsLoading(state: CombinedState): boolean {\r\n  return !!state.loading.count;\r\n}\r\n","import { v4 } from \"uuid\";\r\nimport { FollowingActionType, LibraryActionType } from \"../actions\";\r\nimport { State as CombinedState } from \"../reducers\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface Notification {\r\n  id: string;\r\n  message: string;\r\n}\r\n\r\nexport interface State extends Array<Notification> {}\r\n\r\nconst initialState: State = [];\r\n\r\nfunction addNotification(state: State, message: string) {\r\n  return [...state, { id: v4(), message }];\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [FollowingActionType.FollowArtistSuccess]: (state: State) =>\r\n    addNotification(state, \"Artist followed\"),\r\n  [FollowingActionType.UnfollowArtistSuccess]: (state: State) =>\r\n    addNotification(state, \"Artist unfollowed\"),\r\n  [FollowingActionType.FollowPlaylistSuccess]: (state: State) =>\r\n    addNotification(state, \"Playlist followed\"),\r\n  [FollowingActionType.UnfollowPlaylistSuccess]: (state: State) =>\r\n    addNotification(state, \"Playlist unfollowed\"),\r\n  [LibraryActionType.SaveAlbumSuccess]: (state: State) =>\r\n    addNotification(state, \"Album saved\"),\r\n  [LibraryActionType.UnsaveAlbumSuccess]: (state: State) =>\r\n    addNotification(state, \"Album unsaved\"),\r\n  [LibraryActionType.SaveTrackSuccess]: (state: State) =>\r\n    addNotification(state, \"Track saved\"),\r\n  [LibraryActionType.UnsaveTrackSuccess]: (state: State) =>\r\n    addNotification(state, \"Track unsaved\")\r\n});\r\n\r\nexport function selectNotifications({ notifications }: CombinedState) {\r\n  return notifications;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { Type } from \"../types\";\r\nimport { PayloadAction } from \"./types\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsPlaying, selectIsLoaded } from \"../reducers/player\";\r\nimport { selectPlayableTracks as selectAlbumTracks } from \"../reducers/albums\";\r\nimport { selectPlayableTracks as selectArtistTracks } from \"../reducers/artists\";\r\nimport { selectPlayableTracks as selectPlaylistTracks } from \"../reducers/playlists\";\r\nimport { selectPlayableTracks as selectLibraryTracks } from \"../reducers/library\";\r\n\r\nexport enum ActionType {\r\n  LoadCollection = \"LOAD_COLLECTION\",\r\n  LoadTrack = \"LOAD_TRACK\",\r\n  TrackLoaded = \"TRACK_LOADED\",\r\n  Play = \"PLAY\",\r\n  Playing = \"PLAYING\",\r\n  Update = \"UPDATE\",\r\n  Pause = \"PAUSE\",\r\n  Paused = \"PAUSED\",\r\n  Seek = \"SEEK\",\r\n  Seeked = \"SEEKED\",\r\n  ChangeVolume = \"CHANGE_VOLUME\",\r\n  VolumeChanged = \"VOLUME_CHANGED\",\r\n  Ended = \"ENDED\",\r\n  Next = \"NEXT\",\r\n  Previous = \"PREVIOUS\",\r\n  ToggleShuffle = \"TOGGLE_SHUFFLE\",\r\n  ToggleLoop = \"TOGGLE_LOOP\"\r\n}\r\n\r\nexport interface LoadCollectionAction\r\n  extends PayloadAction<\r\n    ActionType.LoadCollection,\r\n    {\r\n      collectionId: string;\r\n      collectionType: Type;\r\n      trackIds: string[];\r\n      trackId?: string;\r\n    }\r\n  > {}\r\n\r\nconst providers = {\r\n  [Type.Album]: selectAlbumTracks,\r\n  [Type.Artist]: selectArtistTracks,\r\n  [Type.Playlist]: selectPlaylistTracks,\r\n  [Type.Library]: selectLibraryTracks\r\n};\r\n\r\nfunction getTrackIds(\r\n  state: State,\r\n  collectionId: string,\r\n  collectionType: Type\r\n): string[] {\r\n  return providers[collectionType](state, collectionId).map(track => track.id);\r\n}\r\n\r\nexport function loadCollection(\r\n  collectionId: string,\r\n  collectionType: Type,\r\n  trackId?: string\r\n) {\r\n  return (dispatch: Dispatch<LoadCollectionAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const trackIds = getTrackIds(state, collectionId, collectionType);\r\n    if (trackIds.length) {\r\n      dispatch({\r\n        type: ActionType.LoadCollection,\r\n        payload: {\r\n          collectionId: collectionId,\r\n          collectionType: collectionType,\r\n          trackIds,\r\n          trackId\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport interface LoadTrackAction\r\n  extends PayloadAction<ActionType.LoadTrack, { trackId: string }> {}\r\n\r\nexport function loadTrack(trackId: string) {\r\n  return (dispatch: Dispatch<LoadTrackAction>) => {\r\n    dispatch({\r\n      type: ActionType.LoadTrack,\r\n      payload: {\r\n        trackId\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface TrackLoadedAction\r\n  extends PayloadAction<ActionType.TrackLoaded, number> {}\r\n\r\nexport function trackLoaded(duration: number) {\r\n  return (dispatch: Dispatch<TrackLoadedAction>) => {\r\n    dispatch({\r\n      type: ActionType.TrackLoaded,\r\n      payload: duration\r\n    });\r\n  };\r\n}\r\n\r\nexport function playPause() {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isPlaying = selectIsPlaying(state);\r\n    dispatch({\r\n      type: isPlaying ? ActionType.Pause : ActionType.Play\r\n    });\r\n  };\r\n}\r\n\r\nexport function loadPlayPause(\r\n  collectionId: string,\r\n  collectionType: Type,\r\n  trackId?: string\r\n) {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isLoaded = selectIsLoaded(state);\r\n    if (!isLoaded(collectionId)) {\r\n      loadCollection(collectionId, collectionType, trackId)(dispatch, getState);\r\n    } else if (trackId && !isLoaded(trackId)) {\r\n      loadTrack(trackId)(dispatch);\r\n    } else {\r\n      playPause()(dispatch, getState);\r\n    }\r\n  };\r\n}\r\n\r\nexport function playing() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Playing\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UpdateAction\r\n  extends PayloadAction<ActionType.Update, number> {}\r\n\r\nexport function update(elapsed: number) {\r\n  return (dispatch: Dispatch<UpdateAction>) => {\r\n    dispatch({\r\n      type: ActionType.Update,\r\n      payload: elapsed\r\n    });\r\n  };\r\n}\r\n\r\nexport function paused() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Paused\r\n    });\r\n  };\r\n}\r\n\r\nexport interface SeekAction extends PayloadAction<ActionType.Seek, number> {}\r\n\r\nexport function seek(time: number) {\r\n  return (dispatch: Dispatch<SeekAction>) => {\r\n    dispatch({\r\n      type: ActionType.Seek,\r\n      payload: time\r\n    });\r\n  };\r\n}\r\n\r\nexport function seeked() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Seeked\r\n    });\r\n  };\r\n}\r\n\r\nexport function ended() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Ended });\r\n  };\r\n}\r\n\r\nexport function next() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Next });\r\n  };\r\n}\r\n\r\nexport function previous() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Previous });\r\n  };\r\n}\r\n\r\nexport interface ChangeVolumeAction\r\n  extends PayloadAction<\r\n    ActionType.ChangeVolume,\r\n    { volume: number; isMuted: boolean }\r\n  > {}\r\n\r\nexport function changeVolume(volume: number, isMuted: boolean) {\r\n  return (dispatch: Dispatch<ChangeVolumeAction>) => {\r\n    dispatch({\r\n      type: ActionType.ChangeVolume,\r\n      payload: {\r\n        volume,\r\n        isMuted\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function volumeChanged() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.VolumeChanged\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleShuffle() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.ToggleShuffle\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleLoop() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.ToggleLoop\r\n    });\r\n  };\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Type } from \"../types\";\r\nimport {\r\n  ActionType,\r\n  LoadCollectionAction,\r\n  LoadTrackAction,\r\n  TrackLoadedAction,\r\n  UpdateAction,\r\n  SeekAction,\r\n  ChangeVolumeAction\r\n} from \"../actions/player\";\r\nimport { State as CombinedState } from \".\";\r\nimport {\r\n  AlbumDictionary,\r\n  ArtistDictionary,\r\n  PlaylistDictionary,\r\n  Collection\r\n} from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTrack, selectTracks } from \"./tracks\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nenum PlayerState {\r\n  None = \"NONE\",\r\n  Playing = \"IS_PLAYING\",\r\n  Paused = \"IS_PAUSED\"\r\n}\r\n\r\nexport enum Command {\r\n  None = \"NONE\",\r\n  Play = \"PLAY\",\r\n  Pause = \"PAUSE\",\r\n  Seek = \"SEEK\",\r\n  ChangeVolume = \"CHANGE_VOLUME\"\r\n}\r\n\r\nexport interface State {\r\n  collections: Collection[];\r\n  trackIds: string[];\r\n  trackIndex: number;\r\n  playerState: PlayerState;\r\n  duration: number;\r\n  currentTime: number;\r\n  isShuffled: boolean;\r\n  isLooped: boolean;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n}\r\n\r\nconst initialState: State = {\r\n  collections: [],\r\n  trackIds: [],\r\n  trackIndex: 0,\r\n  playerState: PlayerState.None,\r\n  duration: 0,\r\n  currentTime: 0,\r\n  isShuffled: false,\r\n  isLooped: false,\r\n  volume: 1,\r\n  isMuted: false,\r\n  command: Command.None\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.LoadCollection]: (\r\n    state: State,\r\n    { payload }: LoadCollectionAction\r\n  ) => {\r\n    const { collectionId, collectionType, trackIds, trackId } = payload;\r\n    return {\r\n      ...state,\r\n      collections: [\r\n        { id: collectionId, type: collectionType },\r\n        ...state.collections.filter(recent => recent.id !== collectionId)\r\n      ],\r\n      trackIds: trackIds,\r\n      trackIndex: trackId ? trackIds.indexOf(trackId) : 0,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.LoadTrack]: (state: State, { payload }: LoadTrackAction) => ({\r\n    ...state,\r\n    trackIndex: state.trackIds.indexOf(payload.trackId),\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.TrackLoaded]: (state: State, { payload }: TrackLoadedAction) => ({\r\n    ...state,\r\n    duration: payload\r\n  }),\r\n  [ActionType.Playing]: (state: State) => ({\r\n    ...state,\r\n    playerState: PlayerState.Playing,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Update]: (state: State, { payload }: UpdateAction) => ({\r\n    ...state,\r\n    currentTime: payload,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Play]: (state: State) => ({\r\n    ...state,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Pause]: (state: State) => ({\r\n    ...state,\r\n    command: Command.Pause\r\n  }),\r\n  [ActionType.Paused]: (state: State) => ({\r\n    ...state,\r\n    playerState: PlayerState.Paused,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Seek]: (state: State, { payload }: SeekAction) => ({\r\n    ...state,\r\n    currentTime: payload,\r\n    command: Command.Seek\r\n  }),\r\n  [ActionType.Seeked]: (state: State) => ({\r\n    ...state\r\n  }),\r\n  [ActionType.Ended]: (state: State) => {\r\n    const { trackIndex, trackIds } = state;\r\n    return trackIndex === trackIds.length - 1\r\n      ? state.isLooped\r\n        ? { ...state, trackIndex: 0, command: Command.Play }\r\n        : { ...state, playerState: PlayerState.Paused }\r\n      : {\r\n          ...state,\r\n          trackIndex: trackIndex + 1,\r\n          command: Command.Play\r\n        };\r\n  },\r\n  [ActionType.Next]: (state: State) => {\r\n    const { trackIndex, trackIds } = state;\r\n    return {\r\n      ...state,\r\n      trackIndex: trackIndex === trackIds.length - 1 ? 0 : state.trackIndex + 1,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.Previous]: (state: State) => {\r\n    const { trackIndex, trackIds } = state;\r\n    return {\r\n      ...state,\r\n      trackIndex: trackIndex === 0 ? trackIds.length - 1 : state.trackIndex - 1,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.ToggleShuffle]: (state: State) => ({\r\n    ...state,\r\n    isShuffled: !state.isShuffled\r\n  }),\r\n  [ActionType.ToggleLoop]: (state: State) => ({\r\n    ...state,\r\n    isLooped: !state.isLooped\r\n  }),\r\n  [ActionType.ChangeVolume]: (\r\n    state: State,\r\n    { payload }: ChangeVolumeAction\r\n  ) => ({\r\n    ...state,\r\n    ...payload,\r\n    command: Command.ChangeVolume\r\n  }),\r\n  [ActionType.VolumeChanged]: (state: State) => ({\r\n    ...state,\r\n    command: Command.None\r\n  })\r\n});\r\n\r\nexport function selectCollection({ player }: CombinedState) {\r\n  const { collections } = player;\r\n  if (collections.length) {\r\n    return collections[0];\r\n  }\r\n}\r\n\r\nexport function selectLoadedTrack(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  if (trackIds) {\r\n    return selectTrack(state, trackIds[trackIndex]);\r\n  }\r\n}\r\n\r\nexport function selectLoadedTracks(state: CombinedState) {\r\n  const { trackIds } = state.player;\r\n  return trackIds ? selectTracks(state)(trackIds) : [];\r\n}\r\n\r\nexport function selectLoadedAlbum(state: CombinedState) {\r\n  const track = selectLoadedTrack(state);\r\n  if (track) {\r\n    return selectAlbum(state, track.album);\r\n  }\r\n}\r\n\r\nexport function selectLoadedArtists(state: CombinedState) {\r\n  const track = selectLoadedTrack(state);\r\n  return track ? selectArtists(state)(track.artists) : [];\r\n}\r\n\r\nexport function selectIsLoaded(state: CombinedState) {\r\n  const { collections: recents, trackIds, trackIndex } = state.player;\r\n  return (id: string) =>\r\n    (recents.length && recents[0].id === id) ||\r\n    (!!trackIds.length && trackIds[trackIndex] === id);\r\n}\r\n\r\nexport function selectIsPlaying(state: CombinedState, id?: string) {\r\n  const { playerState } = state.player;\r\n  return (\r\n    (!id || selectIsLoaded(state)(id)) && playerState === PlayerState.Playing\r\n  );\r\n}\r\n\r\nexport function selectCanPlayPause(state: CombinedState) {\r\n  const { player } = state;\r\n  return (\r\n    player.playerState !== PlayerState.None &&\r\n    player.currentTime !== player.duration\r\n  );\r\n}\r\n\r\nexport function selectCanSeek(state: CombinedState) {\r\n  return state.player.playerState !== PlayerState.None;\r\n}\r\n\r\nexport function selectCanNext(state: CombinedState) {\r\n  const { trackIds, trackIndex, isLooped } = state.player;\r\n  return trackIds.length > 1 && (trackIndex < trackIds.length - 1 || isLooped);\r\n}\r\n\r\nexport function selectCanPrevious(state: CombinedState) {\r\n  const { trackIds, trackIndex, isLooped } = state.player;\r\n  return trackIds.length > 1 && (trackIndex > 0 || isLooped);\r\n}\r\n\r\nexport function selectIsShuffled({ player }: CombinedState) {\r\n  return player.isShuffled;\r\n}\r\n\r\nexport function selectIsLooped({ player }: CombinedState) {\r\n  return player.isLooped;\r\n}\r\n\r\nexport interface Times {\r\n  duration: number;\r\n  currentTime: number;\r\n}\r\n\r\nexport const selectTimes = createSelector(\r\n  ({ player }: CombinedState) => player.duration,\r\n  ({ player }: CombinedState) => player.currentTime,\r\n  (duration: number, currentTime: number) => ({\r\n    duration,\r\n    currentTime\r\n  })\r\n);\r\n\r\nexport function selectVolume({ player }: CombinedState) {\r\n  return player.volume;\r\n}\r\n\r\nexport function selectIsMuted({ player }: CombinedState) {\r\n  return player.isMuted;\r\n}\r\n\r\nexport function selectCommand(state: CombinedState): Command {\r\n  return state.player.command;\r\n}\r\n\r\nexport const selectRecents = createSelector(\r\n  ({ player }: CombinedState) => player,\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (\r\n    player: State,\r\n    albums: AlbumDictionary,\r\n    artists: ArtistDictionary,\r\n    playlists: PlaylistDictionary\r\n  ) => {\r\n    return player.collections\r\n      .filter(collection => collection.id)\r\n      .map(collection => {\r\n        switch (collection.type) {\r\n          case Type.Album:\r\n            return albums[collection.id];\r\n          case Type.Artist:\r\n            return artists[collection.id];\r\n          default:\r\n            return playlists[collection.id];\r\n        }\r\n      });\r\n  }\r\n);\r\n","import React, { useState, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport enum ImageShape {\r\n  Square = \"SQUARE\",\r\n  Round = \"ROUND\"\r\n}\r\n\r\nconst StyledImg = styled.img<{ shape: ImageShape; isLoaded: boolean }>`\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: auto;\r\n  object-fit: cover;\r\n  opacity: ${props => (props.isLoaded ? \"1\" : \"0\")}\r\n  width: 100%;\r\n  transition: opacity .2s;\r\n`;\r\n\r\nconst Container = styled.div<{ shape: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledText = styled.span`\r\n  font-size: ${props => props.theme.thickness.extraLarge}px;\r\n  font-weight: ${props => props.theme.fontWeight.light}\r\n  left: 50%;\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\ninterface Props {\r\n  source?: string;\r\n  shape: ImageShape;\r\n}\r\n\r\nfunction Image({\r\n  className,\r\n  source,\r\n  shape\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  function handleLoad() {\r\n    setIsLoaded(true);\r\n  }\r\n\r\n  return source ? (\r\n    <StyledImg\r\n      className={className}\r\n      src={source}\r\n      shape={shape}\r\n      onLoad={handleLoad}\r\n      isLoaded={isLoaded}\r\n    />\r\n  ) : (\r\n    <Container className={className} shape={shape}>\r\n      <StyledText>?</StyledText>\r\n    </Container>\r\n  );\r\n}\r\n\r\nImage.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default Image;\r\n","import { Artist, Image, Type } from \"../types\";\r\nimport { ImageShape } from \"../components/core/Image\";\r\n\r\nexport function getArtistNames(artists: Artist[]): string {\r\n  return artists.map(artist => artist.name).join(\", \");\r\n}\r\n\r\nexport function getImageSource(object: {\r\n  images: Image[];\r\n}): string | undefined {\r\n  return object && object.images && object.images.length\r\n    ? object.images[0].url\r\n    : undefined;\r\n}\r\n\r\nexport function getImageShape(object: { type: Type }): ImageShape {\r\n  return object.type === Type.Artist ? ImageShape.Round : ImageShape.Square;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Album, Artist, Playlist, Image, Type } from \"../types\";\r\nimport { SearchActionType as ActionType } from \"../actions\";\r\nimport {\r\n  SearchSuccessAction,\r\n  SelectAlbumAction,\r\n  SelectArtistAction,\r\n  SelectPlaylistAction\r\n} from \"../actions/search\";\r\nimport { getImageSource } from \"../utils\";\r\nimport { State as CombinedState } from \".\";\r\nimport {\r\n  Collection,\r\n  AlbumDictionary,\r\n  ArtistDictionary,\r\n  PlaylistDictionary\r\n} from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums as selectAlbumsById } from \"./albums\";\r\nimport { selectArtists as selectArtistsById } from \"./artists\";\r\nimport { selectPlaylists as selectPlaylistsById } from \"./playlists\";\r\n\r\nexport interface State {\r\n  albumIds: string[];\r\n  artistIds: string[];\r\n  playlistIds: string[];\r\n  recents: Collection[];\r\n}\r\n\r\nconst initialState: State = {\r\n  albumIds: [],\r\n  artistIds: [],\r\n  playlistIds: [],\r\n  recents: []\r\n};\r\n\r\nfunction addRecent(\r\n  state: State,\r\n  item: { id: string; name: string; images: Image[] },\r\n  type: Type\r\n) {\r\n  return {\r\n    ...state,\r\n    recents: [\r\n      { type, id: item.id, name: item.name, imageSource: getImageSource(item) },\r\n      ...state.recents.filter(recent => recent.id !== item.id)\r\n    ]\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.SearchSuccess]: (state: State, action: SearchSuccessAction) => {\r\n    const { results } = action.payload;\r\n    const { albums, artists, playlists } = results[Object.keys(results)[0]];\r\n    return {\r\n      ...state,\r\n      albumIds: albums,\r\n      artistIds: artists,\r\n      playlistIds: playlists\r\n    };\r\n  },\r\n  [ActionType.ClearResults]: (state: State) => ({\r\n    ...state,\r\n    albumIds: [],\r\n    artistIds: [],\r\n    playlistIds: []\r\n  }),\r\n  [ActionType.SelectAlbum]: (state: State, { payload }: SelectAlbumAction) =>\r\n    addRecent(state, payload, Type.Album),\r\n  [ActionType.SelectArtist]: (state: State, { payload }: SelectArtistAction) =>\r\n    addRecent(state, payload, Type.Artist),\r\n  [ActionType.SelectPlaylist]: (\r\n    state: State,\r\n    { payload }: SelectPlaylistAction\r\n  ) => addRecent(state, payload, Type.Playlist),\r\n  [ActionType.ClearRecents]: (state: State) => ({\r\n    ...state,\r\n    recents: []\r\n  })\r\n});\r\n\r\nexport function selectAlbums(state: CombinedState): Album[] {\r\n  return selectAlbumsById(state)(state.search.albumIds);\r\n}\r\n\r\nexport function selectArtists(state: CombinedState): Artist[] {\r\n  return selectArtistsById(state)(state.search.artistIds).sort(\r\n    (x, y) => y.popularity - x.popularity\r\n  );\r\n}\r\n\r\nexport function selectPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylistsById(state)(state.search.playlistIds);\r\n}\r\n\r\nexport const selectRecents = createSelector(\r\n  ({ search }: CombinedState) => search,\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (\r\n    search: State,\r\n    albums: AlbumDictionary,\r\n    artists: ArtistDictionary,\r\n    playlists: PlaylistDictionary\r\n  ) => {\r\n    return search.recents.map(recent => {\r\n      switch (recent.type) {\r\n        case Type.Album:\r\n          return albums[recent.id];\r\n        case Type.Artist:\r\n          return artists[recent.id];\r\n        default:\r\n          return playlists[recent.id];\r\n      }\r\n    });\r\n  }\r\n);\r\n","import { UserProfile } from \"../types\";\r\nimport { UserProfileActionType as ActionType } from \"../actions\";\r\nimport { UserProfileSuccessAction } from \"../actions/userProfile\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.UserProfileSuccess]: (\r\n    state: State,\r\n    action: UserProfileSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    userProfile: action.payload\r\n  })\r\n});\r\n\r\nexport function selectUserProfile(\r\n  state: CombinedState\r\n): UserProfile | undefined {\r\n  return state.userProfile.userProfile;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport albums, { State as AlbumsState } from \"./albums\";\r\nimport artists, { State as ArtistsState } from \"./artists\";\r\nimport authorization, { State as AuthorizationState } from \"./authorization\";\r\nimport browse, { State as BrowseState } from \"./browse\";\r\nimport following, { State as FollowingState } from \"./following\";\r\nimport library, { State as LibraryState } from \"./library\";\r\nimport loading, { State as LoadingState } from \"./loading\";\r\nimport notifications, { State as NotificationsState } from \"./notifications\";\r\nimport player, { State as PlayerState } from \"./player\";\r\nimport playlists, { State as PlaylistsState } from \"./playlists\";\r\nimport search, { State as SearchState } from \"./search\";\r\nimport tracks, { State as TracksState } from \"./tracks\";\r\nimport userProfile, { State as UserProfileState } from \"./userProfile\";\r\n\r\nexport interface State {\r\n  albums: AlbumsState;\r\n  artists: ArtistsState;\r\n  authorization: AuthorizationState;\r\n  browse: BrowseState;\r\n  following: FollowingState;\r\n  library: LibraryState;\r\n  loading: LoadingState;\r\n  notifications: NotificationsState;\r\n  player: PlayerState;\r\n  playlists: PlaylistsState;\r\n  search: SearchState;\r\n  tracks: TracksState;\r\n  userProfile: UserProfileState;\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  albums,\r\n  artists,\r\n  authorization,\r\n  browse,\r\n  following,\r\n  library,\r\n  loading,\r\n  notifications,\r\n  player,\r\n  playlists,\r\n  search,\r\n  tracks,\r\n  userProfile\r\n});\r\n","const click = (props: any) => `\r\n  overflow: hidden;\r\n  position relative;\r\n  \r\n  &::before, &::after {\r\n    content: \"\";\r\n    height: 100%;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  &::after {\r\n    background: ${props.theme.background.active};\r\n    opacity: 0;\r\n    transition: opacity .2s;\r\n  }\r\n  \r\n  &:not(:disabled):hover {\r\n    color: ${props.theme.foreground.default};\r\n  }\r\n\r\n  &:not(:disabled):hover::before {\r\n    background: ${props.theme.background.hover};\r\n  }\r\n\r\n  &:not(:disabled):active::after {\r\n    opacity: 1;\r\n    transition: 0s;\r\n  }\r\n`;\r\n\r\nexport { click };\r\n","import styled from \"styled-components\";\r\nimport { click } from \"../../styles/effects\";\r\n\r\nconst ButtonBase = styled.button`\r\n  ${click}\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.dark};\r\n  }\r\n`;\r\n\r\nexport default ButtonBase;\r\n","import styled from \"../../styles/styled\";\r\nimport ButtonBase from \"./ButtonBase\";\r\n\r\nconst Button = styled(ButtonBase)`\r\n  background: ${props => props.theme.color.primary};\r\n  border-radius: ${props => props.theme.thickness.medium}px;\r\n  color: ${props => props.theme.foreground.default};\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: ${props => props.theme.thickness.small}px\r\n    ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${props => props.theme.fontSize.extraLarge}px;\r\n  font-weight: ${props => props.theme.fontWeight.bold};\r\n  margin-bottom: ${props => props.theme.thickness.medium}px;\r\n  text-align: center;\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nexport default Heading;\r\n","import React, { HTMLAttributes } from \"react\";\r\n\r\nexport enum IconType {\r\n  Favorite = \"favorite\",\r\n  Home = \"home\",\r\n  LibraryBooks = \"library_books\",\r\n  LibraryMusic = \"library_music\",\r\n  Loop = \"loop\",\r\n  MusicNote = \"music_note\",\r\n  MusicOff = \"music_off\",\r\n  Pause = \"pause\",\r\n  Person = \"person\",\r\n  PlayArrow = \"play_arrow\",\r\n  PlaylistPlay = \"playlist_play\",\r\n  QueueMusic = \"queue_music\",\r\n  Refresh = \"refresh\",\r\n  Search = \"search\",\r\n  SentimentVeryDissatisfied = \"sentiment_very_dissatisfied\",\r\n  Shuffle = \"shuffle\",\r\n  SkipNext = \"skip_next\",\r\n  SkipPrevious = \"skip_previous\",\r\n  ViewModule = \"view_module\",\r\n  VolumeOff = \"volume_off\",\r\n  VolumeUp = \"volume_up\",\r\n  Wifi = \"wifi\"\r\n}\r\n\r\ninterface Props {\r\n  type: IconType;\r\n}\r\n\r\nfunction Icon({ className, type }: Props & HTMLAttributes<HTMLElement>) {\r\n  return <i className={`material-icons ${className}`}>{type}</i>;\r\n}\r\n\r\nexport default Icon;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonBase from \"./ButtonBase\";\r\nimport Icon, { IconType } from \"./Icon\";\r\n\r\nconst StyedButton = styled(ButtonBase)`\r\n  border-radius: 50%;\r\n  color: ${props => props.theme.foreground.dark};\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: ${props => props.theme.thickness.small}px;\r\n  width: ${props => props.theme.thickness.large}px;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.darker};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  font-size: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nexport interface Props {\r\n  iconType: IconType;\r\n}\r\n\r\nfunction RoundButton({\r\n  iconType,\r\n  ...rest\r\n}: Props & ButtonHTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <StyedButton {...rest}>\r\n      <StyledIcon type={iconType} />\r\n    </StyedButton>\r\n  );\r\n}\r\n\r\nexport default RoundButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst Text = styled.span`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport default Text;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport RoundButton, { Props as RoundButtonProps } from \"./RoundButton\";\r\n\r\nconst StyledRoundButton = styled(RoundButton)<{ isToggled: boolean }>`\r\n  ${props => props.isToggled && `color: ${props.theme.color.primary};`}\r\n\r\n  &:not(:disabled):hover {\r\n    ${props => props.isToggled && `color: ${props.theme.color.primary};`}\r\n  }\r\n`;\r\n\r\ninterface Props extends RoundButtonProps {\r\n  isToggled: boolean;\r\n}\r\n\r\nfunction ToggleButton({\r\n  iconType,\r\n  isToggled,\r\n  ...rest\r\n}: Props & ButtonHTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <StyledRoundButton {...rest} iconType={iconType} isToggled={isToggled} />\r\n  );\r\n}\r\n\r\nToggleButton.defaultProps = {\r\n  isToggled: false\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Icon, IconType, Text } from \"../core\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledText = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.large}px;\r\n  font-weight: ${props => props.theme.fontWeight.bold};\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst Title = () => {\r\n  return (\r\n    <StyledLink to={`${process.env.PUBLIC_URL}/browse`}>\r\n      <StyledIcon type={IconType.Wifi} />\r\n      <StyledText>Spotify</StyledText>\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst User = (props: UserProfile) => {\r\n  const { display_name } = props;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledIcon type={IconType.Person} />\r\n      <span>{display_name}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { getUserProfile } from \"../../actions/userProfile\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoggedIn } from \"../../reducers/authorization\";\r\nimport { selectUserProfile } from \"../../reducers/userProfile\";\r\nimport Title from \"./Title\";\r\nimport User from \"./User\";\r\n\r\nconst Wrapper = styled.header`\r\n  align-items: center;\r\n  display: flex;\r\n  background: ${props => props.theme.color.primary};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  justify-content: space-between;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  z-index: 2;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.large}px;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  userProfile?: UserProfile;\r\n  getUserProfile: () => void;\r\n}\r\n\r\nfunction Header({\r\n  className,\r\n  isLoggedIn,\r\n  userProfile,\r\n  getUserProfile\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const effect = () => {\r\n    if (isLoggedIn) {\r\n      getUserProfile();\r\n    }\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Title />\r\n      {userProfile && <User {...userProfile} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state),\r\n  userProfile: selectUserProfile(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getUserProfile\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Header);\r\n","import { UserProfileActionType as ActionType } from \".\";\r\nimport { UserProfile } from \"../types\";\r\nimport { FetchDispatch, PayloadAction } from \"./types\";\r\n\r\nexport interface UserProfileSuccessAction\r\n  extends PayloadAction<ActionType.UserProfileSuccess, UserProfile> {}\r\n\r\nexport function getUserProfile() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UserProfileRequest,\r\n        ActionType.UserProfileSuccess,\r\n        ActionType.UserProfileFailure\r\n      ],\r\n      path: \"me\"\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { capitalize } from \"lodash\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { getImageSource, getImageShape } from \"../../utils\";\r\nimport { Text, Image } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\n\r\nconst StyledButton = styled(ButtonBase)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: ${props => props.theme.thickness.small}px;\r\n  width 100%;\r\n`;\r\n\r\nconst StyledImage = styled(Image)`\r\n  height: ${props => props.theme.thickness.large}px;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  width: ${props => props.theme.thickness.large}px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Name = styled(Text)`\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Type = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  text-align: left;\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  recent: Album | Artist | Playlist;\r\n}\r\n\r\nfunction RecentItem({ history, recent }: Props) {\r\n  function handleClick() {\r\n    history.push(`${process.env.PUBLIC_URL}/${recent.type}/${recent.id}`);\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <StyledButton onClick={handleClick}>\r\n        <StyledImage\r\n          source={getImageSource(recent)}\r\n          shape={getImageShape(recent)}\r\n        />\r\n        <Container>\r\n          <Name>{recent.name}</Name>\r\n          <Type>{capitalize(recent.type)}</Type>\r\n        </Container>\r\n      </StyledButton>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default withRouter(RecentItem);\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectRecents } from \"../../reducers/player\";\r\nimport RecentItem from \"./RecentItem\";\r\n\r\nconst Title = styled.h3`\r\n  font-size: ${props => props.theme.fontSize.medium}px;\r\n  font-weight: ${props => props.theme.fontWeight.normal};\r\n  text-align: center;\r\n  margin-bottom: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\ninterface Props {\r\n  recents: (Album | Artist | Playlist)[];\r\n}\r\n\r\nfunction RecentList({\r\n  className,\r\n  recents\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <div className={className}>\r\n      {!!recents.length && <Title>Recently Played</Title>}\r\n      <ul>\r\n        {recents.map(recent => (\r\n          <RecentItem key={recent.id} recent={recent} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  recents: selectRecents(state)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(RecentList);\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { click } from \"../../styles/effects\";\r\nimport { Icon, IconType } from \"../core\";\r\nimport RecentList from \"./RecentList\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${props => props.theme.background.dark};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  z-index: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    box-shadow: 2px 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    padding: ${props => props.theme.thickness.medium}px 0;\r\n    width: ${props => props.theme.thickness.extraExtraLarge}px;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    margin-bottom: ${props => props.theme.thickness.medium}px;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  ${click}\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    border-bottom: ${props => props.theme.thickness.extraExtraSmall}px solid\r\n      ${props => props.theme.color.primary};\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.large}px;\r\n\r\n    &.active {\r\n      border: none;\r\n      border-right: ${props => props.theme.thickness.extraExtraSmall}px solid\r\n        ${props => props.theme.color.primary};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst StyledRecents = styled(RecentList)`\r\n  overflow: hidden;\r\n  display: none;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst items = [\r\n  {\r\n    url: `${process.env.PUBLIC_URL}/browse`,\r\n    icon: IconType.Home,\r\n    text: \"Browse\"\r\n  },\r\n  {\r\n    url: `${process.env.PUBLIC_URL}/search`,\r\n    icon: IconType.Search,\r\n    text: \"Search\"\r\n  },\r\n  {\r\n    url: `${process.env.PUBLIC_URL}/library`,\r\n    icon: IconType.LibraryBooks,\r\n    text: \"Library\"\r\n  }\r\n];\r\n\r\nconst Menu = ({ className }: HTMLAttributes<HTMLElement>) => {\r\n  return (\r\n    <Wrapper className={className}>\r\n      <List>\r\n        {items.map(item => (\r\n          <li key={item.url}>\r\n            <StyledNavLink to={item.url}>\r\n              <StyledIcon type={item.icon} />\r\n              {item.text}\r\n            </StyledNavLink>\r\n          </li>\r\n        ))}\r\n      </List>\r\n\r\n      <StyledRecents />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist } from \"../../types\";\r\n\r\nconst List = styled.ul`\r\n  color: ${props => props.theme.foreground.dark};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n\r\n  :not(:last-child)::after {\r\n    content: \",\";\r\n    margin-right: ${props => props.theme.thickness.extraSmall}px;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${props => props.theme.foreground.dark};\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nfunction ArtistNames({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <List>\r\n      {artists.map(artist => (\r\n        <Item key={artist.id}>\r\n          <StyledLink to={`${process.env.PUBLIC_URL}/artist/${artist.id}`}>\r\n            {artist.name}\r\n          </StyledLink>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default ArtistNames;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Album, Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { Image, Text, ToggleButton, IconType } from \"../core\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport {\r\n  selectLoadedArtists,\r\n  selectLoadedAlbum,\r\n  selectLoadedTrack\r\n} from \"../../reducers/player\";\r\nimport ArtistNames from \"../details/ArtistNames\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyedImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  height: 75px;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  width: 75px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\nconst FavoriteButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Favorite\r\n}))`\r\n  flex-shrink: 0;\r\n`;\r\n\r\ninterface Props {\r\n  track?: Track;\r\n  album?: Album;\r\n  artists: Artist[];\r\n}\r\n\r\nfunction TrackInfos({\r\n  className,\r\n  track,\r\n  album,\r\n  artists\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <Wrapper className={className}>\r\n      {album && (\r\n        <Link to={`${process.env.PUBLIC_URL}/album/${album.id}`}>\r\n          <StyedImage source={getImageSource(album)} />\r\n        </Link>\r\n      )}\r\n\r\n      {track && (\r\n        <>\r\n          <Container>\r\n            <Title>{track.name}</Title>\r\n            <ArtistNames artists={artists} />\r\n          </Container>\r\n\r\n          <FavoriteButton />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  track: selectLoadedTrack(state),\r\n  album: selectLoadedAlbum(state),\r\n  artists: selectLoadedArtists(state)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(TrackInfos);\r\n","import React, { useEffect, useRef, SyntheticEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectLoadedTrack,\r\n  Times,\r\n  selectTimes,\r\n  selectVolume,\r\n  selectIsMuted,\r\n  Command,\r\n  selectCommand\r\n} from \"../../reducers/player\";\r\nimport {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n} from \"../../actions/player\";\r\n\r\ninterface Props {\r\n  loadedTrack?: Track;\r\n  times: Times;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n  trackLoaded: (duration: number) => void;\r\n  playing: () => void;\r\n  update: (elaped: number) => void;\r\n  paused: () => void;\r\n  seeked: () => void;\r\n  volumeChanged: () => void;\r\n  ended: () => void;\r\n}\r\n\r\nfunction Audio({\r\n  loadedTrack,\r\n  times,\r\n  volume,\r\n  isMuted,\r\n  command,\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n}: Props) {\r\n  const audio = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    const currentAudio = audio.current;\r\n\r\n    if (currentAudio) {\r\n      const { currentTime } = times;\r\n      switch (command) {\r\n        case Command.Play:\r\n          currentAudio.play();\r\n          break;\r\n        case Command.Pause:\r\n          currentAudio.pause();\r\n          break;\r\n        case Command.Seek:\r\n          currentAudio.currentTime = currentTime;\r\n          break;\r\n        case Command.ChangeVolume:\r\n          currentAudio.volume = isMuted ? 0 : volume;\r\n      }\r\n    }\r\n  });\r\n\r\n  function handleLoadedMetadata(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    trackLoaded(target.duration);\r\n  }\r\n\r\n  function handleTimeUpdate(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    update(target.currentTime);\r\n  }\r\n\r\n  function handlePause(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    if (target.currentTime !== target.duration) {\r\n      paused();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <audio\r\n      ref={audio}\r\n      src={loadedTrack && loadedTrack.preview_url}\r\n      onLoadedMetadata={handleLoadedMetadata}\r\n      onPlay={playing}\r\n      onTimeUpdate={handleTimeUpdate}\r\n      onPause={handlePause}\r\n      onSeeked={seeked}\r\n      onVolumeChange={volumeChanged}\r\n      onEnded={ended}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  loadedTrack: selectLoadedTrack(state),\r\n  times: selectTimes(state),\r\n  volume: selectVolume(state),\r\n  isMuted: selectIsMuted(state),\r\n  command: selectCommand(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Audio);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { State } from \"../../reducers\";\r\nimport { IconType, RoundButton, ToggleButton } from \"../core\";\r\nimport {\r\n  selectCanNext,\r\n  selectCanPrevious,\r\n  selectCanPlayPause,\r\n  selectIsLooped,\r\n  selectIsPlaying,\r\n  selectIsShuffled\r\n} from \"../../reducers/player\";\r\nimport {\r\n  next,\r\n  previous,\r\n  toggleLoop,\r\n  playPause,\r\n  toggleShuffle\r\n} from \"../../actions/player\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledRoundButton = styled(RoundButton)`\r\n  margin: 0 ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\nconst StyledToggleButton = styled(ToggleButton)`\r\n  margin: 0 ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\nconst ShuffleButton = styled(StyledToggleButton).attrs(() => ({\r\n  iconType: IconType.Shuffle\r\n}))``;\r\n\r\nconst PreviousButton = styled(StyledRoundButton).attrs(() => ({\r\n  iconType: IconType.SkipPrevious\r\n}))``;\r\n\r\nconst PlayButton = styled(StyledRoundButton)``;\r\n\r\nconst NextButton = styled(StyledRoundButton).attrs(() => ({\r\n  iconType: IconType.SkipNext\r\n}))``;\r\n\r\nconst LoopButton = styled(StyledToggleButton).attrs(() => ({\r\n  iconType: IconType.Loop\r\n}))``;\r\n\r\ninterface Props {\r\n  isPlaying: boolean;\r\n  isShuffled: boolean;\r\n  canPrevious: boolean;\r\n  canPlayPause: boolean;\r\n  canNext: boolean;\r\n  isLooped: boolean;\r\n  toggleShuffle: () => void;\r\n  previous: () => void;\r\n  playPause: () => void;\r\n  next: () => void;\r\n  toggleLoop: () => void;\r\n}\r\n\r\nfunction Controls({\r\n  isPlaying,\r\n  isShuffled,\r\n  canPrevious,\r\n  canPlayPause,\r\n  canNext,\r\n  isLooped,\r\n  toggleShuffle,\r\n  previous,\r\n  playPause,\r\n  next,\r\n  toggleLoop\r\n}: Props) {\r\n  return (\r\n    <Wrapper>\r\n      <ShuffleButton onClick={toggleShuffle} isToggled={isShuffled} />\r\n      <PreviousButton disabled={!canPrevious} onClick={previous} />\r\n\r\n      <PlayButton\r\n        disabled={!canPlayPause}\r\n        onClick={playPause}\r\n        iconType={isPlaying ? IconType.Pause : IconType.PlayArrow}\r\n      />\r\n\r\n      <NextButton disabled={!canNext} onClick={next} />\r\n      <LoopButton onClick={toggleLoop} isToggled={isLooped} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isPlaying: selectIsPlaying(state),\r\n  isShuffled: selectIsShuffled(state),\r\n  canPrevious: selectCanPrevious(state),\r\n  canPlayPause: selectCanPlayPause(state),\r\n  canNext: selectCanNext(state),\r\n  isLooped: selectIsLooped(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  toggleShuffle,\r\n  previous,\r\n  playPause,\r\n  next,\r\n  toggleLoop\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Controls);\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div<{ isDisabled: boolean }>`\r\n  border-radius: ${props => props.theme.thickness.extraExtraSmall}px;\r\n  cursor: ${props => (props.isDisabled ? \"default\" : \"pointer\")};\r\n  padding: 0 ${props => props.theme.thickness.small}px\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.medium}px;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst Left = styled.div.attrs<{ width: number }>(props => ({\r\n  style: { width: `${props.width * 100}%` }\r\n}))<{ width: number }>`\r\n  background: ${props => props.theme.color.primary};\r\n  border-radius: ${props => props.theme.thickness.extraExtraSmall}px 0 0\r\n    ${props => props.theme.thickness.extraExtraSmall}px;\r\n  height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n`;\r\n\r\nconst Thumb = styled.div.attrs<{ position: number }>(({ position }) => ({\r\n  style: { left: `${position * 100}%` }\r\n}))<{ position: number }>`\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  height: ${props => props.theme.thickness.medium}px;\r\n  margin-left: -12.5px;\r\n  position: absolute;\r\n  visibility: hidden;\r\n  width: ${props => props.theme.thickness.medium}px;\r\n  z-index: 1;\r\n  transition: left 0.2s;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.default};\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    content: \"\";\r\n    height: 50%;\r\n    left: 25%;\r\n    position: absolute;\r\n    top: 25%;\r\n    width: 50%;\r\n  }\r\n\r\n  ${Wrapper}:hover & {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div.attrs<{ width: number }>(props => ({\r\n  style: { width: `${100 - props.width * 100}%` }\r\n}))<{ width: number }>`\r\n  background: ${props => props.theme.foreground.dark};\r\n  border-radius: 0 ${props => props.theme.thickness.extraExtraSmall}px\r\n    ${props => props.theme.thickness.extraExtraSmall}px 0;\r\n  height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  className?: string;\r\n  value: number;\r\n  canChange: boolean;\r\n  onChange: (value: number) => void;\r\n}\r\n\r\nfunction Slider({ className, value, canChange, onChange }: Props) {\r\n  const [isDown, setIsDown] = useState(false);\r\n  const [localValue, setLocalValue] = useState(0);\r\n\r\n  const wrapper = useRef<HTMLDivElement>(null);\r\n  const thumb = useRef<HTMLDivElement>(null);\r\n\r\n  function getValue(x: number) {\r\n    const currentWrapper = wrapper.current;\r\n    const currentTHunb = thumb.current;\r\n    if (!currentWrapper || !currentTHunb) {\r\n      return 0;\r\n    }\r\n\r\n    const clientRect = currentWrapper.getBoundingClientRect();\r\n    let value = (x - clientRect.left) / currentWrapper.clientWidth;\r\n    if (value < 0) {\r\n      value = 0;\r\n    } else if (value > 1) {\r\n      value = 1;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleMouseDown(event: React.MouseEvent<HTMLElement>) {\r\n    if (!canChange) {\r\n      return;\r\n    }\r\n\r\n    setIsDown(true);\r\n    setLocalValue(getValue(event.pageX));\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n  }\r\n\r\n  function handleMouseMove(event: MouseEvent) {\r\n    setLocalValue(getValue(event.pageX));\r\n  }\r\n\r\n  function handleMouseUp(event: MouseEvent) {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    setIsDown(false);\r\n    const value = getValue(event.pageX);\r\n    onChange(value);\r\n  }\r\n\r\n  function getCurrentValue() {\r\n    return isDown ? localValue : value;\r\n  }\r\n\r\n  const currentValue = getCurrentValue();\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapper}\r\n      onMouseDown={handleMouseDown}\r\n      isDisabled={!canChange}\r\n      className={className}\r\n    >\r\n      <Container>\r\n        <Left width={currentValue} />\r\n        {canChange && <Thumb ref={thumb} position={currentValue} />}\r\n        <Right width={currentValue} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nSlider.defaultProps = {\r\n  value: 0,\r\n  canChange: true,\r\n  onChange: () => {}\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-cotent: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProgressTime = styled.div`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.fontSize.small}px;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n`;\r\n\r\ninterface Props {\r\n  duration: number;\r\n  currentTime: number;\r\n  canSeek: boolean;\r\n  onSeek: (time: number) => void;\r\n}\r\n\r\nfunction Playback({ duration, currentTime, canSeek, onSeek }: Props) {\r\n  function renderTime(seconds: number) {\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.round(seconds);\r\n\r\n    return (\r\n      <ProgressTime>\r\n        {`${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`}\r\n      </ProgressTime>\r\n    );\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    onSeek(duration * value);\r\n  }\r\n\r\n  const progress = duration ? currentTime / duration : 0;\r\n\r\n  return (\r\n    <Wrapper>\r\n      {renderTime(currentTime)}\r\n      <Slider value={progress} onChange={handleChange} canChange={canSeek} />\r\n      {renderTime(duration)}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Playback;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { changeVolume } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectVolume, selectIsMuted } from \"../../reducers/player\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst VolumeButton = styled(RoundButton)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  flex-grow: 1;\r\n`;\r\n\r\ninterface Props {\r\n  volume: number;\r\n  isMuted: boolean;\r\n  changeVolume: (volume: number, isMuted: boolean) => void;\r\n}\r\n\r\nfunction Volume({\r\n  className,\r\n  volume,\r\n  isMuted,\r\n  changeVolume\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  function handleClick() {\r\n    changeVolume(volume, !isMuted);\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    changeVolume(value, false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <VolumeButton\r\n        iconType={isMuted ? IconType.VolumeOff : IconType.VolumeUp}\r\n        onClick={handleClick}\r\n      />\r\n      <StyledSlider value={isMuted ? 0 : volume} onChange={handleChange} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  volume: selectVolume(state),\r\n  isMuted: selectIsMuted(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  changeVolume\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Volume);\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { State } from \"../../reducers\";\r\nimport { Times, selectTimes, selectCanSeek } from \"../../reducers/player\";\r\nimport { seek } from \"../../actions/player\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport TrackInfos from \"./TrackInfos\";\r\nimport Audio from \"./Audio\";\r\nimport Controls from \"./Controls\";\r\nimport Playback from \"./Playback\";\r\nimport Volume from \"./Volume\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  background: ${props => props.theme.background.light};\r\n  box-sizing: border-box;\r\n  box-shadow: 0 -2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.extraLarge}px;\r\n  padding: ${props => props.theme.thickness.small}px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst ThirdWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftWrapper = styled(ThirdWrapper)`\r\n  display: none;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    display: block;\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nconst CenterWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.small}px;\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst RightWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: none;\r\n  justify-content: flex-end;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    display: flex;\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nconst StyledVolume = styled(Volume)`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst QueueButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.QueueMusic\r\n}))``;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  times: Times;\r\n  canSeek: boolean;\r\n  seek: (time: number) => void;\r\n}\r\n\r\nfunction Player({\r\n  className,\r\n  history,\r\n  times,\r\n  canSeek,\r\n  seek\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  function handleQueueClick() {\r\n    history.push(`${process.env.PUBLIC_URL}/queue`);\r\n  }\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <LeftWrapper>\r\n        <TrackInfos />\r\n      </LeftWrapper>\r\n\r\n      <CenterWrapper>\r\n        <Controls />\r\n\r\n        <Playback\r\n          duration={times.duration}\r\n          currentTime={times.currentTime}\r\n          canSeek={canSeek}\r\n          onSeek={seek}\r\n        />\r\n      </CenterWrapper>\r\n\r\n      <RightWrapper>\r\n        <QueueButton onClick={handleQueueClick} />\r\n        <StyledVolume />\r\n      </RightWrapper>\r\n\r\n      <Audio />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  times: selectTimes(state),\r\n  canSeek: selectCanSeek(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  seek\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Player)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nfunction DefaultRoute({ from, to }: Props) {\r\n  return <Route exact path={from} render={() => <Redirect to={to} />} />;\r\n}\r\n\r\nexport default DefaultRoute;\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoggedIn } from \"../reducers/authorization\";\r\nimport { selectUserProfile } from \"../reducers/userProfile\";\r\nimport { UserProfile } from \"../types\";\r\n\r\ninterface Props extends RouteProps {\r\n  isLoggedIn: boolean;\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nfunction PrivateRoute({\r\n  component: Component,\r\n  isLoggedIn,\r\n  userProfile,\r\n  ...rest\r\n}: Props & RouteComponentProps) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? (\r\n          userProfile ? (\r\n            Component && <Component {...props} />\r\n          ) : (\r\n            <></>\r\n          )\r\n        ) : (\r\n          <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state),\r\n  userProfile: selectUserProfile(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    null\r\n  )(PrivateRoute)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Heading } from \"../core\";\r\nimport { logInRedirect } from \"../../utils/authorization\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\nfunction LogIn() {\r\n  function handleCLick() {\r\n    logInRedirect();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>You are not logged in.</Heading>\r\n      <StyledButton onClick={handleCLick}>Log In</StyledButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport { RouteComponentProps, NavLink, withRouter } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\n\r\nconst List = styled.ul`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  flex-wrap: wrap;\r\n  font-size: ${props => props.theme.fontSize.medium}px;\r\n  justify-content: center;\r\n  margin-bottom: 0;\r\n  position: relative;\r\n  top: -25px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    margin-bottom: ${props => props.theme.thickness.medium}px;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  justify-content: center;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active::after {\r\n    background: ${props => props.theme.color.primary};\r\n    bottom: 0;\r\n    content: \"\";\r\n    height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, 0);\r\n    width: ${props => props.theme.thickness.large}px;\r\n  }\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  items: { path: string; text: string }[];\r\n}\r\n\r\nfunction SubMenu({ match, items }: Props) {\r\n  return (\r\n    <List>\r\n      {items.map(item => (\r\n        <li key={item.path}>\r\n          <StyledNavLink to={`${match.url}/${item.path}`}>\r\n            {item.text}\r\n          </StyledNavLink>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default withRouter(SubMenu);\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  items: { default?: boolean; path: string; component: any }[];\r\n}\r\n\r\nfunction SubRoutes({ match, items }: Props) {\r\n  const defaultItem = items.find(item => !!item.default);\r\n  return (\r\n    <>\r\n      {!!defaultItem && (\r\n        <DefaultRoute\r\n          from={`${match.path}`}\r\n          to={`${match.path}/${defaultItem.path}`}\r\n        />\r\n      )}\r\n\r\n      {items.map(item => (\r\n        <PrivateRoute\r\n          key={item.path}\r\n          path={`${match.path}/${item.path}`}\r\n          component={item.component}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SubRoutes);\r\n","import { schema } from \"normalizr\";\r\n\r\nconst Album = new schema.Entity(\r\n  \"albums\",\r\n  {},\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks ? tracks.items : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Artist = new schema.Entity(\"artists\");\r\n\r\nconst Artists = new schema.Object({\r\n  artists: [Artist]\r\n});\r\n\r\nconst Category = new schema.Entity(\"categories\");\r\n\r\nconst PagedAlbums = new schema.Object({\r\n  items: [Album],\r\n  albums: { items: [Album] }\r\n});\r\n\r\nconst PagedArtists = new schema.Object({\r\n  artists: { items: [Artist] }\r\n});\r\n\r\nconst PagedCategories = new schema.Object({\r\n  categories: { items: [Category] }\r\n});\r\n\r\nconst PagedPlaylists = new schema.Object({});\r\n\r\nconst PagedTracks = new schema.Object({});\r\n\r\nconst Playlist = new schema.Entity(\r\n  \"playlists\",\r\n  {},\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks.items ? tracks.items.map((item: any) => item.track) : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Results = new schema.Entity(\r\n  \"results\",\r\n  {\r\n    albums: [Album],\r\n    artists: [Artist],\r\n    playlists: [Playlist]\r\n  },\r\n  {\r\n    processStrategy: ({ albums, artists, playlists }) => ({\r\n      albums: albums.items,\r\n      artists: artists.items,\r\n      playlists: playlists.items\r\n    })\r\n  }\r\n);\r\n\r\nconst SavedAlbums = new schema.Object({\r\n  //@ts-ignore\r\n  items: [{ album: Album }]\r\n});\r\n\r\nconst Track = new schema.Entity(\r\n  \"tracks\",\r\n  {\r\n    album: Album,\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ album, artists, ...rest }, parent) => ({\r\n      ...rest,\r\n      album: parent[\"type\"] === \"album\" ? parent : album,\r\n      artists: artists\r\n    })\r\n  }\r\n);\r\n\r\nconst Tracks = new schema.Object({\r\n  tracks: [Track]\r\n});\r\n\r\nAlbum.define({\r\n  artists: [Artist],\r\n  tracks: [Track]\r\n});\r\n\r\nArtist.define({\r\n  albums: [Album],\r\n  relatedArtists: [Artist],\r\n  topTracks: [Track]\r\n});\r\n\r\nPagedPlaylists.define({\r\n  items: [Playlist],\r\n  playlists: { items: [Playlist] }\r\n});\r\n\r\nPagedTracks.define({\r\n  //@ts-ignore\r\n  items: [{ track: Track }]\r\n});\r\n\r\nPlaylist.define({\r\n  tracks: [Track]\r\n});\r\n\r\nexport const Schemas = {\r\n  Album,\r\n  Artist,\r\n  Artists,\r\n  Category,\r\n  PagedAlbums,\r\n  PagedArtists,\r\n  PagedCategories,\r\n  PagedPlaylists,\r\n  PagedTracks,\r\n  Playlist,\r\n  Results,\r\n  SavedAlbums,\r\n  Track,\r\n  Tracks\r\n};\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Image, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport { Cover } from \"./types\";\r\n\r\nconst StyledButton = styled(ButtonBase)<{ shape: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  margin-bottom: ${props => props.theme.thickness.small}px;\r\n  padding-top: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledImge = styled(Image)`\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.medium}px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.fontSize.medium}px;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  margin-top: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\ninterface Props {\r\n  cover: Cover;\r\n  onClick: (coverId: string) => void;\r\n}\r\n\r\nfunction CoverItem({ cover, onClick }: Props) {\r\n  function handleClick() {\r\n    onClick(cover.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledButton\r\n        onClick={handleClick}\r\n        shape={cover.imageShape || ImageShape.Square}\r\n      >\r\n        <StyledImge source={cover.imageSource} />\r\n      </StyledButton>\r\n      <Title>{cover.title}</Title>\r\n      {cover.subTitle && <SubTitle>{cover.subTitle}</SubTitle>}\r\n    </>\r\n  );\r\n}\r\n\r\nCoverItem.defaultProps = {\r\n  onClick: () => {}\r\n};\r\n\r\nexport default CoverItem;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Cover } from \"./types\";\r\nimport CoverItem from \"./CoverItem\";\r\n\r\nconst StyledList = styled.ul`\r\n  align-content: flex-start;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -${props => props.theme.thickness.small}px;\r\n  width: calc(100% + 2 * ${props => props.theme.thickness.small}px);\r\n`;\r\n\r\nfunction splitWidth(times: number) {\r\n  return `calc((100% - ${times * 25}px) / ${times} - 4px)`;\r\n}\r\n\r\nconst StyledItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: ${props => props.theme.thickness.small}px;\r\n  width: ${splitWidth(2)};\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    width: ${splitWidth(3)};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.small}px) {\r\n    width: ${splitWidth(6)};\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  className?: string;\r\n  covers: Cover[];\r\n  onClick: (id: string) => void;\r\n}\r\n\r\nfunction CoverList({ className, covers, onClick }: Props) {\r\n  return (\r\n    <StyledList className={className}>\r\n      {covers.map(cover => (\r\n        <StyledItem key={cover.id}>\r\n          <CoverItem cover={cover} onClick={onClick} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default CoverList;\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category } from \"../../types\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  categories: Category[];\r\n}\r\n\r\nfunction CategoryCovers({ history, categories }: Props) {\r\n  function handleClick(categoryId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/category/${categoryId}`);\r\n  }\r\n\r\n  const covers = getCovers(categories);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(categories: Category[]): Cover[] {\r\n  return categories.map(category => ({\r\n    id: category.id,\r\n    imageSource:\r\n      category.icons && category.icons.length\r\n        ? category.icons[0].url\r\n        : undefined,\r\n    title: category.name\r\n  }));\r\n}\r\n\r\nexport default withRouter(CategoryCovers);\r\n","import React, { ComponentType, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport styled from \"../styles/styled\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoading } from \"../reducers/loading\";\r\n\r\nconst Fader = styled.div<{ isLoading: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  opacity: ${props => (props.isLoading ? \"0\" : \"1\")};\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n`;\r\n\r\nconst Loader = styled.div<{ isLoading: boolean }>`\r\n  height: 5px;\r\n  left: 0;\r\n  position: absolute;\r\n  opacity: ${props => (props.isLoading ? \"1\" : \"0\")};\r\n  top: 0;\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.dark};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    animation: transform 2s linear infinite;\r\n    background: ${props => props.theme.foreground.default};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    transform-origin: 0;\r\n    width: 100%;\r\n\r\n    @keyframes transform {\r\n      0% {\r\n        left: 0;\r\n        width: 0;\r\n      }\r\n      50% {\r\n        left: 0;\r\n        width: 100%;\r\n      }\r\n      100% {\r\n        left: 100%;\r\n        width: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst withLoader = (WrappedComponent: ComponentType<any>) => {\r\n  const WithLoader = ({ match, isLoading, ...rest }: any) => {\r\n    const [prevUrl, setPrevUrl] = useState(match.url);\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setHasLoaded(!isLoading);\r\n    }, [isLoading]);\r\n\r\n    if (prevUrl !== match.url) {\r\n      setHasLoaded(false);\r\n      setPrevUrl(match.url);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Loader isLoading={!hasLoaded || isLoading} />\r\n        <Fader isLoading={!hasLoaded || isLoading}>\r\n          <WrappedComponent {...rest} />\r\n        </Fader>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const mapState = (state: State) => ({\r\n    isLoading: selectIsLoading(state)\r\n  });\r\n\r\n  return withRouter(\r\n    //@ts-ignore\r\n    connect(\r\n      mapState,\r\n      null\r\n    )(WithLoader)\r\n  );\r\n};\r\n\r\nexport default withLoader;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Category } from \"../../types\";\r\nimport { getCategories } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategories } from \"../../reducers/browse\";\r\nimport CategoryCovers from \"../covers/CategoryCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  categories: Category[];\r\n  getCategories: () => void;\r\n}\r\n\r\nfunction Categories({ categories, getCategories }: Props) {\r\n  useEffect(getCategories, []);\r\n\r\n  return <CategoryCovers categories={categories} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  categories: selectCategories(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getCategories: getCategories\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Categories)\r\n);\r\n","import { BrowseActionType as ActionType } from \".\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport interface CategoriesSuccessAction\r\n  extends EntitiesAction<ActionType.CategoriesSuccess> {}\r\n\r\nexport function getCategories() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoriesRequest,\r\n        ActionType.CategoriesSuccess,\r\n        ActionType.CategoriesFailure\r\n      ],\r\n      path: \"browse/categories\",\r\n      schema: Schemas.PagedCategories\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategorySuccessAction\r\n  extends EntitiesAction<ActionType.CategorySuccess> {}\r\n\r\nexport function getCategory(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryRequest,\r\n        ActionType.CategorySuccess,\r\n        ActionType.CategoryFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}`,\r\n      schema: Schemas.Category\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategoryPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.CategoryPlaylistsSuccess> {}\r\n\r\nexport function getCategoryPlaylists(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryPlaylistsRequest,\r\n        ActionType.CategoryPlaylistsSuccess,\r\n        ActionType.CategoryPlaylistsFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}/playlists`,\r\n      schema: Schemas.PagedPlaylists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface FeaturedPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.FeaturedPlaylistsSuccess> {}\r\n\r\nexport function getFeaturedPlaylists() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FeaturedPlaylistsRequest,\r\n        ActionType.FeaturedPlaylistsSuccess,\r\n        ActionType.FeaturedPlaylistsFailure\r\n      ],\r\n      path: \"browse/featured-playlists\",\r\n      schema: Schemas.PagedPlaylists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface NewReleasesSuccessAction\r\n  extends EntitiesAction<ActionType.NewReleasesSuccess> {}\r\n\r\nexport function getNewReleases() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.NewReleasesRequest,\r\n        ActionType.NewReleasesSuccess,\r\n        ActionType.NewReleasesFailure\r\n      ],\r\n      path: \"browse/new-releases\",\r\n      schema: Schemas.PagedAlbums\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectAlbumArtists } from \"../../reducers/albums\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  albums: Album[];\r\n  selectAbumArtists: (albumId: string) => Artist[];\r\n  onSelect?: (albumId: string) => void;\r\n}\r\n\r\nfunction AlbumCovers({ history, albums, selectAbumArtists, onSelect }: Props) {\r\n  function handleClick(albumId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/album/${albumId}`);\r\n    onSelect && onSelect(albumId);\r\n  }\r\n\r\n  const covers = getCovers(albums, selectAbumArtists);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(\r\n  albums: Album[],\r\n  selectAlbumArtists: (albumId: string) => Artist[]\r\n): Cover[] {\r\n  return albums.map(album => {\r\n    const artists = selectAlbumArtists(album.id);\r\n    return {\r\n      id: album.id,\r\n      imageSource: getImageSource(album),\r\n      title: album.name,\r\n      subTitle: getArtistNames(artists)\r\n    };\r\n  });\r\n}\r\n\r\nconst mapDispatch = (state: State) => ({\r\n  selectAbumArtists: selectAlbumArtists(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapDispatch,\r\n    null\r\n  )(AlbumCovers)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Album } from \"../../types\";\r\nimport { getNewReleases } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectNewReleases } from \"../../reducers/browse\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  getAlbums: () => void;\r\n}\r\n\r\nfunction NewReleases({ albums, getAlbums }: Props) {\r\n  useEffect(getAlbums, []);\r\n\r\n  return <AlbumCovers albums={albums} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectNewReleases(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getAlbums: getNewReleases\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(NewReleases)\r\n);\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  playlists: Playlist[];\r\n  onSelect?: (playlistId: string) => void;\r\n}\r\n\r\nfunction PlayistCovers({ history, playlists, onSelect }: Props) {\r\n  function handleClick(playlistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/playlist/${playlistId}`);\r\n    onSelect && onSelect(playlistId);\r\n  }\r\n\r\n  const covers = getCovers(playlists);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(playlists: Playlist[]): Cover[] {\r\n  return playlists.map(playlist => ({\r\n    id: playlist.id,\r\n    imageSource: getImageSource(playlist),\r\n    title: playlist.name,\r\n    subTitle: playlist.owner.display_name\r\n  }));\r\n}\r\n\r\nexport default withRouter(PlayistCovers);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getFeaturedPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectFeaturedPlaylists } from \"../../reducers/browse\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  playlists: Playlist[];\r\n  getPlaylists: () => void;\r\n}\r\n\r\nfunction FeaturedPlaylists({ playlists, getPlaylists }: Props) {\r\n  useEffect(getPlaylists, []);\r\n\r\n  return <PlaylistCovers playlists={playlists} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  playlists: selectFeaturedPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getPlaylists: getFeaturedPlaylists\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(FeaturedPlaylists)\r\n);\r\n","import React from \"react\";\r\nimport SubMenu from \"../layout/SubMenu\";\r\nimport SubRoutes from \"../layout/SubRoutes\";\r\nimport Categories from \"./Categories\";\r\nimport NewReleases from \"./NewReleases\";\r\nimport FeaturedPlaylists from \"./FeaturedPlaylists\";\r\n\r\nconst items = [\r\n  {\r\n    path: \"categories\",\r\n    text: \"Categories\",\r\n    default: true,\r\n    component: Categories\r\n  },\r\n  {\r\n    path: \"new-releases\",\r\n    text: \"New Releases\",\r\n    component: NewReleases\r\n  },\r\n  {\r\n    path: \"featured-playists\",\r\n    text: \"Featured Playlists\",\r\n    component: FeaturedPlaylists\r\n  }\r\n];\r\n\r\nfunction Browse() {\r\n  return (\r\n    <>\r\n      <SubMenu items={items} />\r\n      <SubRoutes items={items} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Browse;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category, Playlist } from \"../../types\";\r\nimport { getCategory, getCategoryPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategory, selectCategoryPlaylists } from \"../../reducers/browse\";\r\nimport { Heading } from \"../core\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Params {\r\n  categoryId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  category?: Category;\r\n  playlists: Playlist[];\r\n  getCategory: (categoryId: string) => void;\r\n  getPlaylists: (categoryId: string) => void;\r\n}\r\n\r\nfunction CategoryPlaylists({\r\n  match,\r\n  category,\r\n  playlists,\r\n  getCategory,\r\n  getPlaylists\r\n}: Props) {\r\n  const effect = () => {\r\n    const { categoryId } = match.params;\r\n    if (!category) {\r\n      getCategory(categoryId);\r\n    }\r\n    getPlaylists(categoryId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <div>\r\n      <Heading>{category && category.name}</Heading>\r\n      <PlaylistCovers playlists={playlists} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, { match }: Props) => {\r\n  const categoryId = match.params.categoryId;\r\n\r\n  return {\r\n    category: selectCategory(state, categoryId),\r\n    playlists: selectCategoryPlaylists(state)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getCategory: (categoryId: string) => getCategory(categoryId),\r\n  getPlaylists: (categoryId: string) => getCategoryPlaylists(categoryId)\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(CategoryPlaylists)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { capitalize } from \"lodash\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { clearRecents } from \"../../actions/search\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectRecents } from \"../../reducers/search\";\r\nimport { getImageSource, getImageShape } from \"../../utils\";\r\nimport { Button, Heading } from \"../core\";\r\nimport CoverList from \"../covers/CoverList\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledCoverList = styled(CoverList)`\r\n  margin-bottom: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst ClearButton = styled(Button).attrs(() => ({\r\n  children: \"Clear\"\r\n}))`\r\n  align-self: center;\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  recents: (Album | Artist | Playlist)[];\r\n  clearRecents: () => void;\r\n}\r\n\r\nfunction Recents({ history, recents, clearRecents }: Props) {\r\n  function handleClick(id: string) {\r\n    const recent = recents.find(recent => recent.id === id);\r\n    if (recent) {\r\n      history.push(`${process.env.PUBLIC_URL}/${recent.type}/${recent.id}`);\r\n    }\r\n  }\r\n\r\n  const covers = getCovers(recents);\r\n  return (\r\n    <Wrapper>\r\n      {!!recents.length && (\r\n        <>\r\n          <Heading>Recent searches</Heading>\r\n          <StyledCoverList covers={covers} onClick={handleClick} />\r\n          <ClearButton onClick={clearRecents} />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction getCovers(recents: (Album | Artist | Playlist)[]) {\r\n  return recents.map(recent => ({\r\n    id: recent.id,\r\n    imageSource: getImageSource(recent),\r\n    imageShape: getImageShape(recent),\r\n    title: recent.name,\r\n    subTitle: capitalize(recent.type)\r\n  }));\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  recents: selectRecents(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  clearRecents\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Recents)\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { Album, Artist, Playlist } from \"../types\";\r\nimport { State } from \"../reducers\";\r\nimport { selectAlbum as selectAlbumById } from \"../reducers/albums\";\r\nimport { selectArtist as selectArtistById } from \"../reducers/artists\";\r\nimport { selectPlaylist as selectPlaylistById } from \"../reducers/playlists\";\r\nimport { SearchActionType as ActionType } from \".\";\r\nimport { EntitiesAction, FetchDispatch, PayloadAction } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport interface SearchSuccessAction\r\n  extends EntitiesAction<ActionType.SearchSuccess> {}\r\n\r\nexport function search(query: string) {\r\n  if (query) {\r\n    return (dispatch: FetchDispatch) => {\r\n      const encoded = encodeURIComponent(query);\r\n      dispatch({\r\n        types: [\r\n          ActionType.SearchRequest,\r\n          ActionType.SearchSuccess,\r\n          ActionType.SearchFailure\r\n        ],\r\n        path: `search?q=${encoded}*&type=album,artist,playlist`,\r\n        schema: Schemas.Results\r\n      });\r\n    };\r\n  } else {\r\n    return (dispatch: Dispatch) => {\r\n      dispatch({\r\n        type: ActionType.ClearResults\r\n      });\r\n    };\r\n  }\r\n}\r\n\r\nexport interface SelectAlbumAction\r\n  extends PayloadAction<ActionType.SelectAlbum, Album> {}\r\n\r\nexport function selectAlbum(albumId: string) {\r\n  return (dispatch: Dispatch<SelectAlbumAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const album = selectAlbumById(state, albumId);\r\n    dispatch({ type: ActionType.SelectAlbum, payload: album });\r\n  };\r\n}\r\n\r\nexport interface SelectArtistAction\r\n  extends PayloadAction<ActionType.SelectArtist, Artist> {}\r\n\r\nexport function selectArtist(artistId: string) {\r\n  return (dispatch: Dispatch<SelectArtistAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const artist = selectArtistById(state, artistId);\r\n    dispatch({ type: ActionType.SelectArtist, payload: artist });\r\n  };\r\n}\r\n\r\nexport interface SelectPlaylistAction\r\n  extends PayloadAction<ActionType.SelectPlaylist, Playlist> {}\r\n\r\nexport function selectPlaylist(playlistId: string) {\r\n  return (dispatch: Dispatch<SelectPlaylistAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const playlist = selectPlaylistById(state, playlistId);\r\n    dispatch({ type: ActionType.SelectPlaylist, payload: playlist });\r\n  };\r\n}\r\n\r\nexport function clearRecents() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.ClearRecents });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Artist } from \"../../types\";\r\nimport { getImageSource, getImageShape } from \"../../utils\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  artists: Artist[];\r\n  onSelect?: (artistId: string) => void;\r\n}\r\n\r\nfunction ArtistCovers({ history, artists, onSelect }: Props) {\r\n  function handleClick(artistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/artist/${artistId}`);\r\n    onSelect && onSelect(artistId);\r\n  }\r\n\r\n  const covers = getCovers(artists);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(artists: Artist[]): Cover[] {\r\n  return artists.map(artist => ({\r\n    id: artist.id,\r\n    imageSource: getImageSource(artist),\r\n    imageShape: getImageShape(artist),\r\n    title: artist.name\r\n  }));\r\n}\r\n\r\nexport default withRouter(ArtistCovers);\r\n","import React, { ReactNode } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Icon, Text, IconType } from \"../core\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon).attrs(() => ({\r\n  type: IconType.SentimentVeryDissatisfied\r\n}))`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => 4 * props.theme.fontSize.extraExtraLarge}px;\r\n  margin-bottom: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst StyledText = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.extraExtraLarge}px;\r\n`;\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\nfunction Empty({ children }: Props) {\r\n  return (\r\n    <Wrapper>\r\n      <StyledIcon />\r\n      <StyledText>{children}</StyledText>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Empty;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport {\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n} from \"../../actions/search\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectAlbums,\r\n  selectArtists,\r\n  selectPlaylists\r\n} from \"../../reducers/search\";\r\nimport { Heading } from \"../core\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport Empty from \"../layout/Empty\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: ${props => props.theme.thickness.large}px;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\ninterface ArtistsProps {\r\n  artists: Artist[];\r\n  selectArtist: (artistId: string) => void;\r\n}\r\n\r\nfunction Artists({ artists, selectArtist }: ArtistsProps) {\r\n  return (\r\n    <>\r\n      {artists.length > 0 && (\r\n        <Section>\r\n          <Heading>Artists</Heading>\r\n          <ArtistCovers artists={artists} onSelect={selectArtist} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface AlbumsProps {\r\n  albums: Album[];\r\n  selectAlbum: (albumId: string) => void;\r\n}\r\n\r\nfunction Albums({ albums, selectAlbum }: AlbumsProps) {\r\n  return (\r\n    <>\r\n      {albums.length > 0 && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} onSelect={selectAlbum} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface PlaylistsProps {\r\n  playlists: Playlist[];\r\n  selectPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction Playlists({ playlists, selectPlaylist }: PlaylistsProps) {\r\n  return (\r\n    <>\r\n      {playlists.length > 0 && (\r\n        <Section>\r\n          <Heading>Playlists</Heading>\r\n          <PlaylistCovers playlists={playlists} onSelect={selectPlaylist} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  selectAlbum: (albumId: string) => void;\r\n  selectArtist: (artistId: string) => void;\r\n  selectPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction Results({\r\n  albums,\r\n  artists,\r\n  playlists,\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n}: Props) {\r\n  return artists.length || albums.length || playlists.length ? (\r\n    <Wrapper>\r\n      <Artists artists={artists} selectArtist={selectArtist} />\r\n      <Albums albums={albums} selectAlbum={selectAlbum} />\r\n      <Playlists playlists={playlists} selectPlaylist={selectPlaylist} />\r\n    </Wrapper>\r\n  ) : (\r\n    <Empty>No Results</Empty>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectAlbums(state),\r\n  artists: selectArtists(state),\r\n  playlists: selectPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Results)\r\n);\r\n","import _ from \"lodash\";\r\nimport React, { useState, ChangeEvent, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { search } from \"../../actions/search\";\r\nimport Recents from \"./Recents\";\r\nimport Results from \"./Results\";\r\n\r\nconst StyledInput = styled.input`\r\n  background: ${props => props.theme.background.active};\r\n  border: none;\r\n  border-radius: ${props => props.theme.thickness.medium}px;\r\n  caret-color: ${props => props.theme.color.primary};\r\n  color: ${props => props.theme.foreground.default};\r\n  flex-shrink: 0;\r\n  font-size: ${props => props.theme.fontSize.extraLarge}px;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  height: ${props => props.theme.thickness.large}px;\r\n  margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  width: calc(100% - ${props => props.theme.thickness.large}px);\r\n`;\r\n\r\ninterface Params {\r\n  query: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  isLoading: boolean;\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  search: (query: string) => void;\r\n}\r\n\r\nlet debounced: (query: string) => void;\r\n\r\nfunction Search({ history, match, search }: Props) {\r\n  const { query } = match.params;\r\n  const [value, setValue] = useState(query || \"\");\r\n\r\n  const effect = () => {\r\n    debounced = _.debounce((query: string) => {\r\n      history.push(`${process.env.PUBLIC_URL}/search${query && \"/\"}${query}`);\r\n      search(query);\r\n    }, 500);\r\n    if (value) {\r\n      search(value);\r\n    }\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { value } = event.target;\r\n    setValue(value);\r\n    debounced(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledInput\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n        autoFocus\r\n      />\r\n      {query ? <Results /> : <Recents />}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatch = {\r\n  search\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatch\r\n  )(Search)\r\n);\r\n","import { Action } from \"redux\";\r\nimport { schema } from \"normalizr\";\r\nimport {\r\n  AlbumDictionary,\r\n  ArtistDictionary,\r\n  CategoryDictionary,\r\n  PlaylistDictionary,\r\n  TrackDictionary\r\n} from \"../reducers/types\";\r\n\r\nexport enum FetchMethod {\r\n  Get = \"GET\",\r\n  Post = \"POST\",\r\n  Put = \"PUT\",\r\n  Delete = \"DELETE\"\r\n}\r\n\r\nexport interface Entities {\r\n  albums: AlbumDictionary;\r\n  artists: ArtistDictionary;\r\n  categories: CategoryDictionary;\r\n  playlists: PlaylistDictionary;\r\n  tracks: TrackDictionary;\r\n  results: {\r\n    [key: string]: {\r\n      albums: string[];\r\n      artists: string[];\r\n      playlists: string[];\r\n    };\r\n  };\r\n}\r\n\r\nexport interface FetchAction<D = any> {\r\n  types: string[];\r\n  path: string;\r\n  method?: FetchMethod;\r\n  schema?: schema.Entity | schema.Object;\r\n  data?: D;\r\n  success?: (json: any) => void;\r\n}\r\n\r\nexport interface FetchDispatch {\r\n  (action: FetchAction): void;\r\n}\r\n\r\nexport interface PayloadAction<T = any, P = any> extends Action<T> {\r\n  payload: P;\r\n}\r\n\r\nexport interface EntitiesAction<T = any, D = any>\r\n  extends PayloadAction<T, Entities & D> {}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Artist } from \"../../types\";\r\nimport { getFollowedArtists } from \"../../actions/following\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectFollowedArtists } from \"../../reducers/following\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport Empty from \"../layout/Empty\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  artists: Artist[];\r\n  getFollowedArtists: () => void;\r\n}\r\n\r\nfunction FollowedArtists({ artists, getFollowedArtists }: Props) {\r\n  useEffect(getFollowedArtists, []);\r\n\r\n  return artists.length ? (\r\n    <ArtistCovers artists={artists} />\r\n  ) : (\r\n    <Empty>No followed artists</Empty>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  artists: selectFollowedArtists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getFollowedArtists\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(FollowedArtists)\r\n);\r\n","import { State } from \"../reducers\";\r\nimport { selectArtist } from \"../reducers/artists\";\r\nimport { selectPlaylist } from \"../reducers/playlists\";\r\nimport { FollowingActionType as ActionType } from \".\";\r\nimport {\r\n  PayloadAction,\r\n  EntitiesAction,\r\n  FetchDispatch,\r\n  FetchMethod\r\n} from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport interface FollowedArtistsSuccessAction\r\n  extends EntitiesAction<ActionType.FollowedArtistsSuccess> {}\r\n\r\nexport function getFollowedArtists() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FollowedArtistsRequest,\r\n        ActionType.FollowedArtistsSuccess,\r\n        ActionType.FollowedArtistsFailure\r\n      ],\r\n      path: \"me/following?type=artist\",\r\n      schema: Schemas.PagedArtists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CheckFollowedArtistSuccessAction\r\n  extends PayloadAction<\r\n    ActionType.CheckFollowedArtistSuccess,\r\n    { artistId: string; [key: number]: boolean }\r\n  > {}\r\n\r\nexport function checkFollowedArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CheckFollowedArtistRequest,\r\n        ActionType.CheckFollowedArtistSuccess,\r\n        ActionType.CheckFollowedArtistFailure\r\n      ],\r\n      path: `me/following/contains?type=artist&ids=${artistId}`,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface FollowArtistSuccessAction\r\n  extends PayloadAction<ActionType.FollowArtistSuccess, { artistId: string }> {}\r\n\r\nfunction followArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FollowArtistRequest,\r\n        ActionType.FollowArtistSuccess,\r\n        ActionType.FollowArtistFailure\r\n      ],\r\n      path: `me/following?type=artist&ids=${artistId}`,\r\n      method: FetchMethod.Put,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UnfollowArtistSuccessAction\r\n  extends PayloadAction<\r\n    ActionType.UnfollowArtistSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nfunction unfollowArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UnfollowArtistRequest,\r\n        ActionType.UnfollowArtistSuccess,\r\n        ActionType.UnfollowArtistFailure\r\n      ],\r\n      path: `me/following?type=artist&ids=${artistId}`,\r\n      method: FetchMethod.Delete,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleFollowArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const artist = selectArtist(state, artistId);\r\n    if (artist.isFollowed) {\r\n      unfollowArtist(artistId)(dispatch);\r\n    } else {\r\n      followArtist(artistId)(dispatch);\r\n    }\r\n  };\r\n}\r\n\r\nexport interface FollowedPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.FollowedPlaylistsSuccess> {}\r\n\r\nexport function getFollowedPlaylists() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FollowedPlaylistsRequest,\r\n        ActionType.FollowedPlaylistsSuccess,\r\n        ActionType.FollowedPlaylistsFailure\r\n      ],\r\n      path: \"me/playlists\",\r\n      schema: Schemas.PagedPlaylists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CheckFollowedPlaylistSuccessAction\r\n  extends PayloadAction<\r\n    ActionType.CheckFollowedPlaylistSuccess,\r\n    { playlistId: string; [key: number]: boolean }\r\n  > {}\r\n\r\nexport function checkFollowedPlaylist(playlistId: string, userId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CheckFollowedPlaylistRequest,\r\n        ActionType.CheckFollowedPlaylistSuccess,\r\n        ActionType.CheckFollowedPlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}/followers/contains?ids=${userId}`,\r\n      data: { playlistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface FollowPlaylistSuccessAction\r\n  extends PayloadAction<\r\n    ActionType.FollowPlaylistSuccess,\r\n    { playlistId: string }\r\n  > {}\r\n\r\nfunction followPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FollowPlaylistRequest,\r\n        ActionType.FollowPlaylistSuccess,\r\n        ActionType.FollowPlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}/followers`,\r\n      method: FetchMethod.Put,\r\n      data: { playlistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UnfollowPlaylistSuccessAction\r\n  extends PayloadAction<\r\n    ActionType.UnfollowPlaylistSuccess,\r\n    { playlistId: string }\r\n  > {}\r\n\r\nfunction unfollowPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UnfollowPlaylistRequest,\r\n        ActionType.UnfollowPlaylistSuccess,\r\n        ActionType.UnfollowPlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}/followers`,\r\n      method: FetchMethod.Delete,\r\n      data: { playlistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleFollowPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const playlist = selectPlaylist(state, playlistId);\r\n    if (playlist.isFollowed) {\r\n      unfollowPlaylist(playlistId)(dispatch);\r\n    } else {\r\n      followPlaylist(playlistId)(dispatch);\r\n    }\r\n  };\r\n}\r\n","import { State } from \"../reducers\";\r\nimport { selectAlbum } from \"../reducers/albums\";\r\nimport { selectTrack } from \"../reducers/tracks\";\r\nimport { LibraryActionType as ActionType } from \".\";\r\nimport {\r\n  PayloadAction,\r\n  EntitiesAction,\r\n  FetchDispatch,\r\n  FetchMethod\r\n} from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport interface SavedAlbumsSuccessAction\r\n  extends EntitiesAction<ActionType.SavedAlbumsSuccess> {}\r\n\r\nexport function getSavedAlbums() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.SavedAlbumsRequest,\r\n        ActionType.SavedAlbumsSuccess,\r\n        ActionType.SavedAlbumsFailure\r\n      ],\r\n      path: \"me/albums\",\r\n      schema: Schemas.SavedAlbums\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CheckSavedAlbumSuccess\r\n  extends PayloadAction<\r\n    ActionType.CheckSavedAlbumSuccess,\r\n    { albumId: string; [key: number]: boolean }\r\n  > {}\r\n\r\nexport function checkSavedAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CheckSavedAlbumRequest,\r\n        ActionType.CheckSavedAlbumSuccess,\r\n        ActionType.CheckSavedAlbumFailure\r\n      ],\r\n      path: `me/albums/contains?ids=${albumId}`,\r\n      data: { albumId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface SaveAlbumSuccessAction\r\n  extends PayloadAction<ActionType.SaveAlbumSuccess, { albumId: string }> {}\r\n\r\nfunction saveAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.SaveAlbumRequest,\r\n        ActionType.SaveAlbumSuccess,\r\n        ActionType.SaveAlbumFailure\r\n      ],\r\n      path: `me/albums?ids=${albumId}`,\r\n      method: FetchMethod.Put,\r\n      data: { albumId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UnsaveAlbumSuccessAction\r\n  extends PayloadAction<ActionType.UnsaveAlbumSuccess, { albumId: string }> {}\r\n\r\nfunction UnsaveAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UnsaveAlbumRequest,\r\n        ActionType.UnsaveAlbumSuccess,\r\n        ActionType.UnsaveAlbumFailure\r\n      ],\r\n      path: `me/albums?ids=${albumId}`,\r\n      method: FetchMethod.Delete,\r\n      data: { albumId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleSavedAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const album = selectAlbum(state, albumId);\r\n    if (album.isSaved) {\r\n      UnsaveAlbum(albumId)(dispatch);\r\n    } else {\r\n      saveAlbum(albumId)(dispatch);\r\n    }\r\n  };\r\n}\r\n\r\nexport interface SavedTracksSuccessAction\r\n  extends EntitiesAction<ActionType.SavedTracksSuccess> {}\r\n\r\nexport function getSavedTracks() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.SavedTracksRequest,\r\n        ActionType.SavedTracksSuccess,\r\n        ActionType.SavedTracksFailure\r\n      ],\r\n      path: \"me/tracks\",\r\n      schema: Schemas.PagedTracks,\r\n      success: json => {\r\n        const trackIds = json.items.map(({ track }: any) => track.id);\r\n        if (trackIds.length) {\r\n          checkSavedTracks(trackIds)(dispatch);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CheckSavedTrackSuccess\r\n  extends PayloadAction<\r\n    ActionType.CheckSavedTracksSuccess,\r\n    { trackIds: string[]; [key: number]: boolean }\r\n  > {}\r\n\r\nexport function checkSavedTracks(trackIds: string[]) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CheckSavedTracksRequest,\r\n        ActionType.CheckSavedTracksSuccess,\r\n        ActionType.CheckSavedTracksFailure\r\n      ],\r\n      path: `me/tracks/contains?ids=${encodeURIComponent(trackIds.join(\",\"))}`,\r\n      data: { trackIds }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface SaveTrackSuccessAction\r\n  extends PayloadAction<ActionType.SaveTrackSuccess, { trackId: string }> {}\r\n\r\nfunction saveTrack(trackId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.SaveTrackRequest,\r\n        ActionType.SaveTrackSuccess,\r\n        ActionType.SaveTrackFailure\r\n      ],\r\n      path: `me/tracks?ids=${trackId}`,\r\n      method: FetchMethod.Put,\r\n      data: { trackId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UnsaveTrackSuccessAction\r\n  extends PayloadAction<ActionType.UnsaveTrackSuccess, { trackId: string }> {}\r\n\r\nfunction UnsaveTrack(trackId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UnsaveTrackRequest,\r\n        ActionType.UnsaveTrackSuccess,\r\n        ActionType.UnsaveTrackFailure\r\n      ],\r\n      path: `me/tracks?ids=${trackId}`,\r\n      method: FetchMethod.Delete,\r\n      data: { trackId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleSavedTrack(trackId: string) {\r\n  return (dispatch: FetchDispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const track = selectTrack(state, trackId);\r\n    if (track.isSaved) {\r\n      UnsaveTrack(trackId)(dispatch);\r\n    } else {\r\n      saveTrack(trackId)(dispatch);\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Album } from \"../../types\";\r\nimport { getSavedAlbums } from \"../../actions/library\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectSavedAlbums } from \"../../reducers/library\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport Empty from \"../layout/Empty\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  getSavedAlbums: () => void;\r\n}\r\n\r\nfunction SavedAlbums({ albums, getSavedAlbums }: Props) {\r\n  useEffect(getSavedAlbums, []);\r\n\r\n  return albums.length ? (\r\n    <AlbumCovers albums={albums} />\r\n  ) : (\r\n    <Empty>No saved albums</Empty>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectSavedAlbums(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getSavedAlbums\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(SavedAlbums)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getFollowedPlaylists } from \"../../actions/following\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectFollowedPlaylists } from \"../../reducers/following\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport Empty from \"../layout/Empty\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  playlists: Playlist[];\r\n  getFollowedPlaylists: () => void;\r\n}\r\n\r\nfunction FollowedPlaylists({ playlists, getFollowedPlaylists }: Props) {\r\n  useEffect(getFollowedPlaylists, []);\r\n\r\n  return playlists.length ? (\r\n    <PlaylistCovers playlists={playlists} />\r\n  ) : (\r\n    <Empty>No followed playlists</Empty>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  playlists: selectFollowedPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getFollowedPlaylists\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(FollowedPlaylists)\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album } from \"../../types\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  album: Album;\r\n}\r\n\r\nfunction AlbumName({ album }: Props) {\r\n  return (\r\n    <StyledLink to={`${process.env.PUBLIC_URL}/album/${album.id}`}>\r\n      {album.name}\r\n    </StyledLink>\r\n  );\r\n}\r\n\r\nexport default AlbumName;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Track } from \"../../types\";\r\nimport { toggleSavedTrack } from \"../../actions/library\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoaded, selectIsPlaying } from \"../../reducers/player\";\r\nimport { selectTrackArtists, selectTrackAlbum } from \"../../reducers/tracks\";\r\nimport { Icon, IconType, RoundButton, Text, ToggleButton } from \"../core\";\r\nimport ArtistNames from \"./ArtistNames\";\r\nimport AlbumName from \"./AlbumName\";\r\n\r\nconst Wrapper = styled.li<{ isLoaded: boolean }>`\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  ${props => props.isLoaded && \"color: \" + props.theme.color.primary};\r\n  display: flex;\r\n  padding: ${props => props.theme.thickness.small}px;\r\n  width: 100%;\r\n\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.background.hover};\r\n  }\r\n`;\r\n\r\ninterface PlayButtonProps {\r\n  isLoaded: boolean;\r\n  isPlaying: Boolean;\r\n}\r\n\r\nconst PlayButton = styled(RoundButton).attrs<\r\n  PlayButtonProps,\r\n  { iconType: IconType }\r\n>(({ isPlaying }) => ({\r\n  iconType: isPlaying ? IconType.Pause : IconType.PlayArrow\r\n}))<PlayButtonProps>`\r\n  ${props => props.isLoaded && `color: ${props.theme.color.primary}`}\r\n  flex-shrink: 0;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n\r\n  &&:hover {\r\n    ${props => props.isLoaded && `color: ${props.theme.color.primary}`}\r\n  }\r\n`;\r\n\r\nconst MusicIcon = styled(Icon).attrs(() => ({\r\n  type: IconType.MusicNote\r\n}))`\r\n  flex-shrink: 0;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  text-align: center;\r\n  width: ${props => props.theme.thickness.large}px;\r\n`;\r\n\r\nconst NoMusicIcon = styled(MusicIcon).attrs(() => ({\r\n  type: IconType.MusicOff\r\n}))`\r\n  color: ${props => props.theme.color.error};\r\n`;\r\n\r\nconst Names = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  height: 100%;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Name = styled(Text)`\r\n  font-weight: ${props => props.theme.fontWeight.normal};\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Others = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Separator = styled.span.attrs(() => ({\r\n  children: \"-\"\r\n}))`\r\n  color: ${props => props.theme.foreground.dark};\r\n  margin: 0 ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\nconst Duration = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  flex-shrink: 0;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst FavoriteButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Favorite\r\n}))`\r\n  flex-shrink: 0;\r\n`;\r\n\r\ninterface OwnProps {\r\n  track: Track;\r\n  onTogglePlay?: (trackId: string) => void;\r\n}\r\n\r\ninterface Props extends OwnProps {\r\n  album?: Album;\r\n  artists: Artist[];\r\n  isDisabled: boolean;\r\n  isLoaded: boolean;\r\n  isPlaying: boolean;\r\n  toggleSavedTrack: (trackId: string) => void;\r\n}\r\n\r\nfunction TrackItem({\r\n  album,\r\n  track,\r\n  artists,\r\n  isDisabled,\r\n  isLoaded,\r\n  isPlaying,\r\n  onTogglePlay,\r\n  toggleSavedTrack\r\n}: Props) {\r\n  function renderDuration() {\r\n    let seconds = track.duration_ms / 1000;\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.floor(seconds % 60);\r\n\r\n    return (\r\n      <Duration>{`${minutes}:${\r\n        seconds < 10 ? \"0\" + seconds : seconds\r\n      }`}</Duration>\r\n    );\r\n  }\r\n\r\n  function handleClick() {\r\n    if (onTogglePlay) {\r\n      onTogglePlay(track.id);\r\n    }\r\n  }\r\n\r\n  function handleToggleFavorite() {\r\n    toggleSavedTrack(track.id);\r\n  }\r\n\r\n  return (\r\n    <Wrapper isLoaded={isLoaded}>\r\n      {onTogglePlay ? (\r\n        isDisabled ? (\r\n          <NoMusicIcon />\r\n        ) : (\r\n          <PlayButton\r\n            isLoaded={isLoaded}\r\n            isPlaying={isPlaying}\r\n            onClick={handleClick}\r\n          />\r\n        )\r\n      ) : (\r\n        <MusicIcon />\r\n      )}\r\n\r\n      <Names>\r\n        <Name>{track.name}</Name>\r\n        <Others>\r\n          <ArtistNames artists={artists} />\r\n          <Separator />\r\n          {album && <AlbumName album={album} />}\r\n        </Others>\r\n      </Names>\r\n\r\n      {renderDuration()}\r\n\r\n      <FavoriteButton\r\n        isToggled={track.isSaved}\r\n        onClick={handleToggleFavorite}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction isDisabled(track: Track) {\r\n  return !track.preview_url;\r\n}\r\n\r\nconst mapState = (state: State, { track }: OwnProps) => ({\r\n  album: selectTrackAlbum(state, track.id),\r\n  artists: selectTrackArtists(state, track.id),\r\n  isDisabled: isDisabled(track),\r\n  isLoaded: selectIsLoaded(state)(track.id),\r\n  isPlaying: selectIsPlaying(state, track.id)\r\n});\r\n\r\nconst mapDispatch = {\r\n  toggleSavedTrack\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(TrackItem);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track } from \"../../types\";\r\nimport TrackItem from \"./TrackItem\";\r\n\r\nconst StyledList = styled.ul`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\ninterface Props {\r\n  tracks: Track[];\r\n  onTogglePlay?: (trackId: string) => void;\r\n}\r\n\r\nfunction TrackList({ tracks, onTogglePlay }: Props) {\r\n  return (\r\n    <StyledList>\r\n      {tracks.map(track => (\r\n        <TrackItem key={track.id} track={track} onTogglePlay={onTogglePlay} />\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default TrackList;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSavedTracks } from \"../../actions/library\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectSavedTracks } from \"../../reducers/library\";\r\nimport { Track, Type } from \"../../types\";\r\nimport TrackList from \"../details/TrackList\";\r\nimport Empty from \"../layout/Empty\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  tracks: Track[];\r\n  getSavedTracks: () => void;\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId: string\r\n  ) => void;\r\n}\r\n\r\nconst CollectionId = \"\";\r\n\r\nfunction SavedTracks({ tracks, getSavedTracks, loadPlayPause }: Props) {\r\n  useEffect(getSavedTracks, []);\r\n\r\n  function handleTogglePlay(trackId: string) {\r\n    loadPlayPause(CollectionId, Type.Library, trackId);\r\n  }\r\n\r\n  return tracks.length ? (\r\n    <TrackList tracks={tracks} onTogglePlay={handleTogglePlay} />\r\n  ) : (\r\n    <Empty>No saved tracks</Empty>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  tracks: selectSavedTracks(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getSavedTracks,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(SavedTracks)\r\n);\r\n","import React from \"react\";\r\nimport SubMenu from \"../layout/SubMenu\";\r\nimport SubRoutes from \"../layout/SubRoutes\";\r\nimport FollowedArtists from \"./FollowedArtists\";\r\nimport SavedAlbums from \"./SavedAlbums\";\r\nimport FollowedPlaylists from \"./FollowedPlaylists\";\r\nimport SavedTracks from \"./SavedTracks\";\r\n\r\nconst items = [\r\n  {\r\n    path: \"artists\",\r\n    text: \"Artists\",\r\n    default: true,\r\n    component: FollowedArtists\r\n  },\r\n  {\r\n    path: \"albums\",\r\n    text: \"Albums\",\r\n    component: SavedAlbums\r\n  },\r\n  {\r\n    path: \"playlists\",\r\n    text: \"Playlists\",\r\n    component: FollowedPlaylists\r\n  },\r\n  {\r\n    path: \"tracks\",\r\n    text: \"Tracks\",\r\n    component: SavedTracks\r\n  }\r\n];\r\n\r\nfunction Library() {\r\n  return (\r\n    <>\r\n      <SubMenu items={items} />\r\n      <SubRoutes items={items} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, IconType, Image, Text, ToggleButton } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 0;\r\n  justify-content: center;\r\n  margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.small}px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    margin: 0 ${props => props.theme.thickness.medium}px 0 0;\r\n  }\r\n`;\r\n\r\nconst StyledImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  margin: 0 ${props => props.theme.thickness.medium}px 0 0;\r\n  max-height: calc(\r\n    100% -\r\n      ${props =>\r\n        props.theme.thickness.extraLarge +\r\n        props.theme.thickness.large +\r\n        props.theme.thickness.medium +\r\n        props.theme.thickness.small}px\r\n  );\r\n  max-width: calc(\r\n    100% -\r\n      ${props =>\r\n        props.theme.thickness.extraLarge +\r\n        props.theme.thickness.large +\r\n        props.theme.thickness.medium +\r\n        props.theme.thickness.small}px\r\n  );\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    max-height: ${props => props.theme.thickness.extraExtraLarge}px;\r\n    max-width: ${props => props.theme.thickness.extraExtraLarge}px;\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.small}px) {\r\n    margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n    max-height: ${props => props.theme.thickness.extraExtraExtraLarge}px;\r\n    max-width: ${props => props.theme.thickness.extraExtraExtraLarge}px;\r\n  }\r\n`;\r\n\r\nconst Vertical = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.extraLarge}px;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.small}px) {\r\n    font-size: ${props => props.theme.fontSize.extraLarge}px;\r\n    max-width: ${props => props.theme.thickness.extraExtraExtraLarge}px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: inline-block;\r\n  font-size: ${props => props.theme.fontSize.medium}px;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  margin-top: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.small}px) {\r\n    font-size: ${props => props.theme.fontSize.large}px;\r\n    margin-top: ${props => props.theme.thickness.small}px;\r\n    max-width: ${props => props.theme.thickness.extraExtraExtraLarge}px;\r\n  }\r\n`;\r\n\r\nconst Horizontal = styled.div`\r\n  display: flex;\r\n  flex-orientation: row;\r\n  margin-top: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst FavoriteButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Favorite\r\n}))``;\r\n\r\nconst PlayButton = styled(Button)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\ninterface Props {\r\n  imageSource?: string;\r\n  imageShape: ImageShape;\r\n  title: string;\r\n  subTitle?: string;\r\n  canPlay: boolean;\r\n  isPlaying: boolean;\r\n  isFavorite: boolean;\r\n  onTogglePlay: () => void;\r\n  onToggleFavorite: () => void;\r\n}\r\n\r\nfunction Header({\r\n  imageSource,\r\n  imageShape,\r\n  title,\r\n  subTitle,\r\n  canPlay,\r\n  isPlaying,\r\n  isFavorite,\r\n  onTogglePlay,\r\n  onToggleFavorite\r\n}: Props) {\r\n  function handleTogglePlay() {\r\n    onTogglePlay();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledImage source={imageSource} shape={imageShape} />\r\n      <Vertical>\r\n        <Title>{title}</Title>\r\n        {subTitle && <SubTitle>{subTitle}</SubTitle>}\r\n        <Horizontal>\r\n          <PlayButton disabled={!canPlay} onClick={handleTogglePlay}>\r\n            {isPlaying ? \"Pause\" : \"Play\"}\r\n          </PlayButton>\r\n          <FavoriteButton isToggled={isFavorite} onClick={onToggleFavorite} />\r\n        </Horizontal>\r\n      </Vertical>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  imageShape: ImageShape.Square,\r\n  onTogglePlay: () => {},\r\n  onToggleFavorite: () => {}\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.small}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist, Track, Type } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getPlaylist } from \"../../actions/playlists\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { toggleFollowPlaylist } from \"../../actions/following\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectPlaylist,\r\n  selectPlaylistTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/playlists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withLoader from \"../withLoader\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\ninterface Params {\r\n  playlistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  playlist?: Playlist;\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getPlaylist: (playlistId: string) => void;\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId?: string\r\n  ) => void;\r\n  toggleFollowPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction PlaylistDetails({\r\n  match,\r\n  playlist,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getPlaylist,\r\n  loadPlayPause,\r\n  toggleFollowPlaylist\r\n}: Props) {\r\n  const { playlistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getPlaylist(playlistId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleTogglePlay(trackId?: string) {\r\n    loadPlayPause(playlistId, Type.Playlist, trackId);\r\n  }\r\n\r\n  function handleToggleFavorite() {\r\n    toggleFollowPlaylist(playlistId);\r\n  }\r\n\r\n  return playlist ? (\r\n    <Wrapper>\r\n      <Header\r\n        imageSource={getImageSource(playlist)}\r\n        title={playlist.name}\r\n        subTitle={playlist.owner.display_name}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        isFavorite={playlist.isFollowed}\r\n        onTogglePlay={handleTogglePlay}\r\n        onToggleFavorite={handleToggleFavorite}\r\n      />\r\n      <TrackList tracks={tracks} onTogglePlay={handleTogglePlay} />\r\n    </Wrapper>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { playlistId } = match.params;\r\n  return {\r\n    playlist: selectPlaylist(state, playlistId),\r\n    tracks: selectPlaylistTracks(state, playlistId),\r\n    isPlayable: selectIsPlayable(state, playlistId),\r\n    isPlaying: selectIsPlaying(state, playlistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getPlaylist,\r\n  loadPlayPause,\r\n  toggleFollowPlaylist\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(PlaylistDetails)\r\n  )\r\n);\r\n","import { State } from \"../reducers\";\r\nimport { selectUserProfile } from \"../reducers/userProfile\";\r\nimport { PlaylistActionType as ActionType } from \".\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\nimport { checkFollowedPlaylist } from \"./following\";\r\nimport { checkSavedTracks } from \"./library\";\r\n\r\nexport interface PlaylistSuccessAction\r\n  extends EntitiesAction<ActionType.PlaylistSuccess> {}\r\n\r\nexport function getPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch, getState: () => State) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.PlaylistRequest,\r\n        ActionType.PlaylistSuccess,\r\n        ActionType.PlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}`,\r\n      schema: Schemas.Playlist,\r\n      success: json => {\r\n        const state = getState();\r\n        const userProfile = selectUserProfile(state);\r\n        if (userProfile) {\r\n          checkFollowedPlaylist(playlistId, userProfile.id)(dispatch);\r\n        }\r\n        const trackIds = json.tracks.items.map(({ track }: any) => track.id);\r\n        if (trackIds.length) {\r\n          checkSavedTracks(trackIds)(dispatch);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist, Track, Type } from \"../../types\";\r\nimport { getAlbum } from \"../../actions/albums\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { toggleSavedAlbum } from \"../../actions/library\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectAlbum,\r\n  selectAlbumArtists,\r\n  selectAlbumTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/albums\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport Collection from \"./Wrapper\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Params {\r\n  albumId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  album?: Album;\r\n  artists: Artist[];\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getAlbum: (albumId: string) => void;\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId?: string\r\n  ) => void;\r\n  toggleSavedAlbum: (albumId: string) => void;\r\n}\r\n\r\nfunction AlbumDetails({\r\n  match,\r\n  album,\r\n  artists,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getAlbum,\r\n  loadPlayPause,\r\n  toggleSavedAlbum\r\n}: Props) {\r\n  const { albumId } = match.params;\r\n\r\n  const effect = () => {\r\n    getAlbum(albumId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleTogglePlay(trackId?: string) {\r\n    loadPlayPause(albumId, Type.Album, trackId);\r\n  }\r\n\r\n  function handleToggleFavorite() {\r\n    toggleSavedAlbum(albumId);\r\n  }\r\n\r\n  return album ? (\r\n    <Collection>\r\n      <Header\r\n        imageSource={getImageSource(album)}\r\n        title={album.name}\r\n        subTitle={getArtistNames(artists)}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        isFavorite={album.isSaved}\r\n        onTogglePlay={handleTogglePlay}\r\n        onToggleFavorite={handleToggleFavorite}\r\n      />\r\n      <TrackList tracks={tracks} onTogglePlay={handleTogglePlay} />\r\n    </Collection>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { albumId } = match.params;\r\n  return {\r\n    album: selectAlbum(state, albumId),\r\n    artists: selectAlbumArtists(state)(albumId),\r\n    tracks: selectAlbumTracks(state, albumId),\r\n    isPlayable: selectIsPlayable(state, albumId),\r\n    isPlaying: selectIsPlaying(state, albumId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getAlbum,\r\n  loadPlayPause,\r\n  toggleSavedAlbum\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(AlbumDetails)\r\n  )\r\n);\r\n","import { AlbumActionType as ActionType } from \".\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\nimport { checkSavedAlbum, checkSavedTracks } from \"./library\";\r\n\r\nexport interface AlbumSuccessAction\r\n  extends EntitiesAction<ActionType.AlbumSuccess> {}\r\n\r\nexport function getAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.AlbumRequest,\r\n        ActionType.AlbumSuccess,\r\n        ActionType.AlbumFailure\r\n      ],\r\n      path: `albums/${albumId}`,\r\n      schema: Schemas.Album,\r\n      success: json => {\r\n        checkSavedAlbum(albumId)(dispatch);\r\n        const trackIds = json.tracks.items.map(({ id }: any) => id);\r\n        if (trackIds.length) {\r\n          checkSavedTracks(trackIds)(dispatch);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Track, Type } from \"../../types\";\r\nimport { getImageSource, getImageShape } from \"../../utils\";\r\nimport { getArtist } from \"../../actions/artists\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { toggleFollowArtist } from \"../../actions/following\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectArtist,\r\n  selectIsPlayable,\r\n  selectArtistAlbums,\r\n  selectArtistTopTracks,\r\n  selectArtistRelatedArtists\r\n} from \"../../reducers/artists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport TrackList from \"./TrackList\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport { Heading } from \"../core\";\r\nimport Header from \"./Header\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nfunction TopTracks({\r\n  tracks,\r\n  onTogglePlay\r\n}: {\r\n  tracks: Track[];\r\n  onTogglePlay: (trackId: string) => void;\r\n}) {\r\n  return (\r\n    <>{tracks && <TrackList tracks={tracks} onTogglePlay={onTogglePlay} />}</>\r\n  );\r\n}\r\n\r\nfunction Albums({ albums }: { albums: Album[] }) {\r\n  return (\r\n    <>\r\n      {albums && !!albums.length && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RelatedArtists({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <>\r\n      {artists && !!artists.length && (\r\n        <Section>\r\n          <Heading>Related Artists</Heading>\r\n          <ArtistCovers artists={artists} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Params {\r\n  artistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  artist?: Artist;\r\n  albums: Album[];\r\n  relatedArtists: Artist[];\r\n  topTracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getArtist: (artistId: string) => void;\r\n  loadPlayPause: (\r\n    artistId: string,\r\n    collectionType: Type,\r\n    trackId?: string\r\n  ) => void;\r\n  toggleFollowArtist: (artistId: string) => void;\r\n}\r\n\r\nfunction ArtistDetails({\r\n  match,\r\n  artist,\r\n  albums,\r\n  relatedArtists,\r\n  topTracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getArtist,\r\n  loadPlayPause,\r\n  toggleFollowArtist\r\n}: Props) {\r\n  const { artistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getArtist(artistId);\r\n  };\r\n  useEffect(effect, [artistId]);\r\n\r\n  function handleTogglePlay(trackId?: string) {\r\n    loadPlayPause(artistId, Type.Artist, trackId);\r\n  }\r\n\r\n  function handleToggleFavorite() {\r\n    toggleFollowArtist(artistId);\r\n  }\r\n\r\n  return artist ? (\r\n    <>\r\n      <Wrapper>\r\n        <Header\r\n          imageSource={getImageSource(artist)}\r\n          imageShape={getImageShape(artist)}\r\n          title={artist.name}\r\n          canPlay={isPlayable}\r\n          isPlaying={isPlaying}\r\n          isFavorite={artist.isFollowed}\r\n          onTogglePlay={handleTogglePlay}\r\n          onToggleFavorite={handleToggleFavorite}\r\n        />\r\n        <TopTracks tracks={topTracks} onTogglePlay={handleTogglePlay} />\r\n      </Wrapper>\r\n      <Albums albums={albums} />\r\n      <RelatedArtists artists={relatedArtists} />\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { artistId } = match.params;\r\n  return {\r\n    artist: selectArtist(state, artistId),\r\n    albums: selectArtistAlbums(state, artistId),\r\n    relatedArtists: selectArtistRelatedArtists(state, artistId),\r\n    topTracks: selectArtistTopTracks(state, artistId),\r\n    isPlayable: selectIsPlayable(state, artistId),\r\n    isPlaying: selectIsPlaying(state, artistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getArtist,\r\n  loadPlayPause,\r\n  toggleFollowArtist\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(ArtistDetails)\r\n  )\r\n);\r\n","import { ArtistActionType as ActionType } from \".\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\nimport { checkFollowedArtist } from \"./following\";\r\nimport { checkSavedTracks } from \"./library\";\r\n\r\nexport interface ArtistSuccessAction\r\n  extends EntitiesAction<ActionType.ArtistSuccess> {}\r\n\r\nexport function getArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRequest,\r\n        ActionType.ArtistSuccess,\r\n        ActionType.ArtistFailure\r\n      ],\r\n      path: `artists/${artistId}`,\r\n      schema: Schemas.Artist,\r\n      success: () => {\r\n        getArtistAlbums(artistId)(dispatch);\r\n        getArtistRelatedArtists(artistId)(dispatch);\r\n        getArtistTopTracks(artistId)(dispatch);\r\n        checkFollowedArtist(artistId)(dispatch);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistAlbumsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistAlbumsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistAlbums(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistAlbumsRequest,\r\n        ActionType.ArtistAlbumsSuccess,\r\n        ActionType.ArtistAlbumsFailure\r\n      ],\r\n      path: `artists/${artistId}/albums?country=us`,\r\n      schema: Schemas.PagedAlbums,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistRelatedArtistsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistRelatedArtistsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistRelatedArtists(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRelatedArtistsRequest,\r\n        ActionType.ArtistRelatedArtistsSuccess,\r\n        ActionType.ArtistRelatedArtistsFailure\r\n      ],\r\n      path: `artists/${artistId}/related-artists?country=us`,\r\n      schema: Schemas.Artists,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistTopTracksSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistTopTracksSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistTopTracks(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistTopTracksRequest,\r\n        ActionType.ArtistTopTracksSuccess,\r\n        ActionType.ArtistTopTracksFailure\r\n      ],\r\n      path: `artists/${artistId}/top-tracks?country=us`,\r\n      schema: Schemas.Tracks,\r\n      data: { artistId },\r\n      success: json => {\r\n        const trackIds = json.tracks.map(({ id }: any) => id);\r\n        if (trackIds.length) {\r\n          checkSavedTracks(trackIds)(dispatch);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track, Type } from \"../../types\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport { Collection } from \"../../reducers/types\";\r\nimport { selectCollection, selectLoadedTracks } from \"../../reducers/player\";\r\nimport { Heading } from \"../core\";\r\nimport TrackList from \"../details/TrackList\";\r\nimport Empty from \"../layout/Empty\";\r\n\r\nconst Wrapper = styled.div``;\r\n\r\ninterface Props {\r\n  collection?: Collection;\r\n  tracks: Track[];\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId: string\r\n  ) => void;\r\n}\r\n\r\nfunction Queue({ collection, tracks, loadPlayPause }: Props) {\r\n  function handleTogglePlay(trackId: string) {\r\n    collection && loadPlayPause(collection.id, collection.type, trackId);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {tracks && tracks.length ? (\r\n        <>\r\n          <Heading>Queue</Heading>\r\n          <TrackList tracks={tracks} onTogglePlay={handleTogglePlay} />\r\n        </>\r\n      ) : (\r\n        <Empty>No tracks</Empty>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  collection: selectCollection(state),\r\n  tracks: selectLoadedTracks(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  loadPlayPause\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Queue);\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport LogIn from \"./Login\";\r\nimport Browse from \"../browse/Browse\";\r\nimport CategoryPlaylists from \"../browse/CategoryPlaylists\";\r\nimport Search from \"../search/Search\";\r\nimport Library from \"../library/Library\";\r\nimport PlaylistDetails from \"../details/PlaylistDetails\";\r\nimport AlbumDetails from \"../details/AlbumDetails\";\r\nimport ArtistDetails from \"../details/ArtistDetails\";\r\nimport Queue from \"../player/Queue\";\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst publicUrl = process.env.PUBLIC_URL;\r\nconst Routes = ({ className }: HTMLAttributes<HTMLElement>) => {\r\n  return (\r\n    <Wrapper className={className}>\r\n      <DefaultRoute from={`${publicUrl}/`} to={`${publicUrl}/browse`} />\r\n      <Route path={`${publicUrl}/login`} component={LogIn} />\r\n      <PrivateRoute path={`${publicUrl}/browse`} component={Browse} />\r\n      <PrivateRoute path={`${publicUrl}/search/:query?`} component={Search} />\r\n      <PrivateRoute path={`${publicUrl}/library`} component={Library} />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/category/:categoryId`}\r\n        component={CategoryPlaylists}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/playlist/:playlistId`}\r\n        component={PlaylistDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/album/:albumId`}\r\n        component={AlbumDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/artist/:artistId`}\r\n        component={ArtistDetails}\r\n      />\r\n      <PrivateRoute path={`${publicUrl}/queue`} component={Queue} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Player from \"../player/Player\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledHeader = styled(Header)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: calc(100% - 150px);\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoint.extraSmall}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledMenu = styled(Menu)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst StyledRoutes = styled(Routes)`\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <StyledHeader />\r\n\r\n        <Body>\r\n          <StyledMenu />\r\n          <StyledRoutes />\r\n        </Body>\r\n\r\n        <Player />\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export interface Theme {\r\n  background: {\r\n    light: string;\r\n    default: string;\r\n    dark: string;\r\n    hover: string;\r\n    active: string;\r\n  };\r\n  breakpoint: {\r\n    extraSmall: number;\r\n    small: number;\r\n  };\r\n  color: {\r\n    primary: string;\r\n    error: string;\r\n  };\r\n  fontSize: {\r\n    small: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n    extraExtraLarge: number;\r\n  };\r\n  fontWeight: {\r\n    light: number;\r\n    normal: number;\r\n    bold: number;\r\n  };\r\n  foreground: {\r\n    default: string;\r\n    dark: string;\r\n    darker: string;\r\n  };\r\n  thickness: {\r\n    extraExtraSmall: number;\r\n    extraSmall: number;\r\n    small: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n    extraExtraLarge: number;\r\n    extraExtraExtraLarge: number;\r\n  };\r\n}\r\n\r\nexport const theme: Theme = {\r\n  background: {\r\n    light: \"#303030\",\r\n    default: \"#202020\",\r\n    dark: \"#101010\",\r\n    hover: \"rgba(255, 255, 255, 0.1)\",\r\n    active: \"rgba(255, 255, 255, 0.1)\"\r\n  },\r\n  breakpoint: {\r\n    extraSmall: 480,\r\n    small: 960\r\n  },\r\n  color: {\r\n    primary: \"#1db954\",\r\n    error: \"#e57373\"\r\n  },\r\n  fontSize: {\r\n    small: 12,\r\n    medium: 16,\r\n    large: 20,\r\n    extraLarge: 24,\r\n    extraExtraLarge: 32\r\n  },\r\n  fontWeight: {\r\n    light: 300,\r\n    normal: 400,\r\n    bold: 500\r\n  },\r\n  foreground: {\r\n    default: \"#ffffff\",\r\n    dark: \"rgba(255, 255, 255, 0.6)\",\r\n    darker: \"rgba(255, 255, 255, 0.3)\"\r\n  },\r\n  thickness: {\r\n    extraExtraSmall: 3.125,\r\n    extraSmall: 6.25,\r\n    small: 12.5,\r\n    medium: 25,\r\n    large: 50,\r\n    extraLarge: 100,\r\n    extraExtraLarge: 200,\r\n    extraExtraExtraLarge: 400\r\n  }\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\nexport default createGlobalStyle`\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body, h1, h2, h3, button, ul {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background: linear-gradient(rgba(255, 255, 255, 0.05), rgba(0, 0, 0, 0.5)), ${\r\n      theme.background.default\r\n    };\r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.fontSize.medium}px;\r\n    font-weight: ${theme.fontWeight.normal};\r\n    user-select: none;\r\n  }\r\n\r\n  a {\r\n    color: ${theme.foreground.default};\r\n    text-decoration: none;\r\n  }\r\n\r\n  button {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.fontSize.medium}px;\r\n    font-weight: ${theme.fontWeight.normal};\r\n\r\n    &:not(:disabled) {\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:disabled {\r\n      cursor: not-allowed; \r\n    }\r\n  }\r\n\r\n  a, button, input {\r\n    outline: none;\r\n\r\n    &:focus {\r\n      border: 0;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { ThemeProvider } from \"./styles/styled\";\r\nimport rootReducer from \"./reducers\";\r\nimport App from \"./components/layout/App\";\r\nimport { checkRedirection, initAuthorization } from \"./utils/authorization\";\r\nimport fetchMiddleware from \"./middlewares/fetchMiddleware\";\r\nimport { theme } from \"./styles/theme\";\r\nimport GlobalStyle from \"./styles/global\";\r\n\r\ncheckRedirection();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware, fetchMiddleware))\r\n);\r\ninitAuthorization(store.dispatch);\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { normalize } from \"normalizr\";\r\nimport { authorizedFetch } from \"../utils/authorization\";\r\n\r\nexport default () => (next: Dispatch) => (action: any) => {\r\n  const { types, path, method, schema, data, success } = action;\r\n\r\n  if (types) {\r\n    const [requestType, successType, failureType] = types;\r\n\r\n    next({ type: requestType });\r\n\r\n    return authorizedFetch(\r\n      `${process.env.REACT_APP_BASE_URL}/${path}`,\r\n      method\r\n    ).then(async response => {\r\n      const text = await response.text();\r\n      const json = text ? JSON.parse(text) : null;\r\n\r\n      if (response.ok) {\r\n        const payload =\r\n          json && schema ? normalize(json, schema).entities : json;\r\n\r\n        next({\r\n          type: successType,\r\n          payload: data ? { ...payload, ...data } : payload\r\n        });\r\n      } else {\r\n        next({ type: failureType, payload: json.error });\r\n      }\r\n      if (success) {\r\n        success(json);\r\n      }\r\n    });\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n","export * from \"./Album\";\r\nexport * from \"./Artist\";\r\nexport * from \"./Category\";\r\nexport * from \"./Copyright\";\r\nexport * from \"./Endpoint\";\r\nexport * from \"./ExternalId\";\r\nexport * from \"./ExternalUrl\";\r\nexport * from \"./Followers\";\r\nexport * from \"./Image\";\r\nexport * from \"./Paging\";\r\nexport * from \"./Playlist\";\r\nexport * from \"./PlaylistTrack\";\r\nexport * from \"./PublicUser\";\r\nexport * from \"./Restriction\";\r\nexport * from \"./Track\";\r\nexport * from \"./TrackLink\";\r\nexport * from \"./Type\";\r\nexport * from \"./User\";\r\nexport * from \"./UserProfile\";\r\n","export enum Type {\r\n  Album = \"album\",\r\n  Artist = \"artist\",\r\n  Playlist = \"playlist\",\r\n  Library = \"library\"\r\n}\r\n"],"sourceRoot":""}