{"version":3,"sources":["styles/styled.ts","actions/schemas.ts","actions/albums.ts","actions/authorization.ts","utils/authorization.ts","actions/artists.ts","actions/browse.ts","actions/playlists.ts","actions/index.ts","reducers/createReducer.ts","reducers/artists.ts","reducers/tracks.ts","reducers/albums.ts","reducers/authorization.ts","reducers/playlists.ts","reducers/browse.ts","reducers/loading.ts","actions/player.ts","reducers/player.ts","utils/index.ts","reducers/search.ts","actions/userProfile.ts","reducers/userProfile.ts","reducers/index.ts","styles/effects.ts","components/core/ButtonBase.tsx","components/core/Button.tsx","components/core/Heading.tsx","components/core/Icon.tsx","components/core/Image.tsx","components/core/RoundButton.tsx","components/core/Text.tsx","components/core/ToggleButton.tsx","components/layout/Title.tsx","components/layout/User.tsx","components/layout/Header.tsx","components/layout/Recents.tsx","components/layout/Menu.tsx","components/player/ArtistList.tsx","components/player/TrackInfos.tsx","components/player/Audio.tsx","components/player/Controls.tsx","components/player/Slider.tsx","components/player/Playback.tsx","components/player/Volume.tsx","components/player/Player.tsx","components/DefaultRoute.tsx","components/PrivateRoute.tsx","components/layout/Login.tsx","components/covers/CoverItem.tsx","components/covers/CoverList.tsx","components/covers/CategoryCovers.tsx","components/withLoader.tsx","components/browse/Categories.tsx","components/covers/AlbumCovers.tsx","components/browse/NewReleases.tsx","components/covers/PlaylistCovers.tsx","components/browse/FeaturedPlaylists.tsx","components/browse/Browse.tsx","components/browse/CategoryPlaylists.tsx","components/search/Recents.tsx","actions/search.ts","components/covers/ArtistCovers.tsx","components/search/Results.tsx","components/search/Search.tsx","components/details/Header.tsx","components/details/TrackItem.tsx","components/details/TrackList.tsx","components/details/Wrapper.tsx","components/details/PlaylistDetails.tsx","components/details/AlbumDetails.tsx","components/details/ArtistDetails.tsx","components/player/Queue.tsx","components/layout/Routes.tsx","components/layout/App.tsx","styles/theme.ts","styles/global.ts","index.tsx","middlewares/fetchMiddleware.ts","types/index.ts","types/Type.ts"],"names":["styledComponents","styled","default","ThemeProvider","css","createGlobalStyle","keyframes","Category","schema","Entity","Categories","Object","categories","items","Artist","Artists","artists","Album","processStrategy","_ref","tracks","rest","objectWithoutProperties","objectSpread","Albums","albums","Track","album","_ref2","parent","Tracks","Playlist","_ref3","map","item","track","Playlists","playlists","Results","_ref4","define","relatedArtists","topTracks","ActionType","Schemas","receiveLogIn","type","ReceiveLogIn","SearchActionType","LOG_IN_URL","concat","process","REGEX","ACCESS_TOKEN","TOKEN_TYPE","EXPIRES_AT","logInRedirect","Promise","resolve","reject","window","addEventListener","handleStorage","event","key","removeEventListener","location","assign","authorizedFetch","url","tokenType","localStorage","accessToken","fetch","headers","Authorization","fetchJson","_callee","response","regenerator_default","a","wrap","_context","prev","next","sent","abrupt","json","stop","createReducer","initialState","handlers","state","arguments","length","undefined","action","hasOwnProperty","mergeArtists","merge","payload","_createReducer","defineProperty","ArtistActionType","ArtistSuccess","ArtistAlbumsSuccess","_action$payload","artistId","nexState","keys","ArtistRelatedArtistsSuccess","_action$payload2","ArtistTopTracksSuccess","_action$payload3","FullArtistSuccess","AlbumActionType","AlbumSuccess","PlaylistActionType","PlaylistSuccess","BrowseActionType","NewReleasesSuccess","SearchSuccess","selectArtist","selectArtistAlbums","artist","selectAlbums","selectArtistRelatedArtists","selectArtists","selectArtistTopTracks","selectTracks","createSelector","memoize","artistIds","selectPlayableTracks","filter","preview_url","selectIsPlayable","mergeTracks","tracks_createReducer","selectTrack","trackId","selectTrackArtists","trackIds","mergeAlbums","albums_createReducer","selectAlbum","albumId","selectAlbumArtists","selectAlbumTracks","albumIds","isLoggedIn","selectIsLoggedIn","authorization","mergePlaylists","playlists_createReducer","CategoryPlaylistsSuccess","FeaturedPlaylistsSuccess","selectPlaylist","playlistId","selectPlaylistTracks","playlist","selectPlaylists","playlistIds","categoryPlaylistIds","featuredPlaylistIds","newReleaseIds","browse_createReducer","CategoriesSuccess","CategorySuccess","selectCategories","browse","values","selectCategory","categoryId","selectCategoryPlaylists","selectFeaturedPlaylists","selectNewReleases","increment","count","decrement","loading_createReducer","AlbumRequest","AlbumFailure","ArtistRequest","ArtistFailure","ArtistAlbumsRequest","ArtistAlbumsFailure","ArtistRelatedArtistsRequest","ArtistRelatedArtistsFailure","FullArtistRequest","FullArtistFailure","CategoriesRequest","CategoriesFailure","CategoryRequest","CategoryFailure","CategoryPlaylistsRequest","CategoryPlaylistsFailure","FeaturedPlaylistsRequest","FeaturedPlaylistsFailure","NewReleasesRequest","NewReleasesFailure","PlaylistRequest","PlaylistFailure","SearchRequest","SearchFailure","selectIsLoading","loading","PlayerState","Command","providers","_providers","Type","selectArtistTracks","loadCollection","collectionId","collectionType","dispatch","getState","id","getTrackIds","LoadCollection","playPause","selectIsPlaying","Pause","Play","loadPlayPause","isLoaded","selectIsLoaded","LoadTrack","loadTrack","collections","trackIndex","playerState","None","duration","currentTime","isShuffled","isLooped","volume","isMuted","command","player_createReducer","toConsumableArray","recent","indexOf","TrackLoaded","Playing","Update","Paused","Seek","_ref5","Seeked","Ended","Next","Previous","ToggleShuffle","ToggleLoop","ChangeVolume","_ref6","VolumeChanged","selectCollection","_ref7","recents","player","selectLoadedTrack","_state$player","selectLoadedTracks","selectLoadedAlbum","selectLoadedArtists","_state$player2","selectCanPlayPause","selectCanSeek","selectCanNext","_state$player3","selectCanPrevious","_state$player4","selectTimes","_ref10","_ref11","selectVolume","_ref12","selectIsMuted","_ref13","selectCommand","getArtistNames","name","join","getImageSource","object","images","addRecent","imageSource","search_createReducer","results","_results$Object$keys$","ClearResults","SelectAlbum","SelectArtist","SelectPlaylist","ClearRecents","selectAlbumsById","search","selectArtistsById","sort","x","y","popularity","selectPlaylistsById","selectRecents","UserProfileSuccess","userProfile","selectUserProfile","combineReducers","click","props","theme","background","active","foreground","hover","ButtonBase","button","_templateObject","dark","Button","Button_templateObject","primary","thickness","medium","large","small","IconType","Heading","h2","Heading_templateObject","fontSize","extraLarge","fontWeight","bold","Icon","ImageShape","className","react_default","createElement","StyledImg","img","Image_templateObject","shape","Round","Container","div","_templateObject2","light","StyledText","span","_templateObject3","Image","source","_useState","useState","_useState2","slicedToArray","setIsLoaded","src","onLoad","defaultProps","Square","StyedButton","RoundButton_templateObject","extraSmall","darker","StyledIcon","RoundButton_templateObject2","RoundButton","iconType","Text","Text_templateObject","StyledRoundButton","ToggleButton_templateObject","isToggled","ToggleButton","StyledLink","Link","Title_templateObject","Title_templateObject2","Title_templateObject3","Title","to","Title_StyledIcon","Wifi","Title_StyledText","Wrapper","User_templateObject","User_templateObject2","User","display_name","User_StyledIcon","Person","header","Header_templateObject","breakpoints","mapDispatch","getUserProfile","types","UserProfileRequest","UserProfileFailure","path","connect","useEffect","Header_Wrapper","layout_Title","layout_User","Recents","Fragment","Menu_templateObject","extraExtraLarge","List","ul","Menu_templateObject2","StyledNavLink","NavLink","Menu_templateObject3","extraExtraSmall","primaryLight","_templateObject4","link","icon","ViewModule","text","Search","Menu","Menu_Wrapper","Menu_StyledIcon","layout_Recents","ArtistList_templateObject","Item","ArtistList_templateObject2","ArtistList_templateObject3","ArtistList","ArtistList_List","ArtistList_StyledLink","TrackInfos_templateObject","StyedImage","TrackInfos_templateObject2","TrackInfos_templateObject3","TrackInfos_templateObject4","TrackInfos_Wrapper","TrackInfos_Container","TrackInfos_Title","player_ArtistList","trackLoaded","playing","update","elapsed","paused","seeked","volumeChanged","ended","loadedTrack","times","audio","useRef","currentAudio","current","play","pause","ref","onLoadedMetadata","target","onPlay","onTimeUpdate","onPause","onSeeked","onVolumeChange","onEnded","Controls_templateObject","ShuffleButton","attrs","Shuffle","Controls_templateObject2","PreviousButton","SkipPrevious","Controls_templateObject3","PlayButton","isPlaying","PlayArrow","Controls_templateObject4","NextButton","SkipNext","_templateObject5","LoopButton","Loop","_templateObject6","toggleShuffle","previous","toggleLoop","_ref8","canPrevious","canPlayPause","canNext","_ref9","Controls_Wrapper","onClick","disabled","Slider_templateObject","isDisabled","Slider_templateObject2","Left","style","width","Slider_templateObject3","Thumb","position","left","Slider_templateObject4","Right","Slider_templateObject5","Slider","value","canChange","onChange","isDown","setIsDown","_useState3","_useState4","localValue","setLocalValue","wrapper","thumb","getValue","currentWrapper","currentTHunb","getBoundingClientRect","clientWidth","handleMouseMove","pageX","handleMouseUp","document","currentValue","Slider_Wrapper","onMouseDown","Slider_Container","Playback_templateObject","ProgressTime","Playback_templateObject2","Playback","canSeek","onSeek","renderTime","seconds","minutes","Math","floor","round","progress","Playback_Wrapper","player_Slider","Volume_templateObject","VolumeButton","VolumeOff","VolumeUp","Volume_templateObject2","StyledSlider","Volume_templateObject3","changeVolume","Volume_Wrapper","Player_templateObject","ThirdWrapper","Player_templateObject2","LeftWrapper","Player_templateObject3","CenterWrapper","Player_templateObject4","RightWrapper","Player_templateObject5","QueueButton","PlaylistPlay","Player_templateObject6","seek","time","withRouter","history","Player_Wrapper","player_TrackInfos","player_Controls","player_Playback","push","player_Volume","player_Audio","DefaultRoute","from","Route","exact","render","Redirect","Component","component","Login_templateObject","StyledButton","Login_templateObject2","LogIn","Login_Wrapper","core_Heading","CoverItem_templateObject","StyledImge","CoverItem_templateObject2","CoverItem_templateObject3","SubTitle","CoverItem_templateObject4","CoverItem","cover","CoverItem_StyledButton","imageShape","CoverItem_Title","title","subTitle","StyledList","CoverList_templateObject","splitWidth","StyledItem","li","CoverList_templateObject2","CoverList","covers","covers_CoverItem","category","icons","getCovers","covers_CoverList","Fader","withLoader_templateObject","isLoading","Loader","withLoader_templateObject2","withLoader","WrappedComponent","match","prevUrl","setPrevUrl","hasLoaded","setHasLoaded","getCategories","covers_CategoryCovers","selectAbumArtists","onSelect","getAlbums","covers_AlbumCovers","owner","getPlaylists","PlaylistCovers","Browse_templateObject","Browse_templateObject2","Browse_templateObject3","links","label","Browse_Wrapper","Browse_StyledList","Browse_StyledNavLink","components_DefaultRoute","es_Route","NewReleases","FeaturedPlaylists","getCategory","getCategoryPlaylists","params","Recents_templateObject","StyledCoverList","Recents_templateObject2","ClearButton","children","Recents_templateObject3","clearRecents","capitalize","Recents_Wrapper","find","toLowerCase","Section","section","Results_templateObject","covers_ArtistCovers","selectAlbumById","selectArtistById","selectPlaylistById","Results_Artists","Results_Albums","Results_Playlists","debounced","StyledInput","input","Search_templateObject","query","encoded","encodeURIComponent","setValue","_","debounce","placeholder","autoFocus","search_Results","search_Recents","details_Header_templateObject","StyledImage","Header_templateObject2","Div","Header_templateObject3","Header_templateObject4","Header_templateObject5","Header_templateObject6","Header","canPlay","onToggle","details_Header_Wrapper","Header_Title","Header_SubTitle","Header_PlayButton","TrackItem_templateObject","TrackItem_templateObject2","isHover","Infos","TrackItem_templateObject3","TrackItem_templateObject4","normal","TrackItem_templateObject5","Duration","TrackItem_templateObject6","TrackItem_StyledButton","TrackItem_StyledIcon","MusicOff","MusicNote","TrackItem_Title","TrackItem_SubTitle","duration_ms","renderDuration","TrackList_templateObject","TrackList_templateObject2","TrackList","TrackList_StyledList","TrackList_StyledItem","details_TrackItem","Wrapper_templateObject","getPlaylist","ownProps","isPlayable","handleToggle","details_Wrapper","details_Header","details_TrackList","getAlbum","ArtistDetails_templateObject","TopTracks","ArtistDetails_Section","RelatedArtists","getFullArtist","all","then","normalize","entities","ArtistDetails_Albums","Queue_templateObject","collection","Queue_Wrapper","Routes_templateObject","Routes","publicUrl","Routes_Wrapper","components_PrivateRoute","Browse","CategoryPlaylists","PlaylistDetails","AlbumDetails","ArtistDetails","Queue","App_templateObject","StyledHeader","App_templateObject2","Body","App_templateObject3","StyledPlayer","Player","App_templateObject4","App","BrowserRouter","App_Wrapper","layout_Menu","layout_Routes","global_templateObject","hash","date","Date","setSeconds","getSeconds","parseInt","toString","checkRedirection","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","data","_types","requestType","successType","failureType","ok","error","parse","now","ReactDOM","global","es","layout_App","getElementById","_Album__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","o","d","__webpack_exports__","_Artist__WEBPACK_IMPORTED_MODULE_1__","_Category__WEBPACK_IMPORTED_MODULE_2__","_Copyright__WEBPACK_IMPORTED_MODULE_3__","_Endpoint__WEBPACK_IMPORTED_MODULE_4__","_Entities__WEBPACK_IMPORTED_MODULE_5__","_ExternalId__WEBPACK_IMPORTED_MODULE_6__","_ExternalUrl__WEBPACK_IMPORTED_MODULE_7__","_Followers__WEBPACK_IMPORTED_MODULE_8__","_Image__WEBPACK_IMPORTED_MODULE_9__","_Paging__WEBPACK_IMPORTED_MODULE_10__","_Playlist__WEBPACK_IMPORTED_MODULE_11__","_PlaylistTrack__WEBPACK_IMPORTED_MODULE_12__","_PublicUser__WEBPACK_IMPORTED_MODULE_13__","_Restriction__WEBPACK_IMPORTED_MODULE_14__","_Track__WEBPACK_IMPORTED_MODULE_15__","_TrackLink__WEBPACK_IMPORTED_MODULE_16__","_Type__WEBPACK_IMPORTED_MODULE_17__"],"mappings":"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","file":"static/js/main.547f2a33.chunk.js","sourcesContent":["import * as styledComponents from \"styled-components\";\r\nimport { Theme } from \"./theme\";\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\r\nexport default styled;\r\n","import { schema } from \"normalizr\";\r\n\r\nconst Category = new schema.Entity(\"categories\");\r\n\r\nconst Categories = new schema.Object({\r\n  categories: { items: [Category] }\r\n});\r\n\r\nconst Artist = new schema.Entity(\"artists\");\r\n\r\nconst Artists = new schema.Object({\r\n  artists: [Artist]\r\n});\r\n\r\nconst Album = new schema.Entity(\r\n  \"albums\",\r\n  {\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks ? tracks.items : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Albums = new schema.Object({\r\n  items: [Album],\r\n  albums: { items: [Album] }\r\n});\r\n\r\nconst Track = new schema.Entity(\r\n  \"tracks\",\r\n  {\r\n    album: Album,\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ album, artists, ...rest }, parent) => ({\r\n      ...rest,\r\n      album: parent[\"type\"] === \"album\" ? parent : album,\r\n      artists: artists\r\n    })\r\n  }\r\n);\r\n\r\nconst Tracks = new schema.Object({\r\n  tracks: [Track]\r\n});\r\n\r\nconst Playlist = new schema.Entity(\r\n  \"playlists\",\r\n  {\r\n    tracks: [Track]\r\n  },\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks.items ? tracks.items.map((item: any) => item.track) : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Playlists = new schema.Entity(\"playlistItems\", {\r\n  playlists: { items: [Playlist] }\r\n});\r\n\r\nconst Results = new schema.Entity(\r\n  \"results\",\r\n  {\r\n    albums: [Album],\r\n    artists: [Artist],\r\n    playlists: [Playlist]\r\n  },\r\n  {\r\n    processStrategy: ({ albums, artists, playlists }) => ({\r\n      albums: albums.items,\r\n      artists: artists.items,\r\n      playlists: playlists.items\r\n    })\r\n  }\r\n);\r\n\r\nArtist.define({\r\n  albums: [Album],\r\n  relatedArtists: [Artist],\r\n  topTracks: [Track]\r\n});\r\n\r\nAlbum.define({\r\n  tracks: [Track]\r\n});\r\n\r\nexport const Schemas = {\r\n  Artist,\r\n  Artists,\r\n  Album,\r\n  Albums,\r\n  Category,\r\n  Categories,\r\n  Track,\r\n  Tracks,\r\n  Playlist,\r\n  Playlists,\r\n  Results\r\n};\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  AlbumRequest = \"ALBUM_REQUEST\",\r\n  AlbumSuccess = \"ALBUM_SUCCESS\",\r\n  AlbumFailure = \"ALBUM_FAILURE\"\r\n}\r\n\r\nexport interface AlbumSuccessAction\r\n  extends EntitiesAction<ActionType.AlbumSuccess> {}\r\n\r\nexport function getAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.AlbumRequest,\r\n        ActionType.AlbumSuccess,\r\n        ActionType.AlbumFailure\r\n      ],\r\n      path: `albums/${albumId}`,\r\n      schema: Schemas.Album\r\n    });\r\n  };\r\n}\r\n","import { Action, Dispatch } from \"redux\";\r\nimport { logInRedirect } from \"../utils/authorization\";\r\n\r\nexport enum ActionType {\r\n  RequestLogIn = \"REQUEST_LOG_IN\",\r\n  ReceiveLogIn = \"RECEIVE_LOG_IN\"\r\n}\r\n\r\nexport interface RequestLogInAction extends Action<ActionType.RequestLogIn> {}\r\n\r\nfunction requestLogIn(): RequestLogInAction {\r\n  return {\r\n    type: ActionType.RequestLogIn\r\n  };\r\n}\r\n\r\nexport interface ReceiveLogInAction extends Action<ActionType.ReceiveLogIn> {}\r\n\r\nexport function receiveLogIn(): ReceiveLogInAction {\r\n  return {\r\n    type: ActionType.ReceiveLogIn\r\n  };\r\n}\r\n\r\nexport function logIn() {\r\n  return async (\r\n    dispatch: Dispatch<RequestLogInAction | ReceiveLogInAction>\r\n  ) => {\r\n    dispatch(requestLogIn());\r\n    await logInRedirect();\r\n    dispatch(receiveLogIn());\r\n  };\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { receiveLogIn } from \"../actions/authorization\";\r\n\r\nconst LOG_IN_URL = `https://accounts.spotify.com/authorize?client_id=${\r\n  process.env.REACT_APP_CLIENT_ID\r\n}&response_type=token&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\r\nconst REGEX = /#access_token=(.*?)&token_type=(.*?)&expires_in=(.*)$/;\r\nconst ACCESS_TOKEN = \"token\";\r\nconst TOKEN_TYPE = \"tokenType\";\r\nconst EXPIRES_AT = \"expiresAt\";\r\n\r\nfunction logInRedirect(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    const handleStorage = (event: StorageEvent) => {\r\n      if (event.key === ACCESS_TOKEN) {\r\n        window.removeEventListener(\"storage\", handleStorage);\r\n        resolve();\r\n      }\r\n    };\r\n    window.addEventListener(\"storage\", handleStorage);\r\n    window.location.assign(LOG_IN_URL);\r\n  });\r\n}\r\n\r\nfunction checkRedirection(): void {\r\n  const match = window.location.hash.match(REGEX);\r\n  if (match) {\r\n    localStorage[ACCESS_TOKEN] = match[1];\r\n    localStorage[TOKEN_TYPE] = match[2];\r\n    const date = new Date();\r\n    date.setSeconds(date.getSeconds() + parseInt(match[3]));\r\n    localStorage[EXPIRES_AT] = date.toString();\r\n  }\r\n}\r\n\r\nfunction initAuthorization(dispatch: Dispatch): void {\r\n  if (\r\n    !!localStorage[ACCESS_TOKEN] &&\r\n    Date.parse(localStorage[EXPIRES_AT]) > Date.now()\r\n  ) {\r\n    dispatch(receiveLogIn());\r\n  }\r\n}\r\n\r\nfunction authorizedFetch(url: string): Promise<Response> {\r\n  const tokenType = localStorage[TOKEN_TYPE];\r\n  const accessToken = localStorage[ACCESS_TOKEN];\r\n\r\n  return fetch(url, {\r\n    headers: {\r\n      Authorization: `${tokenType} ${accessToken}`\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchJson(url: string): Promise<any> {\r\n  const response = await authorizedFetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport {\r\n  logInRedirect,\r\n  checkRedirection,\r\n  initAuthorization,\r\n  authorizedFetch,\r\n  fetchJson\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { normalize } from \"normalizr\";\r\nimport { fetchJson } from \"../utils/authorization\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  ArtistRequest = \"ARTIST_REQUEST\",\r\n  ArtistSuccess = \"ARTIST_SUCCESS\",\r\n  ArtistFailure = \"ARTIST_FAILURE\",\r\n  ArtistAlbumsRequest = \"ARTIST_ALBUMS_REQUEST\",\r\n  ArtistAlbumsSuccess = \"ARTIST_ALBUMS_SUCCESS\",\r\n  ArtistAlbumsFailure = \"ARTIST_ALBUMS_FAILURE\",\r\n  ArtistRelatedArtistsRequest = \"ARTIST_RELATED_ARTISTS_REQUEST\",\r\n  ArtistRelatedArtistsSuccess = \"ARTIST_RELATED_ARTISTS_SUCCESS\",\r\n  ArtistRelatedArtistsFailure = \"ARTIST_RELATED_ARTISTS_FAILURE\",\r\n  ArtistTopTracksRequest = \"ARTIST_TOP_TRACKS_REQUEST\",\r\n  ArtistTopTracksSuccess = \"ARTIST_TOP_TRACKS_SUCCESS\",\r\n  ArtistTopTracksFailure = \"ARTIST_TOP_TRACKS_FAILURE\",\r\n  FullArtistRequest = \"FULL_ARTIST_REQUEST\",\r\n  FullArtistSuccess = \"FULL_ARTIST_SUCCESS\",\r\n  FullArtistFailure = \"FULL_ARTIST_FAILURE\"\r\n}\r\n\r\nexport interface ArtistSuccessAction\r\n  extends EntitiesAction<ActionType.ArtistSuccess> {}\r\n\r\nexport function getArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRequest,\r\n        ActionType.ArtistSuccess,\r\n        ActionType.ArtistFailure\r\n      ],\r\n      path: `artists/${artistId}`,\r\n      schema: Schemas.Artist\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistAlbumsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistAlbumsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistAlbums(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistAlbumsRequest,\r\n        ActionType.ArtistAlbumsSuccess,\r\n        ActionType.ArtistAlbumsFailure\r\n      ],\r\n      path: `artists/${artistId}/albums`,\r\n      schema: Schemas.Albums,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistRelatedArtistsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistRelatedArtistsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistRelatedArtists(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRelatedArtistsRequest,\r\n        ActionType.ArtistRelatedArtistsSuccess,\r\n        ActionType.ArtistRelatedArtistsFailure\r\n      ],\r\n      path: `artists/${artistId}/related-artists`,\r\n      schema: Schemas.Artists,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistTopTracksSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistTopTracksSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistTopTracks(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistTopTracksRequest,\r\n        ActionType.ArtistTopTracksSuccess,\r\n        ActionType.ArtistTopTracksFailure\r\n      ],\r\n      path: `artists/${artistId}/top-tracks?country=us`,\r\n      schema: Schemas.Tracks,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function getFullArtist(artistId: string) {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch({\r\n      type: ActionType.FullArtistRequest\r\n    });\r\n    const url = `${process.env.REACT_APP_BASE_URL}/artists/${artistId}`;\r\n    Promise.all([\r\n      fetchJson(url),\r\n      fetchJson(`${url}/albums`),\r\n      fetchJson(`${url}/related-artists`),\r\n      fetchJson(`${url}/top-tracks?country=us`)\r\n    ]).then(([artist, albums, relatedArtists, topTracks]) => {\r\n      dispatch({\r\n        type: ActionType.FullArtistSuccess,\r\n        payload: normalize(\r\n          {\r\n            ...artist,\r\n            albums: albums.items,\r\n            relatedArtists: relatedArtists.artists,\r\n            topTracks: topTracks.tracks\r\n          },\r\n          Schemas.Artist\r\n        ).entities\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  CategoriesRequest = \"CATEGORIES_REQUEST\",\r\n  CategoriesSuccess = \"CATEGORIES_SUCCESS\",\r\n  CategoriesFailure = \"CATEGORIES_FAILURE\",\r\n  CategoryRequest = \"CATEGORY_REQUEST\",\r\n  CategorySuccess = \"CATEGORY_SUCCESS\",\r\n  CategoryFailure = \"CATEGORY_FAILURE\",\r\n  CategoryPlaylistsRequest = \"CATEGORY_PLAYLISTS_REQUEST\",\r\n  CategoryPlaylistsSuccess = \"CATEGORY_PLAYLISTS_SUCCESS\",\r\n  CategoryPlaylistsFailure = \"CATEGORY_PLAYLISTS_FAILURE\",\r\n  FeaturedPlaylistsRequest = \"FEATURED_PLAYLISTS_REQUEST\",\r\n  FeaturedPlaylistsSuccess = \"FEATURED_PLAYLISTS_SUCCESS\",\r\n  FeaturedPlaylistsFailure = \"FEATURED_PLAYLISTS_FAILURE\",\r\n  NewReleasesRequest = \"NEW_RELEASES_REQUEST\",\r\n  NewReleasesSuccess = \"NEW_RELEASES_SUCCESS\",\r\n  NewReleasesFailure = \"NEW_RELEASES_FAILURE\"\r\n}\r\n\r\nexport interface CategoriesSuccessAction\r\n  extends EntitiesAction<ActionType.CategoriesSuccess> {}\r\n\r\nexport function getCategories() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoriesRequest,\r\n        ActionType.CategoriesSuccess,\r\n        ActionType.CategoriesFailure\r\n      ],\r\n      path: \"browse/categories\",\r\n      schema: Schemas.Categories\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategorySuccessAction\r\n  extends EntitiesAction<ActionType.CategorySuccess> {}\r\n\r\nexport function getCategory(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryRequest,\r\n        ActionType.CategorySuccess,\r\n        ActionType.CategoryFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}`,\r\n      schema: Schemas.Category\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategoryPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.CategoryPlaylistsSuccess> {}\r\n\r\nexport function getCategoryPlaylists(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryPlaylistsRequest,\r\n        ActionType.CategoryPlaylistsSuccess,\r\n        ActionType.CategoryPlaylistsFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}/playlists`,\r\n      schema: Schemas.Playlists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface FeaturedPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.FeaturedPlaylistsSuccess> {}\r\n\r\nexport function getFeaturedPlaylists() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FeaturedPlaylistsRequest,\r\n        ActionType.FeaturedPlaylistsSuccess,\r\n        ActionType.FeaturedPlaylistsFailure\r\n      ],\r\n      path: \"browse/featured-playlists\",\r\n      schema: Schemas.Playlists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface NewReleasesSuccessAction\r\n  extends EntitiesAction<ActionType.NewReleasesSuccess> {}\r\n\r\nexport function getNewReleases() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.NewReleasesRequest,\r\n        ActionType.NewReleasesSuccess,\r\n        ActionType.NewReleasesFailure\r\n      ],\r\n      path: \"browse/new-releases\",\r\n      schema: Schemas.Albums\r\n    });\r\n  };\r\n}\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  PlaylistRequest = \"PLAYLIST_REQUEST\",\r\n  PlaylistSuccess = \"PLAYLIST_SUCCESS\",\r\n  PlaylistFailure = \"PLAYLIST_FAILURE\"\r\n}\r\n\r\nexport interface PlaylistSuccessAction\r\n  extends EntitiesAction<ActionType.PlaylistSuccess> {}\r\n\r\nexport function getPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.PlaylistRequest,\r\n        ActionType.PlaylistSuccess,\r\n        ActionType.PlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}`,\r\n      schema: Schemas.Playlist\r\n    });\r\n  };\r\n}\r\n","export { ActionType as AlbumActionType } from \"./albums\";\r\nexport { ActionType as ArtistActionType } from \"./artists\";\r\nexport { ActionType as BrowseActionType } from \"./browse\";\r\nexport { ActionType as PlaylistActionType } from \"./playlists\";\r\n\r\nexport enum SearchActionType {\r\n  SearchRequest = \"SEARCH_REQUEST\",\r\n  SearchSuccess = \"SEARCH_SUCCESS\",\r\n  SearchFailure = \"SEARCH_FAILURE\",\r\n  ClearResults = \"CLEAR_RESULTS\",\r\n  SelectAlbum = \"SELECT_ALBUM\",\r\n  SelectArtist = \"SELECT_ARTIST\",\r\n  SelectPlaylist = \"SELECT_PLAYLIST\",\r\n  ClearRecents = \"CLEAR_RECENTS\"\r\n}\r\n","import { Action } from \"redux\";\r\n\r\nexport default function createReducer(initialState: object, handlers: any) {\r\n  return function reducer(state = initialState, action: Action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Artist } from \"../types\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport {\r\n  ArtistAlbumsSuccessAction,\r\n  ArtistRelatedArtistsSuccessAction,\r\n  ArtistTopTracksSuccessAction\r\n} from \"../actions/artists\";\r\nimport { State as CombinedState } from \".\";\r\nimport { ArtistDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums } from \"./albums\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends ArtistDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeArtists(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.artists);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [ArtistActionType.ArtistSuccess]: mergeArtists,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: (\r\n    state: State,\r\n    action: ArtistAlbumsSuccessAction\r\n  ) => {\r\n    const { artistId, albums } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        albums: Object.keys(albums)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: (\r\n    state: State,\r\n    action: ArtistRelatedArtistsSuccessAction\r\n  ) => {\r\n    const { artistId, artists } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        relatedArtists: Object.keys(artists)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistTopTracksSuccess]: (\r\n    state: State,\r\n    action: ArtistTopTracksSuccessAction\r\n  ) => {\r\n    const { artistId, tracks } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        topTracks: Object.keys(tracks)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.FullArtistSuccess]: mergeArtists,\r\n  [AlbumActionType.AlbumSuccess]: mergeArtists,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeArtists,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeArtists,\r\n  [SearchActionType.SearchSuccess]: mergeArtists\r\n});\r\n\r\nexport function selectArtist({ artists }: CombinedState, artistId: string) {\r\n  return artists[artistId];\r\n}\r\n\r\nexport function selectArtistAlbums(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const albums = selectAlbums(state)(artist.albums);\r\n    if (albums) {\r\n      return albums;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistRelatedArtists(\r\n  state: CombinedState,\r\n  artistId: string\r\n) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const artists = selectArtists(state)(artist.relatedArtists);\r\n    if (artists) {\r\n      return artists;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistTopTracks(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const tracks = selectTracks(state)(artist.topTracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectArtists = createSelector(\r\n  (state: CombinedState) => state.artists,\r\n  (artists: ArtistDictionary): ((artistIds: string[]) => Artist[]) =>\r\n    memoize((artistIds: string[]) =>\r\n      artistIds ? artistIds.map(artistId => artists[artistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, artistId: string) {\r\n  const tracks = selectArtistTopTracks(state, artistId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, artistId: string) {\r\n  return !!selectPlayableTracks(state, artistId).length;\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport { TrackDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nexport interface State extends TrackDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeTracks(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.tracks);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeTracks,\r\n  [ArtistActionType.ArtistTopTracksSuccess]: mergeTracks,\r\n  [ArtistActionType.FullArtistSuccess]: mergeTracks,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeTracks,\r\n  [SearchActionType.SearchSuccess]: mergeTracks\r\n});\r\n\r\nexport function selectTrack({ tracks }: CombinedState, trackId: string) {\r\n  return tracks[trackId];\r\n}\r\n\r\nexport function selectTrackAlbum(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return selectAlbum(state, track.album);\r\n}\r\n\r\nexport function selectTrackArtists(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return selectArtists(state)(track.artists);\r\n}\r\n\r\nexport const selectTracks = createSelector(\r\n  (state: CombinedState) => state.tracks,\r\n  (tracks: TrackDictionary) =>\r\n    memoize((trackIds: string[]) =>\r\n      trackIds ? trackIds.map(trackId => tracks[trackId]) : []\r\n    )\r\n);\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport { AlbumDictionary, ArtistDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends AlbumDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeAlbums(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.albums);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeAlbums,\r\n  [ArtistActionType.FullArtistSuccess]: mergeAlbums,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeAlbums,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: mergeAlbums,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeAlbums,\r\n  [SearchActionType.SearchSuccess]: mergeAlbums\r\n});\r\n\r\nexport function selectAlbum({ albums }: CombinedState, albumId: string) {\r\n  return albums[albumId];\r\n}\r\n\r\nexport const selectAlbumArtists = createSelector(\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  (albums: AlbumDictionary, artists: ArtistDictionary) =>\r\n    memoize((albumId: string) => {\r\n      const album = albums[albumId];\r\n      if (album) {\r\n        return album.artists.map(artistId => artists[artistId]);\r\n      }\r\n\r\n      return [];\r\n    })\r\n);\r\n\r\nexport function selectAlbumTracks(state: CombinedState, albumId: string) {\r\n  const album = selectAlbum(state, albumId);\r\n  if (album) {\r\n    const tracks = selectTracks(state)(album.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectAlbums = createSelector(\r\n  (state: CombinedState) => state.albums,\r\n  (albums: AlbumDictionary) =>\r\n    memoize((albumIds: string[]) =>\r\n      albumIds ? albumIds.map(albumId => albums[albumId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, albumId: string) {\r\n  const tracks = selectAlbumTracks(state, albumId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, albumId: string) {\r\n  return !!selectPlayableTracks(state, albumId).length;\r\n}\r\n","import { ActionType } from \"../actions/authorization\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoggedIn: false\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.ReceiveLogIn]: (state: State) => ({\r\n    ...state,\r\n    isLoggedIn: true\r\n  })\r\n});\r\n\r\nexport function selectIsLoggedIn(state: CombinedState): boolean {\r\n  return !!state.authorization.isLoggedIn;\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport { PlaylistDictionary } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State extends PlaylistDictionary {}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergePlaylists(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.playlists);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [PlaylistActionType.PlaylistSuccess]: mergePlaylists,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: mergePlaylists,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: mergePlaylists,\r\n  [SearchActionType.SearchSuccess]: mergePlaylists\r\n});\r\n\r\nexport function selectPlaylist(\r\n  { playlists }: CombinedState,\r\n  playlistId: string\r\n) {\r\n  return playlists[playlistId];\r\n}\r\n\r\nexport function selectPlaylistTracks(state: CombinedState, albumId: string) {\r\n  const playlist = selectPlaylist(state, albumId);\r\n  if (playlist) {\r\n    const tracks = selectTracks(state)(playlist.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectPlaylists = createSelector(\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (playlists: PlaylistDictionary) =>\r\n    memoize((playlistIds: string[]) =>\r\n      playlistIds ? playlistIds.map(playlistId => playlists[playlistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, playlistId: string) {\r\n  const tracks = selectPlaylistTracks(state, playlistId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, playlistId: string) {\r\n  return !!selectPlayableTracks(state, playlistId).length;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Album, Category, Playlist } from \"../types\";\r\nimport {\r\n  ActionType,\r\n  CategorySuccessAction,\r\n  CategoriesSuccessAction,\r\n  NewReleasesSuccessAction,\r\n  CategoryPlaylistsSuccessAction,\r\n  FeaturedPlaylistsSuccessAction\r\n} from \"../actions/browse\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectPlaylists } from \"./playlists\";\r\nimport { selectAlbums } from \"./albums\";\r\n\r\nexport interface State {\r\n  categories: { [id: string]: Category };\r\n  categoryPlaylistIds: string[];\r\n  featuredPlaylistIds: string[];\r\n  newReleaseIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  categories: {},\r\n  categoryPlaylistIds: [],\r\n  featuredPlaylistIds: [],\r\n  newReleaseIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.CategoriesSuccess]: (\r\n    state: State,\r\n    action: CategoriesSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategorySuccess]: (\r\n    state: State,\r\n    action: CategorySuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategoryPlaylistsSuccess]: (\r\n    state: State,\r\n    action: CategoryPlaylistsSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categoryPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.FeaturedPlaylistsSuccess]: (\r\n    state: State,\r\n    action: FeaturedPlaylistsSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    featuredPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.NewReleasesSuccess]: (\r\n    state: State,\r\n    action: NewReleasesSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    newReleaseIds: Object.keys(action.payload.albums)\r\n  })\r\n});\r\n\r\nexport const selectCategories = createSelector(\r\n  ({ browse }: CombinedState) => browse.categories,\r\n  (categories: { [categoryId: string]: Category }) => Object.values(categories)\r\n);\r\n\r\nexport function selectCategory(\r\n  state: CombinedState,\r\n  categoryId: string\r\n): Category | undefined {\r\n  return state.browse.categories[categoryId];\r\n}\r\n\r\nexport function selectCategoryPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.categoryPlaylistIds);\r\n}\r\n\r\nexport function selectFeaturedPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.featuredPlaylistIds);\r\n}\r\n\r\nexport function selectNewReleases(state: CombinedState): Album[] {\r\n  return selectAlbums(state)(state.browse.newReleaseIds);\r\n}\r\n","import {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  count: number;\r\n}\r\n\r\nconst initialState: State = {\r\n  count: 0\r\n};\r\n\r\nfunction increment(state: State): State {\r\n  return {\r\n    ...state,\r\n    count: state.count + 1\r\n  };\r\n}\r\n\r\nfunction decrement(state: State): State {\r\n  return {\r\n    ...state,\r\n    count: state.count - 1\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumRequest]: increment,\r\n  [AlbumActionType.AlbumSuccess]: decrement,\r\n  [AlbumActionType.AlbumFailure]: decrement,\r\n  [ArtistActionType.ArtistRequest]: increment,\r\n  [ArtistActionType.ArtistSuccess]: decrement,\r\n  [ArtistActionType.ArtistFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsRequest]: increment,\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.FullArtistRequest]: increment,\r\n  [ArtistActionType.FullArtistSuccess]: decrement,\r\n  [ArtistActionType.FullArtistFailure]: decrement,\r\n  [BrowseActionType.CategoriesRequest]: increment,\r\n  [BrowseActionType.CategoriesSuccess]: decrement,\r\n  [BrowseActionType.CategoriesFailure]: decrement,\r\n  [BrowseActionType.CategoryRequest]: increment,\r\n  [BrowseActionType.CategorySuccess]: decrement,\r\n  [BrowseActionType.CategoryFailure]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsRequest]: increment,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsFailure]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsRequest]: increment,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsFailure]: decrement,\r\n  [BrowseActionType.NewReleasesRequest]: increment,\r\n  [BrowseActionType.NewReleasesSuccess]: decrement,\r\n  [BrowseActionType.NewReleasesFailure]: decrement,\r\n  [PlaylistActionType.PlaylistRequest]: increment,\r\n  [PlaylistActionType.PlaylistSuccess]: decrement,\r\n  [PlaylistActionType.PlaylistFailure]: decrement,\r\n  [SearchActionType.SearchRequest]: increment,\r\n  [SearchActionType.SearchSuccess]: decrement,\r\n  [SearchActionType.SearchFailure]: decrement\r\n});\r\n\r\nexport function selectIsLoading(state: CombinedState): boolean {\r\n  return !!state.loading.count;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { Type } from \"../types\";\r\nimport { PayloadAction } from \"./types\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsPlaying, selectIsLoaded } from \"../reducers/player\";\r\nimport { selectPlayableTracks as selectAlbumTracks } from \"../reducers/albums\";\r\nimport { selectPlayableTracks as selectArtistTracks } from \"../reducers/artists\";\r\nimport { selectPlayableTracks as selectPlaylistTracks } from \"../reducers/playlists\";\r\n\r\nexport enum ActionType {\r\n  LoadCollection = \"LOAD_COLLECTION\",\r\n  LoadTrack = \"LOAD_TRACK\",\r\n  TrackLoaded = \"TRACK_LOADED\",\r\n  Play = \"PLAY\",\r\n  Playing = \"PLAYING\",\r\n  Update = \"UPDATE\",\r\n  Pause = \"PAUSE\",\r\n  Paused = \"PAUSED\",\r\n  Seek = \"SEEK\",\r\n  Seeked = \"SEEKED\",\r\n  ChangeVolume = \"CHANGE_VOLUME\",\r\n  VolumeChanged = \"VOLUME_CHANGED\",\r\n  Ended = \"ENDED\",\r\n  Next = \"NEXT\",\r\n  Previous = \"PREVIOUS\",\r\n  ToggleShuffle = \"TOGGLE_SHUFFLE\",\r\n  ToggleLoop = \"TOGGLE_LOOP\"\r\n}\r\n\r\nexport interface LoadCollectionAction\r\n  extends PayloadAction<\r\n    ActionType.LoadCollection,\r\n    {\r\n      collectionId: string;\r\n      collectionType: Type;\r\n      trackIds: string[];\r\n      trackId?: string;\r\n    }\r\n  > {}\r\n\r\nconst providers = {\r\n  [Type.Album]: selectAlbumTracks,\r\n  [Type.Artist]: selectArtistTracks,\r\n  [Type.Playlist]: selectPlaylistTracks\r\n};\r\n\r\nfunction getTrackIds(\r\n  state: State,\r\n  collectionId: string,\r\n  collectionType: Type\r\n): string[] {\r\n  return providers[collectionType](state, collectionId).map(track => track.id);\r\n}\r\n\r\nexport function loadCollection(\r\n  collectionId: string,\r\n  collectionType: Type,\r\n  trackId?: string\r\n) {\r\n  return (dispatch: Dispatch<LoadCollectionAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const trackIds = getTrackIds(state, collectionId, collectionType);\r\n    if (trackIds.length) {\r\n      dispatch({\r\n        type: ActionType.LoadCollection,\r\n        payload: {\r\n          collectionId: collectionId,\r\n          collectionType: collectionType,\r\n          trackIds,\r\n          trackId\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport interface LoadTrackAction\r\n  extends PayloadAction<ActionType.LoadTrack, { trackId: string }> {}\r\n\r\nexport function loadTrack(trackId: string) {\r\n  return (dispatch: Dispatch<LoadTrackAction>) => {\r\n    dispatch({\r\n      type: ActionType.LoadTrack,\r\n      payload: {\r\n        trackId\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface TrackLoadedAction\r\n  extends PayloadAction<ActionType.TrackLoaded, number> {}\r\n\r\nexport function trackLoaded(duration: number) {\r\n  return (dispatch: Dispatch<TrackLoadedAction>) => {\r\n    dispatch({\r\n      type: ActionType.TrackLoaded,\r\n      payload: duration\r\n    });\r\n  };\r\n}\r\n\r\nexport function playPause() {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isPlaying = selectIsPlaying(state);\r\n    dispatch({\r\n      type: isPlaying ? ActionType.Pause : ActionType.Play\r\n    });\r\n  };\r\n}\r\n\r\nexport function loadPlayPause(\r\n  collectionId: string,\r\n  collectionType: Type,\r\n  trackId?: string\r\n) {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isLoaded = selectIsLoaded(state);\r\n    if (!isLoaded(collectionId)) {\r\n      loadCollection(collectionId, collectionType, trackId)(dispatch, getState);\r\n    } else if (trackId && !isLoaded(trackId)) {\r\n      loadTrack(trackId)(dispatch);\r\n    } else {\r\n      playPause()(dispatch, getState);\r\n    }\r\n  };\r\n}\r\n\r\nexport function playing() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Playing\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UpdateAction\r\n  extends PayloadAction<ActionType.Update, number> {}\r\n\r\nexport function update(elapsed: number) {\r\n  return (dispatch: Dispatch<UpdateAction>) => {\r\n    dispatch({\r\n      type: ActionType.Update,\r\n      payload: elapsed\r\n    });\r\n  };\r\n}\r\n\r\nexport function paused() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Paused\r\n    });\r\n  };\r\n}\r\n\r\nexport interface SeekAction extends PayloadAction<ActionType.Seek, number> {}\r\n\r\nexport function seek(time: number) {\r\n  return (dispatch: Dispatch<SeekAction>) => {\r\n    dispatch({\r\n      type: ActionType.Seek,\r\n      payload: time\r\n    });\r\n  };\r\n}\r\n\r\nexport function seeked() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Seeked\r\n    });\r\n  };\r\n}\r\n\r\nexport function ended() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Ended });\r\n  };\r\n}\r\n\r\nexport function next() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Next });\r\n  };\r\n}\r\n\r\nexport function previous() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Previous });\r\n  };\r\n}\r\n\r\nexport interface ChangeVolumeAction\r\n  extends PayloadAction<\r\n    ActionType.ChangeVolume,\r\n    { volume: number; isMuted: boolean }\r\n  > {}\r\n\r\nexport function changeVolume(volume: number, isMuted: boolean) {\r\n  return (dispatch: Dispatch<ChangeVolumeAction>) => {\r\n    dispatch({\r\n      type: ActionType.ChangeVolume,\r\n      payload: {\r\n        volume,\r\n        isMuted\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function volumeChanged() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.VolumeChanged\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleShuffle() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.ToggleShuffle\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggleLoop() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.ToggleLoop\r\n    });\r\n  };\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  ActionType,\r\n  LoadCollectionAction,\r\n  LoadTrackAction,\r\n  TrackLoadedAction,\r\n  UpdateAction,\r\n  SeekAction,\r\n  ChangeVolumeAction\r\n} from \"../actions/player\";\r\nimport { State as CombinedState } from \".\";\r\nimport { Collection } from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTrack, selectTracks } from \"./tracks\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nenum PlayerState {\r\n  None = \"NONE\",\r\n  Playing = \"IS_PLAYING\",\r\n  Paused = \"IS_PAUSED\"\r\n}\r\n\r\nexport enum Command {\r\n  None = \"NONE\",\r\n  Play = \"PLAY\",\r\n  Pause = \"PAUSE\",\r\n  Seek = \"SEEK\",\r\n  ChangeVolume = \"CHANGE_VOLUME\"\r\n}\r\n\r\nexport interface State {\r\n  collections: Collection[];\r\n  trackIds: string[];\r\n  trackIndex: number;\r\n  playerState: PlayerState;\r\n  duration: number;\r\n  currentTime: number;\r\n  isShuffled: boolean;\r\n  isLooped: boolean;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n}\r\n\r\nconst initialState: State = {\r\n  collections: [],\r\n  trackIds: [],\r\n  trackIndex: 0,\r\n  playerState: PlayerState.None,\r\n  duration: 0,\r\n  currentTime: 0,\r\n  isShuffled: false,\r\n  isLooped: false,\r\n  volume: 1,\r\n  isMuted: false,\r\n  command: Command.None\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.LoadCollection]: (\r\n    state: State,\r\n    { payload }: LoadCollectionAction\r\n  ): State => {\r\n    const { collectionId, collectionType, trackIds, trackId } = payload;\r\n    return {\r\n      ...state,\r\n      collections: [\r\n        { id: collectionId, type: collectionType },\r\n        ...state.collections.filter(recent => recent.id !== collectionId)\r\n      ],\r\n      trackIds: trackIds,\r\n      trackIndex: trackId ? trackIds.indexOf(trackId) : 0,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.LoadTrack]: (state: State, { payload }: LoadTrackAction) => ({\r\n    ...state,\r\n    trackIndex: state.trackIds.indexOf(payload.trackId),\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.TrackLoaded]: (\r\n    state: State,\r\n    { payload }: TrackLoadedAction\r\n  ): State => ({\r\n    ...state,\r\n    duration: payload\r\n  }),\r\n  [ActionType.Playing]: (state: State): State => ({\r\n    ...state,\r\n    playerState: PlayerState.Playing,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Update]: (state: State, { payload }: UpdateAction): State => ({\r\n    ...state,\r\n    currentTime: payload,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Play]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Pause]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Pause\r\n  }),\r\n  [ActionType.Paused]: (state: State): State => ({\r\n    ...state,\r\n    playerState: PlayerState.Paused,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Seek]: (state: State, { payload }: SeekAction): State => ({\r\n    ...state,\r\n    currentTime: payload,\r\n    command: Command.Seek\r\n  }),\r\n  [ActionType.Seeked]: (state: State): State => ({\r\n    ...state\r\n  }),\r\n  [ActionType.Ended]: (state: State): State => {\r\n    const { trackIndex, trackIds } = state;\r\n    return trackIndex === trackIds.length - 1\r\n      ? { ...state, playerState: PlayerState.Paused }\r\n      : {\r\n          ...state,\r\n          trackIndex: trackIndex + 1,\r\n          command: Command.Play\r\n        };\r\n  },\r\n  [ActionType.Next]: (state: State): State => ({\r\n    ...state,\r\n    trackIndex: state.trackIndex + 1,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Previous]: (state: State): State => ({\r\n    ...state,\r\n    trackIndex: state.trackIndex - 1,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.ToggleShuffle]: (state: State): State => ({\r\n    ...state,\r\n    isShuffled: !state.isShuffled\r\n  }),\r\n  [ActionType.ToggleLoop]: (state: State): State => ({\r\n    ...state,\r\n    isLooped: !state.isLooped\r\n  }),\r\n  [ActionType.ChangeVolume]: (\r\n    state: State,\r\n    { payload }: ChangeVolumeAction\r\n  ): State => ({\r\n    ...state,\r\n    ...payload,\r\n    command: Command.ChangeVolume\r\n  }),\r\n  [ActionType.VolumeChanged]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.None\r\n  })\r\n});\r\n\r\nexport function selectCollection({ player }: CombinedState) {\r\n  const { collections: recents } = player;\r\n  if (recents.length) {\r\n    return recents[0];\r\n  }\r\n}\r\n\r\nexport function selectLoadedTrack(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  if (trackIds) {\r\n    return selectTrack(state, trackIds[trackIndex]);\r\n  }\r\n}\r\n\r\nexport function selectLoadedTracks(state: CombinedState) {\r\n  const { trackIds } = state.player;\r\n  return trackIds ? selectTracks(state)(trackIds) : [];\r\n}\r\n\r\nexport function selectLoadedAlbum(state: CombinedState) {\r\n  const track = selectLoadedTrack(state);\r\n  if (track) {\r\n    return selectAlbum(state, track.album);\r\n  }\r\n}\r\n\r\nexport function selectLoadedArtists(state: CombinedState) {\r\n  const track = selectLoadedTrack(state);\r\n  return track ? selectArtists(state)(track.artists) : [];\r\n}\r\n\r\nexport function selectIsLoaded(state: CombinedState) {\r\n  const { collections: recents, trackIds, trackIndex } = state.player;\r\n  return (id: string) =>\r\n    (recents.length && recents[0].id === id) ||\r\n    (!!trackIds.length && trackIds[trackIndex] === id);\r\n}\r\n\r\nexport function selectIsPlaying(state: CombinedState, id?: string) {\r\n  const { playerState } = state.player;\r\n  return (\r\n    (!id || selectIsLoaded(state)(id)) && playerState === PlayerState.Playing\r\n  );\r\n}\r\n\r\nexport function selectCanPlayPause(state: CombinedState) {\r\n  const { player } = state;\r\n  return (\r\n    player.playerState !== PlayerState.None &&\r\n    player.currentTime !== player.duration\r\n  );\r\n}\r\n\r\nexport function selectCanSeek(state: CombinedState) {\r\n  return state.player.playerState !== PlayerState.None;\r\n}\r\n\r\nexport function selectCanNext(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  return trackIds.length > 1 && trackIndex < trackIds.length - 1;\r\n}\r\n\r\nexport function selectCanPrevious(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  return trackIds.length > 1 && trackIndex > 0;\r\n}\r\n\r\nexport function selectIsShuffled({ player }: CombinedState) {\r\n  return player.isShuffled;\r\n}\r\n\r\nexport function selectIsLooped({ player }: CombinedState) {\r\n  return player.isLooped;\r\n}\r\n\r\nexport interface Times {\r\n  duration: number;\r\n  currentTime: number;\r\n}\r\n\r\nexport const selectTimes = createSelector(\r\n  ({ player }: CombinedState) => player.duration,\r\n  ({ player }: CombinedState) => player.currentTime,\r\n  (duration: number, currentTime: number) => ({\r\n    duration,\r\n    currentTime\r\n  })\r\n);\r\n\r\nexport function selectVolume({ player }: CombinedState) {\r\n  return player.volume;\r\n}\r\n\r\nexport function selectIsMuted({ player }: CombinedState) {\r\n  return player.isMuted;\r\n}\r\n\r\nexport function selectCommand(state: CombinedState): Command {\r\n  return state.player.command;\r\n}\r\n","import { Artist, Image } from \"../types\";\r\n\r\nexport function getArtistNames(artists: Artist[]): string {\r\n  return artists.map(artist => artist.name).join(\", \");\r\n}\r\n\r\nexport function getImageSource(object: {\r\n  images: Image[];\r\n}): string | undefined {\r\n  return object && object.images && object.images.length\r\n    ? object.images[0].url\r\n    : undefined;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Album, Artist, Playlist, Image, Type } from \"../types\";\r\nimport { SearchActionType as ActionType } from \"../actions\";\r\nimport {\r\n  SearchSuccessAction,\r\n  SelectAlbumAction,\r\n  SelectArtistAction,\r\n  SelectPlaylistAction\r\n} from \"../actions/search\";\r\nimport { getImageSource } from \"../utils\";\r\nimport { State as CombinedState } from \".\";\r\nimport {\r\n  Collection,\r\n  AlbumDictionary,\r\n  ArtistDictionary,\r\n  PlaylistDictionary\r\n} from \"./types\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums as selectAlbumsById } from \"./albums\";\r\nimport { selectArtists as selectArtistsById } from \"./artists\";\r\nimport { selectPlaylists as selectPlaylistsById } from \"./playlists\";\r\n\r\nexport interface State {\r\n  albumIds: string[];\r\n  artistIds: string[];\r\n  playlistIds: string[];\r\n  recents: Collection[];\r\n}\r\n\r\nconst initialState: State = {\r\n  albumIds: [],\r\n  artistIds: [],\r\n  playlistIds: [],\r\n  recents: []\r\n};\r\n\r\nfunction addRecent(\r\n  state: State,\r\n  item: { id: string; name: string; images: Image[] },\r\n  type: Type\r\n) {\r\n  return {\r\n    ...state,\r\n    recents: [\r\n      { type, id: item.id, name: item.name, imageSource: getImageSource(item) },\r\n      ...state.recents.filter(recent => recent.id !== item.id)\r\n    ]\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.SearchSuccess]: (state: State, action: SearchSuccessAction) => {\r\n    const { results } = action.payload;\r\n    const { albums, artists, playlists } = results[Object.keys(results)[0]];\r\n    return {\r\n      ...state,\r\n      albumIds: albums,\r\n      artistIds: artists,\r\n      playlistIds: playlists\r\n    };\r\n  },\r\n  [ActionType.ClearResults]: (state: State) => ({\r\n    ...state,\r\n    albumIds: [],\r\n    artistIds: [],\r\n    playlistIds: []\r\n  }),\r\n  [ActionType.SelectAlbum]: (state: State, { payload }: SelectAlbumAction) =>\r\n    addRecent(state, payload, Type.Album),\r\n  [ActionType.SelectArtist]: (state: State, { payload }: SelectArtistAction) =>\r\n    addRecent(state, payload, Type.Artist),\r\n  [ActionType.SelectPlaylist]: (\r\n    state: State,\r\n    { payload }: SelectPlaylistAction\r\n  ) => addRecent(state, payload, Type.Playlist),\r\n  [ActionType.ClearRecents]: (state: State) => ({\r\n    ...state,\r\n    recents: []\r\n  })\r\n});\r\n\r\nexport function selectAlbums(state: CombinedState): Album[] {\r\n  return selectAlbumsById(state)(state.search.albumIds);\r\n}\r\n\r\nexport function selectArtists(state: CombinedState): Artist[] {\r\n  return selectArtistsById(state)(state.search.artistIds).sort(\r\n    (x, y) => y.popularity - x.popularity\r\n  );\r\n}\r\n\r\nexport function selectPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylistsById(state)(state.search.playlistIds);\r\n}\r\n\r\nexport const selectRecents = createSelector(\r\n  ({ search }: CombinedState) => search,\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (\r\n    search: State,\r\n    albums: AlbumDictionary,\r\n    artists: ArtistDictionary,\r\n    playlists: PlaylistDictionary\r\n  ) => {\r\n    return search.recents.map(recent => {\r\n      switch (recent.type) {\r\n        case Type.Album:\r\n          return albums[recent.id];\r\n        case Type.Artist:\r\n          return artists[recent.id];\r\n        default:\r\n          return playlists[recent.id];\r\n      }\r\n    });\r\n  }\r\n);\r\n","import { UserProfile } from \"../types\";\r\nimport { FetchDispatch, PayloadAction } from \"./types\";\r\n\r\nexport enum ActionType {\r\n  UserProfileRequest = \"USER_PROFILE_REQUEST\",\r\n  UserProfileSuccess = \"USER_PROFILE_SUCCESS\",\r\n  UserProfileFailure = \"USER_PROFILE_FAILURE\"\r\n}\r\n\r\nexport interface UserProfileSuccessAction\r\n  extends PayloadAction<ActionType.UserProfileSuccess, UserProfile> {}\r\n\r\nexport function getUserProfile() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UserProfileRequest,\r\n        ActionType.UserProfileSuccess,\r\n        ActionType.UserProfileFailure\r\n      ],\r\n      path: \"me\"\r\n    });\r\n  };\r\n}\r\n","import { UserProfile } from \"../types\";\r\nimport { ActionType, UserProfileSuccessAction } from \"../actions/userProfile\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.UserProfileSuccess]: (\r\n    state: State,\r\n    action: UserProfileSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    userProfile: action.payload\r\n  })\r\n});\r\n\r\nexport function selectUserProfile(\r\n  state: CombinedState\r\n): UserProfile | undefined {\r\n  return state.userProfile.userProfile;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport albums, { State as AlbumsState } from \"./albums\";\r\nimport artists, { State as ArtistsState } from \"./artists\";\r\nimport authorization, { State as AuthorizationState } from \"./authorization\";\r\nimport browse, { State as BrowseState } from \"./browse\";\r\nimport loading, { State as LoadingState } from \"./loading\";\r\nimport player, { State as PlayerState } from \"./player\";\r\nimport playlists, { State as PlaylistsState } from \"./playlists\";\r\nimport search, { State as SearchState } from \"./search\";\r\nimport tracks, { State as TracksState } from \"./tracks\";\r\nimport userProfile, { State as UserProfileState } from \"./userProfile\";\r\n\r\nexport interface State {\r\n  albums: AlbumsState;\r\n  artists: ArtistsState;\r\n  authorization: AuthorizationState;\r\n  browse: BrowseState;\r\n  loading: LoadingState;\r\n  player: PlayerState;\r\n  playlists: PlaylistsState;\r\n  search: SearchState;\r\n  tracks: TracksState;\r\n  userProfile: UserProfileState;\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  albums,\r\n  artists,\r\n  authorization,\r\n  browse,\r\n  loading,\r\n  player,\r\n  playlists,\r\n  search,\r\n  tracks,\r\n  userProfile\r\n});\r\n","const click = (props: any) => `\r\n  overflow: hidden;\r\n  position relative;\r\n  \r\n  &::before, &::after {\r\n    content: \"\";\r\n    height: 100%;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    background: ${props.theme.background.active};\r\n    opacity: 0;\r\n    transition: opacity .2s;\r\n  }\r\n  \r\n  &:not(:disabled):hover {\r\n    color: ${props.theme.foreground.default};\r\n  }\r\n\r\n  &:not(:disabled):hover::before {\r\n    background: ${props.theme.background.hover};\r\n  }\r\n\r\n  &:not(:disabled):active::after {\r\n    opacity: 1;\r\n    transition: 0s;\r\n  }\r\n`;\r\n\r\nexport { click };\r\n","import styled from \"styled-components\";\r\nimport { click } from \"../../styles/effects\";\r\n\r\nconst ButtonBase = styled.button`\r\n  ${click}\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.dark};\r\n  }\r\n`;\r\n\r\nexport default ButtonBase;\r\n","import styled from \"../../styles/styled\";\r\nimport ButtonBase from \"./ButtonBase\";\r\n\r\nconst Button = styled(ButtonBase)`\r\n  background: ${props => props.theme.primary};\r\n  border-radius: ${props => props.theme.thickness.medium}px;\r\n  color: ${props => props.theme.foreground.default};\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: ${props => props.theme.thickness.small}px\r\n    ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${props => props.theme.fontSize.extraLarge};\r\n  font-weight: ${props => props.theme.fontWeight.bold};\r\n  margin-bottom: ${props => props.theme.thickness.medium}px;\r\n  text-align: center;\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nexport default Heading;\r\n","import React, { HTMLAttributes } from \"react\";\r\n\r\nexport enum IconType {\r\n  Loop = \"loop\",\r\n  MusicNote = \"music_note\",\r\n  MusicOff = \"music_off\",\r\n  Pause = \"pause\",\r\n  Person = \"person\",\r\n  PlayArrow = \"play_arrow\",\r\n  PlaylistPlay = \"playlist_play\",\r\n  Refresh = \"refresh\",\r\n  Search = \"search\",\r\n  Shuffle = \"shuffle\",\r\n  SkipNext = \"skip_next\",\r\n  SkipPrevious = \"skip_previous\",\r\n  ViewModule = \"view_module\",\r\n  VolumeOff = \"volume_off\",\r\n  VolumeUp = \"volume_up\",\r\n  Wifi = \"wifi\"\r\n}\r\n\r\ninterface Props {\r\n  type: IconType;\r\n}\r\n\r\nfunction Icon({ className, type }: Props & HTMLAttributes<HTMLElement>) {\r\n  return <i className={`material-icons ${className}`}>{type}</i>;\r\n}\r\n\r\nexport default Icon;\r\n","import React, { useState, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport enum ImageShape {\r\n  Square = \"SQUARE\",\r\n  Round = \"ROUND\"\r\n}\r\n\r\nconst StyledImg = styled.img<{ shape: ImageShape; isLoaded: boolean }>`\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: auto;\r\n  object-fit: cover;\r\n  opacity: ${props => (props.isLoaded ? \"1\" : \"0\")}\r\n  width: 100%;\r\n  transition: opacity .2s;\r\n`;\r\n\r\nconst Container = styled.div<{ shape: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledText = styled.span`\r\n  font-size: ${props => props.theme.thickness.extraLarge}px;\r\n  font-weight: ${props => props.theme.fontWeight.light}\r\n  left: 50%;\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\ninterface Props {\r\n  source?: string;\r\n  shape: ImageShape;\r\n}\r\n\r\nfunction Image({\r\n  className,\r\n  source,\r\n  shape\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  function handleLoad() {\r\n    setIsLoaded(true);\r\n  }\r\n\r\n  return source ? (\r\n    <StyledImg\r\n      className={className}\r\n      src={source}\r\n      shape={shape}\r\n      onLoad={handleLoad}\r\n      isLoaded={isLoaded}\r\n    />\r\n  ) : (\r\n    <Container className={className} shape={shape}>\r\n      <StyledText>?</StyledText>\r\n    </Container>\r\n  );\r\n}\r\n\r\nImage.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default Image;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonBase from \"./ButtonBase\";\r\nimport Icon, { IconType } from \"./Icon\";\r\n\r\nconst StyedButton = styled(ButtonBase)`\r\n  border-radius: 50%;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  margin: ${props => props.theme.thickness.extraSmall}px\r\n    ${props => props.theme.thickness.small}px;\r\n  padding: ${props => props.theme.thickness.extraSmall}px;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.darker};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  font-size: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nexport interface Props {\r\n  iconType: IconType;\r\n}\r\n\r\nfunction RoundButton({\r\n  iconType,\r\n  ...rest\r\n}: Props & ButtonHTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <StyedButton {...rest}>\r\n      <StyledIcon type={iconType} />\r\n    </StyedButton>\r\n  );\r\n}\r\n\r\nexport default RoundButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst Text = styled.span`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport default Text;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport RoundButton, { Props as RoundButtonProps } from \"./RoundButton\";\r\n\r\nconst StyledRoundButton = styled(RoundButton)<{ isToggled: boolean }>`\r\n  ${props => props.isToggled && `color: ${props.theme.primary};`}\r\n\r\n  &:not(:disabled):hover {\r\n    ${props => props.isToggled && `color: ${props.theme.primary};`}\r\n  }\r\n`;\r\n\r\ninterface Props extends RoundButtonProps {\r\n  isToggled: boolean;\r\n}\r\n\r\nfunction ToggleButton({\r\n  iconType,\r\n  isToggled,\r\n  ...rest\r\n}: Props & ButtonHTMLAttributes<HTMLButtonElement>) {\r\n  return (\r\n    <StyledRoundButton {...rest} iconType={iconType} isToggled={isToggled} />\r\n  );\r\n}\r\n\r\nexport default ToggleButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Icon, IconType, Text } from \"../core\";\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledText = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.large};\r\n  font-weight: ${props => props.theme.fontWeight.bold};\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst Title = () => {\r\n  return (\r\n    <StyledLink to={`${process.env.PUBLIC_URL}/browse`}>\r\n      <StyledIcon type={IconType.Wifi} />\r\n      <StyledText>Spotify</StyledText>\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst User = (props: UserProfile) => {\r\n  const { display_name } = props;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledIcon type={IconType.Person} />\r\n      <span>{display_name}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { getUserProfile } from \"../../actions/userProfile\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoggedIn } from \"../../reducers/authorization\";\r\nimport { selectUserProfile } from \"../../reducers/userProfile\";\r\nimport Title from \"./Title\";\r\nimport User from \"./User\";\r\n\r\nconst Wrapper = styled.header`\r\n  align-items: center;\r\n  display: flex;\r\n  background: ${props => props.theme.primary};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  justify-content: space-between;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  z-index: 2;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.large}px;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  userProfile?: UserProfile;\r\n  getUserProfile: () => void;\r\n}\r\n\r\nfunction Header({\r\n  className,\r\n  isLoggedIn,\r\n  userProfile,\r\n  getUserProfile\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const effect = () => {\r\n    if (isLoggedIn) {\r\n      getUserProfile();\r\n    }\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Title />\r\n      {userProfile && <User {...userProfile} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state),\r\n  userProfile: selectUserProfile(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getUserProfile\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Header);\r\n","import React from \"react\";\r\n\r\ninterface Props {}\r\n\r\nfunction Recents(props: Props) {\r\n  return <></>;\r\n}\r\n\r\nexport default Recents;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { click } from \"../../styles/effects\";\r\nimport { Icon, IconType } from \"../core\";\r\nimport Recents from \"./Recents\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${props => props.theme.background.dark};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  box-sizing: border-box;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  width: 100%;\r\n  z-index: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    box-shadow: 2px 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    padding: ${props => props.theme.thickness.medium}px 0;\r\n    width: ${props => props.theme.thickness.extraExtraLarge}px;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 0;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  ${click}\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    border-bottom: ${props => props.theme.thickness.extraExtraSmall}px solid\r\n      ${props => props.theme.primaryLight};\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.large}px;\r\n\r\n    &.active {\r\n      border: none;\r\n      border-right: ${props => props.theme.thickness.extraExtraSmall}px solid\r\n        ${props => props.theme.primaryLight};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n`;\r\n\r\nconst items = [\r\n  {\r\n    link: `${process.env.PUBLIC_URL}/browse`,\r\n    icon: IconType.ViewModule,\r\n    text: \"Browse\"\r\n  },\r\n  {\r\n    link: `${process.env.PUBLIC_URL}/search`,\r\n    icon: IconType.Search,\r\n    text: \"Search\"\r\n  }\r\n];\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <Wrapper>\r\n      <List>\r\n        {items.map(item => (\r\n          <li key={item.link}>\r\n            <StyledNavLink to={item.link}>\r\n              <StyledIcon type={item.icon} />\r\n              {item.text}\r\n            </StyledNavLink>\r\n          </li>\r\n        ))}\r\n      </List>\r\n      <Recents />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist } from \"../../types\";\r\n\r\nconst List = styled.ul`\r\n  color: ${props => props.theme.foreground.dark};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  margin-right: ${props => props.theme.thickness.extraSmall}px;\r\n\r\n  :not(:last-child)::after {\r\n    content: \",\";\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  color: ${props => props.theme.foreground.dark};\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nfunction ArtistList({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <List>\r\n      {artists.map(artist => (\r\n        <Item key={artist.id}>\r\n          <StyledLink to={`${process.env.PUBLIC_URL}/artist/${artist.id}`}>\r\n            {artist.name}\r\n          </StyledLink>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default ArtistList;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Album, Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { Image, Text } from \"../core\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport {\r\n  selectLoadedArtists,\r\n  selectLoadedAlbum,\r\n  selectLoadedTrack\r\n} from \"../../reducers/player\";\r\nimport ArtistList from \"./ArtistList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyedImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  height: 75px;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  width: 75px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  track?: Track;\r\n  album?: Album;\r\n  artists: Artist[];\r\n}\r\n\r\nfunction TrackInfos({\r\n  className,\r\n  track,\r\n  album,\r\n  artists\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <Wrapper className={className}>\r\n      {album && (\r\n        <Link to={`${process.env.PUBLIC_URL}/album/${album.id}`}>\r\n          <StyedImage source={getImageSource(album)} />\r\n        </Link>\r\n      )}\r\n      <Container>\r\n        {track && <Title>{track.name}</Title>}\r\n        <ArtistList artists={artists} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  track: selectLoadedTrack(state),\r\n  album: selectLoadedAlbum(state),\r\n  artists: selectLoadedArtists(state)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(TrackInfos);\r\n","import React, { useEffect, useRef, SyntheticEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectLoadedTrack,\r\n  Times,\r\n  selectTimes,\r\n  selectVolume,\r\n  selectIsMuted,\r\n  Command,\r\n  selectCommand\r\n} from \"../../reducers/player\";\r\nimport {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n} from \"../../actions/player\";\r\n\r\ninterface Props {\r\n  loadedTrack?: Track;\r\n  times: Times;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n  trackLoaded: (duration: number) => void;\r\n  playing: () => void;\r\n  update: (elaped: number) => void;\r\n  paused: () => void;\r\n  seeked: () => void;\r\n  volumeChanged: () => void;\r\n  ended: () => void;\r\n}\r\n\r\nfunction Audio({\r\n  loadedTrack,\r\n  times,\r\n  volume,\r\n  isMuted,\r\n  command,\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n}: Props) {\r\n  const audio = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    const currentAudio = audio.current;\r\n\r\n    if (currentAudio) {\r\n      const { currentTime } = times;\r\n\r\n      switch (command) {\r\n        case Command.Play:\r\n          currentAudio.play();\r\n          break;\r\n        case Command.Pause:\r\n          currentAudio.pause();\r\n          break;\r\n        case Command.Seek:\r\n          currentAudio.currentTime = currentTime;\r\n          break;\r\n        case Command.ChangeVolume:\r\n          currentAudio.volume = isMuted ? 0 : volume;\r\n      }\r\n    }\r\n  });\r\n\r\n  function handleLoadedMetadata(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    trackLoaded(target.duration);\r\n  }\r\n\r\n  function handleTimeUpdate(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    update(target.currentTime);\r\n  }\r\n\r\n  function handlePause(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    if (target.currentTime !== target.duration) {\r\n      paused();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <audio\r\n      ref={audio}\r\n      src={loadedTrack && loadedTrack.preview_url}\r\n      onLoadedMetadata={handleLoadedMetadata}\r\n      onPlay={playing}\r\n      onTimeUpdate={handleTimeUpdate}\r\n      onPause={handlePause}\r\n      onSeeked={seeked}\r\n      onVolumeChange={volumeChanged}\r\n      onEnded={ended}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  loadedTrack: selectLoadedTrack(state),\r\n  times: selectTimes(state),\r\n  volume: selectVolume(state),\r\n  isMuted: selectIsMuted(state),\r\n  command: selectCommand(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Audio);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { State } from \"../../reducers\";\r\nimport { IconType, RoundButton, ToggleButton } from \"../core\";\r\nimport {\r\n  selectCanNext,\r\n  selectCanPrevious,\r\n  selectCanPlayPause,\r\n  selectIsLooped,\r\n  selectIsPlaying,\r\n  selectIsShuffled\r\n} from \"../../reducers/player\";\r\nimport {\r\n  next,\r\n  previous,\r\n  toggleLoop,\r\n  playPause,\r\n  toggleShuffle\r\n} from \"../../actions/player\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst ShuffleButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Shuffle\r\n}))``;\r\n\r\nconst PreviousButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.SkipPrevious\r\n}))``;\r\n\r\ninterface PlayButtonProps {\r\n  isPlaying: boolean;\r\n}\r\n\r\nconst PlayButton = styled(RoundButton).attrs<\r\n  PlayButtonProps,\r\n  { iconType: IconType }\r\n>(({ isPlaying }) => ({\r\n  iconType: isPlaying ? IconType.Pause : IconType.PlayArrow\r\n}))<PlayButtonProps>`\r\n  transform: scale(1.25);\r\n`;\r\n\r\nconst NextButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.SkipNext\r\n}))``;\r\n\r\nconst LoopButton = styled(ToggleButton).attrs(() => ({\r\n  iconType: IconType.Loop\r\n}))``;\r\n\r\ninterface Props {\r\n  isPlaying: boolean;\r\n  isShuffled: boolean;\r\n  canPrevious: boolean;\r\n  canPlayPause: boolean;\r\n  canNext: boolean;\r\n  isLooped: boolean;\r\n  toggleShuffle: () => void;\r\n  previous: () => void;\r\n  playPause: () => void;\r\n  next: () => void;\r\n  toggleLoop: () => void;\r\n}\r\n\r\nfunction Controls({\r\n  isPlaying,\r\n  isShuffled,\r\n  canPrevious,\r\n  canPlayPause,\r\n  canNext,\r\n  isLooped,\r\n  toggleShuffle,\r\n  previous,\r\n  playPause,\r\n  next,\r\n  toggleLoop\r\n}: Props) {\r\n  return (\r\n    <Wrapper>\r\n      <ShuffleButton onClick={toggleShuffle} isToggled={isShuffled} />\r\n      <PreviousButton disabled={!canPrevious} onClick={previous} />\r\n\r\n      <PlayButton\r\n        disabled={!canPlayPause}\r\n        onClick={playPause}\r\n        isPlaying={isPlaying}\r\n      />\r\n\r\n      <NextButton disabled={!canNext} onClick={next} />\r\n      <LoopButton onClick={toggleLoop} isToggled={isLooped} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isPlaying: selectIsPlaying(state),\r\n  isShuffled: selectIsShuffled(state),\r\n  canPrevious: selectCanPrevious(state),\r\n  canPlayPause: selectCanPlayPause(state),\r\n  canNext: selectCanNext(state),\r\n  isLooped: selectIsLooped(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  toggleShuffle,\r\n  previous,\r\n  playPause,\r\n  next,\r\n  toggleLoop\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Controls);\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div<{ isDisabled: boolean }>`\r\n  border-radius: ${props => props.theme.thickness.extraExtraSmall}px;\r\n  cursor: ${props => (props.isDisabled ? \"default\" : \"pointer\")};\r\n  padding: 0 ${props => props.theme.thickness.small}px\r\n  width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.medium}px;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst Left = styled.div.attrs<{ width: number }>(props => ({\r\n  style: { width: `${props.width * 100}%` }\r\n}))<{ width: number }>`\r\n  background: ${props => props.theme.primaryLight};\r\n  border-radius: ${props => props.theme.thickness.extraExtraSmall}px 0 0\r\n    ${props => props.theme.thickness.extraExtraSmall}px;\r\n  height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n`;\r\n\r\nconst Thumb = styled.div.attrs<{ position: number }>(({ position }) => ({\r\n  style: { left: `${position * 100}%` }\r\n}))<{ position: number }>`\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  height: ${props => props.theme.thickness.medium}px;\r\n  margin-left: -12.5px;\r\n  position: absolute;\r\n  visibility: hidden;\r\n  width: ${props => props.theme.thickness.medium}px;\r\n  z-index: 1;\r\n  transition: left 0.2s;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.default};\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    content: \"\";\r\n    height: 50%;\r\n    left: 25%;\r\n    position: absolute;\r\n    top: 25%;\r\n    width: 50%;\r\n  }\r\n\r\n  ${Wrapper}:hover & {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div.attrs<{ width: number }>(props => ({\r\n  style: { width: `${100 - props.width * 100}%` }\r\n}))<{ width: number }>`\r\n  background: ${props => props.theme.foreground.dark};\r\n  border-radius: 0 ${props => props.theme.thickness.extraExtraSmall}px\r\n    ${props => props.theme.thickness.extraExtraSmall}px 0;\r\n  height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  className?: string;\r\n  value: number;\r\n  canChange: boolean;\r\n  onChange: (value: number) => void;\r\n}\r\n\r\nfunction Slider({ className, value, canChange, onChange }: Props) {\r\n  const [isDown, setIsDown] = useState(false);\r\n  const [localValue, setLocalValue] = useState(0);\r\n\r\n  const wrapper = useRef<HTMLDivElement>(null);\r\n  const thumb = useRef<HTMLDivElement>(null);\r\n\r\n  function getValue(x: number) {\r\n    const currentWrapper = wrapper.current;\r\n    const currentTHunb = thumb.current;\r\n    if (!currentWrapper || !currentTHunb) {\r\n      return 0;\r\n    }\r\n\r\n    const clientRect = currentWrapper.getBoundingClientRect();\r\n    let value = (x - clientRect.left) / currentWrapper.clientWidth;\r\n    if (value < 0) {\r\n      value = 0;\r\n    } else if (value > 1) {\r\n      value = 1;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleMouseDown(event: React.MouseEvent<HTMLElement>) {\r\n    if (!canChange) {\r\n      return;\r\n    }\r\n\r\n    setIsDown(true);\r\n    setLocalValue(getValue(event.pageX));\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n  }\r\n\r\n  function handleMouseMove(event: MouseEvent) {\r\n    setLocalValue(getValue(event.pageX));\r\n  }\r\n\r\n  function handleMouseUp(event: MouseEvent) {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    setIsDown(false);\r\n    const value = getValue(event.pageX);\r\n    onChange(value);\r\n  }\r\n\r\n  function getCurrentValue() {\r\n    return isDown ? localValue : value;\r\n  }\r\n\r\n  const currentValue = getCurrentValue();\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapper}\r\n      onMouseDown={handleMouseDown}\r\n      isDisabled={!canChange}\r\n      className={className}\r\n    >\r\n      <Container>\r\n        <Left width={currentValue} />\r\n        {canChange && <Thumb ref={thumb} position={currentValue} />}\r\n        <Right width={currentValue} />\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nSlider.defaultProps = {\r\n  value: 0,\r\n  canChange: true,\r\n  onChange: () => {}\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-cotent: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProgressTime = styled.div`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.fontSize.small};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n`;\r\n\r\ninterface Props {\r\n  duration: number;\r\n  currentTime: number;\r\n  canSeek: boolean;\r\n  onSeek: (time: number) => void;\r\n}\r\n\r\nfunction Playback({ duration, currentTime, canSeek, onSeek }: Props) {\r\n  function renderTime(seconds: number) {\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.round(seconds);\r\n\r\n    return (\r\n      <ProgressTime>\r\n        {`${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`}\r\n      </ProgressTime>\r\n    );\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    onSeek(duration * value);\r\n  }\r\n\r\n  const progress = duration ? currentTime / duration : 0;\r\n\r\n  return (\r\n    <Wrapper>\r\n      {renderTime(currentTime)}\r\n      <Slider value={progress} onChange={handleChange} canChange={canSeek} />\r\n      {renderTime(duration)}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Playback;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { changeVolume } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectVolume, selectIsMuted } from \"../../reducers/player\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\ninterface VolumeButtonProps {\r\n  isMuted: boolean;\r\n}\r\n\r\nconst VolumeButton = styled(RoundButton).attrs<\r\n  VolumeButtonProps,\r\n  { iconType: IconType }\r\n>(({ isMuted }) => ({\r\n  iconType: isMuted ? IconType.VolumeOff : IconType.VolumeUp\r\n}))<VolumeButtonProps>`\r\n  margin: 0;\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\ninterface Props {\r\n  volume: number;\r\n  isMuted: boolean;\r\n  changeVolume: (volume: number, isMuted: boolean) => void;\r\n}\r\n\r\nfunction Volume({ volume, isMuted, changeVolume }: Props) {\r\n  function handleClick() {\r\n    changeVolume(volume, !isMuted);\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    changeVolume(value, false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <VolumeButton isMuted={isMuted || !volume} onClick={handleClick} />\r\n      <StyledSlider value={isMuted ? 0 : volume} onChange={handleChange} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  volume: selectVolume(state),\r\n  isMuted: selectIsMuted(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  changeVolume\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Volume);\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { State } from \"../../reducers\";\r\nimport { Times, selectTimes, selectCanSeek } from \"../../reducers/player\";\r\nimport { seek } from \"../../actions/player\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport TrackInfos from \"./TrackInfos\";\r\nimport Audio from \"./Audio\";\r\nimport Controls from \"./Controls\";\r\nimport Playback from \"./Playback\";\r\nimport Volume from \"./Volume\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  background: ${props => props.theme.background.light};\r\n  box-sizing: border-box;\r\n  box-shadow: 0 -2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.extraLarge}px;\r\n  padding: ${props => props.theme.thickness.small}px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst ThirdWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n`;\r\n\r\nconst LeftWrapper = styled(ThirdWrapper)`\r\n  display: none;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    display: block;\r\n    min-width: 25%;\r\n  }\r\n`;\r\n\r\nconst CenterWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    padding: 0 ${props => props.theme.thickness.small}px;\r\n    max-width: 50%;\r\n  }\r\n`;\r\n\r\nconst RightWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: none;\r\n  justify-content: flex-end;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    display: flex;\r\n    min-width: 25%;\r\n  }\r\n`;\r\n\r\nconst QueueButton = styled(RoundButton).attrs(() => ({\r\n  iconType: IconType.PlaylistPlay\r\n}))`\r\n  flex-shrink: 0;\r\n  margin: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  times: Times;\r\n  canSeek: boolean;\r\n  seek: (time: number) => void;\r\n}\r\n\r\nfunction Player({\r\n  className,\r\n  history,\r\n  times,\r\n  canSeek,\r\n  seek\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  function handleQueueClick() {\r\n    history.push(`${process.env.PUBLIC_URL}/queue`);\r\n  }\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <LeftWrapper>\r\n        <TrackInfos />\r\n      </LeftWrapper>\r\n\r\n      <CenterWrapper>\r\n        <Controls />\r\n\r\n        <Playback\r\n          duration={times.duration}\r\n          currentTime={times.currentTime}\r\n          canSeek={canSeek}\r\n          onSeek={seek}\r\n        />\r\n      </CenterWrapper>\r\n\r\n      <RightWrapper>\r\n        <QueueButton onClick={handleQueueClick} />\r\n        <Volume />\r\n      </RightWrapper>\r\n\r\n      <Audio />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  times: selectTimes(state),\r\n  canSeek: selectCanSeek(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  seek\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Player)\r\n);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nfunction DefaultRoute({ from, to }: Props) {\r\n  return <Route exact path={from} render={() => <Redirect to={to} />} />;\r\n}\r\n\r\nexport default DefaultRoute;\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoggedIn } from \"../reducers/authorization\";\r\n\r\ninterface Props extends RouteProps {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nfunction PrivateRoute({\r\n  component: Component,\r\n  isLoggedIn,\r\n  ...rest\r\n}: Props & RouteComponentProps) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? (\r\n          Component && <Component {...props} />\r\n        ) : (\r\n          <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    null\r\n  )(PrivateRoute)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Heading } from \"../core\";\r\nimport { logInRedirect } from \"../../utils/authorization\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\nfunction LogIn() {\r\n  function handleCLick() {\r\n    logInRedirect();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>You are not logged in.</Heading>\r\n      <StyledButton onClick={handleCLick}>Log In</StyledButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Image, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport { Cover } from \"./types\";\r\n\r\nconst StyledButton = styled(ButtonBase)<{ shape: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  margin-bottom: ${props => props.theme.thickness.small}px;\r\n  padding-top: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledImge = styled(Image)`\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\ninterface Props {\r\n  cover: Cover;\r\n  onClick: (coverId: string) => void;\r\n}\r\n\r\nfunction CoverItem({ cover, onClick }: Props) {\r\n  function handleClick() {\r\n    onClick(cover.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledButton\r\n        onClick={handleClick}\r\n        shape={cover.imageShape || ImageShape.Square}\r\n      >\r\n        <StyledImge source={cover.imageSource} />\r\n      </StyledButton>\r\n      <Title>{cover.title}</Title>\r\n      {cover.subTitle && <SubTitle>{cover.subTitle}</SubTitle>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoverItem;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport { Cover } from \"./types\";\r\nimport CoverItem from \"./CoverItem\";\r\n\r\nconst StyledList = styled.ul`\r\n  align-content: flex-start;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -12.5px;\r\n`;\r\n\r\nfunction splitWidth(times: number) {\r\n  return `calc((100% - ${times * 25}px) / ${times})`;\r\n}\r\n\r\nconst StyledItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: ${props => props.theme.thickness.small}px;\r\n  width: ${splitWidth(2)};\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    width: ${splitWidth(3)};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    width: ${splitWidth(6)};\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  className?: string;\r\n  covers: Cover[];\r\n  shape: ImageShape;\r\n  onClick: (id: string) => void;\r\n}\r\n\r\nfunction CoverList({ className, covers, onClick }: Props) {\r\n  return (\r\n    <StyledList className={className}>\r\n      {covers.map(cover => (\r\n        <StyledItem key={cover.id}>\r\n          <CoverItem cover={cover} onClick={onClick} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nCoverList.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default CoverList;\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category } from \"../../types\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  categories: Category[];\r\n}\r\n\r\nfunction CategoryCovers({ history, categories }: Props) {\r\n  function handleClick(categoryId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/category/${categoryId}`);\r\n  }\r\n\r\n  const covers = getCovers(categories);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(categories: Category[]): Cover[] {\r\n  return categories.map(category => ({\r\n    id: category.id,\r\n    imageSource:\r\n      category.icons && category.icons.length\r\n        ? category.icons[0].url\r\n        : undefined,\r\n    title: category.name\r\n  }));\r\n}\r\n\r\nexport default withRouter(CategoryCovers);\r\n","import React, { ComponentType, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport styled from \"../styles/styled\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoading } from \"../reducers/loading\";\r\n\r\nconst Fader = styled.div<{ isLoading: boolean }>`\r\n  opacity: ${props => (props.isLoading ? \"0\" : \"1\")};\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n`;\r\n\r\nconst Loader = styled.div<{ isLoading: boolean }>`\r\n  height: 5px;\r\n  left: 0;\r\n  position: absolute;\r\n  opacity: ${props => (props.isLoading ? \"1\" : \"0\")};\r\n  top: 0;\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n  width: 100%;\r\n  z-index: 2;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.dark};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    animation: transform 2s linear infinite;\r\n    background: ${props => props.theme.foreground.default};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    transform-origin: 0;\r\n    width: 100%;\r\n\r\n    @keyframes transform {\r\n      0% {\r\n        left: 0;\r\n        width: 0;\r\n      }\r\n      50% {\r\n        left: 0;\r\n        width: 100%;\r\n      }\r\n      100% {\r\n        left: 100%;\r\n        width: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst withLoader = (WrappedComponent: ComponentType<any>) => {\r\n  const WithLoader = ({ match, isLoading, ...rest }: any) => {\r\n    const [prevUrl, setPrevUrl] = useState(match.url);\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setHasLoaded(!isLoading);\r\n    }, [isLoading]);\r\n\r\n    if (prevUrl !== match.url) {\r\n      setHasLoaded(false);\r\n      setPrevUrl(match.url);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Loader isLoading={!hasLoaded || isLoading} />\r\n        <Fader isLoading={!hasLoaded || isLoading}>\r\n          <WrappedComponent {...rest} />\r\n        </Fader>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const mapState = (state: State) => ({\r\n    isLoading: selectIsLoading(state)\r\n  });\r\n\r\n  return withRouter(\r\n    //@ts-ignore\r\n    connect(\r\n      mapState,\r\n      null\r\n    )(WithLoader)\r\n  );\r\n};\r\n\r\nexport default withLoader;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Category } from \"../../types\";\r\nimport { getCategories } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategories } from \"../../reducers/browse\";\r\nimport CategoryCovers from \"../covers/CategoryCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  categories: Category[];\r\n  getCategories: () => void;\r\n}\r\n\r\nfunction Categories({ categories, getCategories }: Props) {\r\n  useEffect(getCategories, []);\r\n\r\n  return <CategoryCovers categories={categories} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  categories: selectCategories(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getCategories: getCategories\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Categories)\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectAlbumArtists } from \"../../reducers/albums\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  albums: Album[];\r\n  selectAbumArtists: (albumId: string) => Artist[];\r\n  onSelect?: (albumId: string) => void;\r\n}\r\n\r\nfunction AlbumCovers({ history, albums, selectAbumArtists, onSelect }: Props) {\r\n  function handleClick(albumId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/album/${albumId}`);\r\n    onSelect && onSelect(albumId);\r\n  }\r\n\r\n  const covers = getCovers(albums, selectAbumArtists);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(\r\n  albums: Album[],\r\n  selectAlbumArtists: (albumId: string) => Artist[]\r\n): Cover[] {\r\n  return albums.map(album => {\r\n    const artists = selectAlbumArtists(album.id);\r\n    return {\r\n      id: album.id,\r\n      imageSource: getImageSource(album),\r\n      title: album.name,\r\n      subTitle: getArtistNames(artists)\r\n    };\r\n  });\r\n}\r\n\r\nconst mapDispatch = (state: State) => ({\r\n  selectAbumArtists: selectAlbumArtists(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapDispatch,\r\n    null\r\n  )(AlbumCovers)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Album } from \"../../types\";\r\nimport { getNewReleases } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectNewReleases } from \"../../reducers/browse\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  getAlbums: () => void;\r\n}\r\n\r\nfunction NewReleases({ albums, getAlbums }: Props) {\r\n  useEffect(getAlbums, []);\r\n\r\n  return <AlbumCovers albums={albums} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectNewReleases(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getAlbums: getNewReleases\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(NewReleases)\r\n);\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  playlists: Playlist[];\r\n  onSelect?: (playlistId: string) => void;\r\n}\r\n\r\nfunction PlayistCovers({ history, playlists, onSelect }: Props) {\r\n  function handleClick(playlistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/playlist/${playlistId}`);\r\n    onSelect && onSelect(playlistId);\r\n  }\r\n\r\n  const covers = getCovers(playlists);\r\n  return <CoverList covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nfunction getCovers(playlists: Playlist[]): Cover[] {\r\n  return playlists.map(playlist => ({\r\n    id: playlist.id,\r\n    imageSource: getImageSource(playlist),\r\n    title: playlist.name,\r\n    subTitle: playlist.owner.display_name\r\n  }));\r\n}\r\n\r\nexport default withRouter(PlayistCovers);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getFeaturedPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectFeaturedPlaylists } from \"../../reducers/browse\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Props {\r\n  playlists: Playlist[];\r\n  getPlaylists: () => void;\r\n}\r\n\r\nfunction FeaturedPlaylists({ playlists, getPlaylists }: Props) {\r\n  useEffect(getPlaylists, []);\r\n\r\n  return <PlaylistCovers playlists={playlists} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  playlists: selectFeaturedPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getPlaylists: getFeaturedPlaylists\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(FeaturedPlaylists)\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  RouteComponentProps,\r\n  NavLink,\r\n  Route,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport Categories from \"./Categories\";\r\nimport NewReleases from \"./NewReleases\";\r\nimport FeaturedPlaylists from \"./FeaturedPlaylists\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  justify-content: center;\r\n  margin-bottom: 0;\r\n  position: relative;\r\n  top: -25px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    margin-bottom: ${props => props.theme.thickness.medium}px;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: ${props => props.theme.thickness.large}px;\r\n  justify-content: center;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active::after {\r\n    background: ${props => props.theme.primaryLight};\r\n    bottom: 0;\r\n    content: \"\";\r\n    height: ${props => props.theme.thickness.extraExtraSmall}px;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, 0);\r\n    width: ${props => props.theme.thickness.large}px;\r\n  }\r\n`;\r\n\r\nconst links = [\r\n  {\r\n    url: \"categories\",\r\n    label: \"Categories\"\r\n  },\r\n  {\r\n    url: \"new-releases\",\r\n    label: \"New Releases\"\r\n  },\r\n  {\r\n    url: \"featured-playists\",\r\n    label: \"Featured Playlists\"\r\n  }\r\n];\r\n\r\nfunction Browse({ match }: RouteComponentProps) {\r\n  return (\r\n    <Wrapper>\r\n      <StyledList>\r\n        {links.map(link => (\r\n          <li key={link.url}>\r\n            <StyledNavLink to={`${match.url}/${link.url}`}>\r\n              {link.label}\r\n            </StyledNavLink>\r\n          </li>\r\n        ))}\r\n      </StyledList>\r\n\r\n      <DefaultRoute from={`${match.path}`} to={`${match.path}/categories`} />\r\n      <Route exact path={`${match.path}/categories`} component={Categories} />\r\n      <Route path={`${match.path}/new-releases`} component={NewReleases} />\r\n      <Route\r\n        path={`${match.path}/featured-playists`}\r\n        component={FeaturedPlaylists}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default withRouter(Browse);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category, Playlist } from \"../../types\";\r\nimport { getCategory, getCategoryPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategory, selectCategoryPlaylists } from \"../../reducers/browse\";\r\nimport { Heading } from \"../core\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Params {\r\n  categoryId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  category?: Category;\r\n  playlists: Playlist[];\r\n  getCategory: (categoryId: string) => void;\r\n  getPlaylists: (categoryId: string) => void;\r\n}\r\n\r\nfunction CategoryPlaylists({\r\n  match,\r\n  category,\r\n  playlists,\r\n  getCategory,\r\n  getPlaylists\r\n}: Props) {\r\n  const effect = () => {\r\n    const { categoryId } = match.params;\r\n    if (!category) {\r\n      getCategory(categoryId);\r\n    }\r\n    getPlaylists(categoryId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <div>\r\n      <Heading>{category && category.name}</Heading>\r\n      <PlaylistCovers playlists={playlists} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, { match }: Props) => {\r\n  const categoryId = match.params.categoryId;\r\n\r\n  return {\r\n    category: selectCategory(state, categoryId),\r\n    playlists: selectCategoryPlaylists(state)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getCategory: (categoryId: string) => getCategory(categoryId),\r\n  getPlaylists: (categoryId: string) => getCategoryPlaylists(categoryId)\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(CategoryPlaylists)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport { capitalize } from \"lodash\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist, Type } from \"../../types\";\r\nimport { clearRecents } from \"../../actions/search\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectRecents } from \"../../reducers/search\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { Button, Heading } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport CoverList from \"../covers/CoverList\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledCoverList = styled(CoverList)`\r\n  margin-bottom: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst ClearButton = styled(Button).attrs(() => ({\r\n  children: \"Clear\"\r\n}))`\r\n  align-self: center;\r\n`;\r\n\r\ninterface Props extends RouteComponentProps {\r\n  recents: (Album | Artist | Playlist)[];\r\n  clearRecents: () => void;\r\n}\r\n\r\nfunction Recents({ history, recents, clearRecents }: Props) {\r\n  function handleClick(id: string) {\r\n    const recent = recents.find(recent => recent.id === id);\r\n    if (recent) {\r\n      history.push(\r\n        `${process.env.PUBLIC_URL}/${recent.type.toLowerCase()}/${recent.id}`\r\n      );\r\n    }\r\n  }\r\n\r\n  const covers = getCovers(recents);\r\n  return (\r\n    <Wrapper>\r\n      {!!recents.length && <Heading>Recent searches</Heading>}\r\n      <StyledCoverList covers={covers} onClick={handleClick} />\r\n      {!!recents.length && <ClearButton onClick={clearRecents} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nfunction getCovers(recents: (Album | Artist | Playlist)[]) {\r\n  return recents.map(recent => ({\r\n    id: recent.id,\r\n    imageSource: getImageSource(recent),\r\n    imageShape:\r\n      recent.type === Type.Artist ? ImageShape.Round : ImageShape.Square,\r\n    title: recent.name,\r\n    subTitle: capitalize(recent.type)\r\n  }));\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  recents: selectRecents(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  clearRecents\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Recents)\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { Album, Artist, Playlist } from \"../types\";\r\nimport { EntitiesAction, FetchDispatch, PayloadAction } from \"./types\";\r\nimport { SearchActionType as ActionType } from \".\";\r\nimport { Schemas } from \"./schemas\";\r\nimport { State } from \"../reducers\";\r\nimport { selectAlbum as selectAlbumById } from \"../reducers/albums\";\r\nimport { selectArtist as selectArtistById } from \"../reducers/artists\";\r\nimport { selectPlaylist as selectPlaylistById } from \"../reducers/playlists\";\r\n\r\nexport interface SearchSuccessAction\r\n  extends EntitiesAction<ActionType.SearchSuccess> {}\r\n\r\nexport function search(query: string) {\r\n  if (query) {\r\n    return (dispatch: FetchDispatch) => {\r\n      const encoded = encodeURIComponent(query);\r\n      dispatch({\r\n        types: [\r\n          ActionType.SearchRequest,\r\n          ActionType.SearchSuccess,\r\n          ActionType.SearchFailure\r\n        ],\r\n        path: `search?q=${encoded}*&type=album,artist,playlist`,\r\n        schema: Schemas.Results\r\n      });\r\n    };\r\n  } else {\r\n    return (dispatch: Dispatch) => {\r\n      dispatch({\r\n        type: ActionType.ClearResults\r\n      });\r\n    };\r\n  }\r\n}\r\n\r\nexport interface SelectAlbumAction\r\n  extends PayloadAction<ActionType.SelectAlbum, Album> {}\r\n\r\nexport function selectAlbum(albumId: string) {\r\n  return (dispatch: Dispatch<SelectAlbumAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const album = selectAlbumById(state, albumId);\r\n    dispatch({ type: ActionType.SelectAlbum, payload: album });\r\n  };\r\n}\r\n\r\nexport interface SelectArtistAction\r\n  extends PayloadAction<ActionType.SelectArtist, Artist> {}\r\n\r\nexport function selectArtist(artistId: string) {\r\n  return (dispatch: Dispatch<SelectArtistAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const artist = selectArtistById(state, artistId);\r\n    dispatch({ type: ActionType.SelectArtist, payload: artist });\r\n  };\r\n}\r\n\r\nexport interface SelectPlaylistAction\r\n  extends PayloadAction<ActionType.SelectPlaylist, Playlist> {}\r\n\r\nexport function selectPlaylist(playlistId: string) {\r\n  return (dispatch: Dispatch<SelectPlaylistAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const playlist = selectPlaylistById(state, playlistId);\r\n    dispatch({ type: ActionType.SelectPlaylist, payload: playlist });\r\n  };\r\n}\r\n\r\nexport function clearRecents() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.ClearRecents });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Artist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport { Cover } from \"./types\";\r\nimport CoverList from \"./CoverList\";\r\n\r\ninterface Props extends RouteComponentProps {\r\n  artists: Artist[];\r\n  onSelect?: (artistId: string) => void;\r\n}\r\n\r\nfunction ArtistCovers({ history, artists, onSelect }: Props) {\r\n  function handleClick(artistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/artist/${artistId}`);\r\n    onSelect && onSelect(artistId);\r\n  }\r\n\r\n  const covers = getCovers(artists);\r\n  return (\r\n    <CoverList covers={covers} shape={ImageShape.Round} onClick={handleClick} />\r\n  );\r\n}\r\n\r\nfunction getCovers(artists: Artist[]): Cover[] {\r\n  return artists.map(artist => ({\r\n    id: artist.id,\r\n    imageSource: getImageSource(artist),\r\n    imageShape: ImageShape.Round,\r\n    title: artist.name\r\n  }));\r\n}\r\n\r\nexport default withRouter(ArtistCovers);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport {\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n} from \"../../actions/search\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectAlbums,\r\n  selectArtists,\r\n  selectPlaylists\r\n} from \"../../reducers/search\";\r\nimport { Heading } from \"../core\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: ${props => props.theme.thickness.large}px;\r\n`;\r\n\r\ninterface ArtistsProps {\r\n  artists: Artist[];\r\n  selectArtist: (artistId: string) => void;\r\n}\r\n\r\nfunction Artists({ artists, selectArtist }: ArtistsProps) {\r\n  return (\r\n    <>\r\n      {artists.length > 0 && (\r\n        <Section>\r\n          <Heading>Artists</Heading>\r\n          <ArtistCovers artists={artists} onSelect={selectArtist} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface AlbumsProps {\r\n  albums: Album[];\r\n  selectAlbum: (albumId: string) => void;\r\n}\r\n\r\nfunction Albums({ albums, selectAlbum }: AlbumsProps) {\r\n  return (\r\n    <>\r\n      {albums.length > 0 && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} onSelect={selectAlbum} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface PlaylistsProps {\r\n  playlists: Playlist[];\r\n  selectPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction Playlists({ playlists, selectPlaylist }: PlaylistsProps) {\r\n  return (\r\n    <>\r\n      {playlists.length > 0 && (\r\n        <Section>\r\n          <Heading>Playlists</Heading>\r\n          <PlaylistCovers playlists={playlists} onSelect={selectPlaylist} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  selectAlbum: (albumId: string) => void;\r\n  selectArtist: (artistId: string) => void;\r\n  selectPlaylist: (playlistId: string) => void;\r\n}\r\n\r\nfunction Results({\r\n  albums,\r\n  artists,\r\n  playlists,\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n}: Props) {\r\n  return artists.length || albums.length || playlists.length ? (\r\n    <>\r\n      <Artists artists={artists} selectArtist={selectArtist} />\r\n      <Albums albums={albums} selectAlbum={selectAlbum} />\r\n      <Playlists playlists={playlists} selectPlaylist={selectPlaylist} />\r\n    </>\r\n  ) : (\r\n    <Heading>No Results found.</Heading>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectAlbums(state),\r\n  artists: selectArtists(state),\r\n  playlists: selectPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  selectAlbum,\r\n  selectArtist,\r\n  selectPlaylist\r\n};\r\n\r\nexport default withLoader(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Results)\r\n);\r\n","import _ from \"lodash\";\r\nimport React, { useState, ChangeEvent, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { search } from \"../../actions/search\";\r\nimport Recents from \"./Recents\";\r\nimport Results from \"./Results\";\r\n\r\nconst StyledInput = styled.input`\r\n  background: ${props => props.theme.background.light}\r\n  border: none;\r\n  border-radius: ${props => props.theme.thickness.medium}px;\r\n  caret-color: ${props => props.theme.primaryLight}\r\n  color: ${props => props.theme.foreground.default}\r\n  font-size: ${props => props.theme.fontSize.extraLarge}\r\n  font-weight: ${props => props.theme.fontWeight.light}\r\n  height: ${props => props.theme.thickness.large}px;\r\n  margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n  padding: 0 ${props => props.theme.thickness.medium}px;\r\n  width: calc(100% - ${props => props.theme.thickness.large}px);\r\n`;\r\n\r\ninterface Params {\r\n  query: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  isLoading: boolean;\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  search: (query: string) => void;\r\n}\r\n\r\nlet debounced: (query: string) => void;\r\n\r\nfunction Search({ history, match, search }: Props) {\r\n  const { query } = match.params;\r\n  const [value, setValue] = useState(query || \"\");\r\n\r\n  const effect = () => {\r\n    debounced = _.debounce((query: string) => {\r\n      history.push(`${process.env.PUBLIC_URL}/search${query && \"/\"}${query}`);\r\n      search(query);\r\n    }, 500);\r\n    if (value) {\r\n      search(value);\r\n    }\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { value } = event.target;\r\n    setValue(value);\r\n    debounced(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledInput\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n        autoFocus\r\n      />\r\n      {query ? <Results /> : <Recents />}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatch = {\r\n  search\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatch\r\n  )(Search)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Image, Text } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 1;\r\n  justify-content: center;\r\n  margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    margin: 0 ${props => props.theme.thickness.medium}px 0 0;\r\n  }\r\n`;\r\n\r\nconst length = 300;\r\nconst StyledImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  height: ${length / 2}px;\r\n  margin: 0 ${props => props.theme.thickness.medium}px 0 0;\r\n  width: ${length / 2}px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    height: ${length}px;\r\n    margin: 0 0 ${props => props.theme.thickness.medium}px 0;\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.fontSize.large};\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    font-size: ${props => props.theme.fontSize.extraLarge};\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: inline-block;\r\n  font-size: ${props => props.theme.fontSize.medium};\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  margin-top: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    font-size: ${props => props.theme.fontSize.large};\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst PlayButton = styled(Button)`\r\n  margin-top: ${props => props.theme.thickness.medium}px;\r\n  width: ${props => props.theme.thickness.extraLarge}px;\r\n`;\r\n\r\ninterface Props {\r\n  imageSource?: string;\r\n  imageShape: ImageShape;\r\n  title: string;\r\n  subTitle?: string;\r\n  canPlay: boolean;\r\n  isPlaying: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nfunction Header({\r\n  imageSource,\r\n  imageShape,\r\n  title,\r\n  subTitle,\r\n  canPlay,\r\n  isPlaying,\r\n  onToggle\r\n}: Props) {\r\n  function handleClick() {\r\n    onToggle();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledImage source={imageSource} shape={imageShape} />\r\n      <Div>\r\n        <Title>{title}</Title>\r\n        {subTitle && <SubTitle>{subTitle}</SubTitle>}\r\n        <PlayButton disabled={!canPlay} onClick={handleClick}>\r\n          {isPlaying ? \"Pause\" : \"Play\"}\r\n        </PlayButton>\r\n      </Div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  imageShape: ImageShape.Square\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Track } from \"../../types\";\r\nimport { getArtistNames } from \"../../utils\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoaded, selectIsPlaying } from \"../../reducers/player\";\r\nimport { Icon, IconType, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { selectTrackArtists } from \"../../reducers/tracks\";\r\n\r\nconst StyledButton = styled(ButtonBase)<{ isLoaded: boolean }>`\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  ${props => props.isLoaded && \"color: \" + props.theme.primaryLight};\r\n  display: flex;\r\n  padding: ${props => props.theme.thickness.small}px\r\n    ${props => props.theme.thickness.medium}px;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &&:hover {\r\n    ${props => props.isLoaded && \"color: \" + props.theme.primaryLight};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)<{ isLoaded?: boolean; isHover?: boolean }>`\r\n  color: ${props =>\r\n    props.isLoaded ? props.theme.primaryLight : props.theme.foreground.dark};\r\n  display: ${props => (props.isHover ? \"none\" : \"block\")};\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n\r\n  ${StyledButton}:not(:disabled):hover & {\r\n    color: ${props =>\r\n      props.isLoaded\r\n        ? props.theme.primaryLight\r\n        : props.theme.foreground.default};\r\n    display: ${props => (props.isHover ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nconst Infos = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  font-weight: ${props => props.theme.fontWeight.light};\r\n  height: 100%;\r\n  margin-right: ${props => props.theme.thickness.small}px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-weight: ${props => props.theme.fontWeight.normal};\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n  text-align: left;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  text-align: left;\r\n`;\r\n\r\nconst Duration = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  flex-shrink: 0;\r\n`;\r\n\r\ninterface OwnProps {\r\n  track: Track;\r\n  onToggle: (trackId: string) => void;\r\n}\r\n\r\ninterface Props extends OwnProps {\r\n  artists: Artist[];\r\n  isDisabled: boolean;\r\n  isLoaded: boolean;\r\n  isPlaying: boolean;\r\n}\r\n\r\nfunction TrackItem({\r\n  track,\r\n  artists,\r\n  isDisabled,\r\n  isLoaded,\r\n  isPlaying,\r\n  onToggle\r\n}: Props) {\r\n  function renderIcon() {\r\n    return isDisabled ? (\r\n      <StyledIcon type={IconType.MusicOff} />\r\n    ) : (\r\n      <>\r\n        <StyledIcon\r\n          type={isPlaying ? IconType.VolumeUp : IconType.MusicNote}\r\n          isLoaded={isLoaded}\r\n          isHover={false}\r\n        />\r\n        <StyledIcon\r\n          type={isPlaying ? IconType.Pause : IconType.PlayArrow}\r\n          isLoaded={isLoaded}\r\n          isHover={true}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderArtist() {\r\n    return <SubTitle>{getArtistNames(artists)}</SubTitle>;\r\n  }\r\n\r\n  function renderDuration() {\r\n    let seconds = track.duration_ms / 1000;\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.floor(seconds % 60);\r\n\r\n    return (\r\n      <Duration>{`${minutes}:${\r\n        seconds < 10 ? \"0\" + seconds : seconds\r\n      }`}</Duration>\r\n    );\r\n  }\r\n\r\n  function handleClick() {\r\n    onToggle(track.id);\r\n  }\r\n\r\n  return (\r\n    <StyledButton\r\n      onClick={handleClick}\r\n      disabled={isDisabled}\r\n      isLoaded={isLoaded}\r\n    >\r\n      {renderIcon()}\r\n\r\n      <Infos>\r\n        <Title>{track.name}</Title>\r\n        {renderArtist()}\r\n      </Infos>\r\n\r\n      {renderDuration()}\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nfunction isDisabled(track: Track) {\r\n  return !track.preview_url;\r\n}\r\n\r\nconst mapState = (state: State, { track }: OwnProps) => ({\r\n  artists: selectTrackArtists(state, track.id),\r\n  isDisabled: isDisabled(track),\r\n  isLoaded: selectIsLoaded(state)(track.id),\r\n  isPlaying: selectIsPlaying(state, track.id)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(TrackItem);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track } from \"../../types\";\r\nimport TrackItem from \"./TrackItem\";\r\n\r\nconst StyledList = styled.ul`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst StyledItem = styled.li`\r\n  margin-bottom: ${props => props.theme.thickness.extraSmall}px;\r\n`;\r\n\r\ninterface Props {\r\n  tracks: Track[];\r\n  onToggle: (trackId: string) => void;\r\n}\r\n\r\nfunction TrackList({ tracks, onToggle }: Props) {\r\n  return (\r\n    <StyledList>\r\n      {tracks.map(track => (\r\n        <StyledItem key={track.id}>\r\n          <TrackItem track={track} onToggle={onToggle} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default TrackList;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.small}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist, Track, Type } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getPlaylist } from \"../../actions/playlists\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectPlaylist,\r\n  selectPlaylistTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/playlists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withLoader from \"../withLoader\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\ninterface Params {\r\n  playlistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  playlist?: Playlist;\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getPlaylist: (playlistId: string) => void;\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId?: string\r\n  ) => void;\r\n}\r\n\r\nfunction PlaylistDetails({\r\n  match,\r\n  playlist,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getPlaylist,\r\n  loadPlayPause\r\n}: Props) {\r\n  const { playlistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getPlaylist(playlistId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadPlayPause(playlistId, Type.Playlist, trackId);\r\n  }\r\n\r\n  return playlist ? (\r\n    <Wrapper>\r\n      <Header\r\n        imageSource={getImageSource(playlist)}\r\n        title={playlist.name}\r\n        subTitle={playlist.owner.display_name}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        onToggle={handleToggle}\r\n      />\r\n      <TrackList tracks={tracks} onToggle={handleToggle} />\r\n    </Wrapper>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { playlistId } = match.params;\r\n  return {\r\n    playlist: selectPlaylist(state, playlistId),\r\n    tracks: selectPlaylistTracks(state, playlistId),\r\n    isPlayable: selectIsPlayable(state, playlistId),\r\n    isPlaying: selectIsPlaying(state, playlistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getPlaylist,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(PlaylistDetails)\r\n  )\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist, Track, Type } from \"../../types\";\r\nimport { getAlbum } from \"../../actions/albums\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectAlbum,\r\n  selectAlbumArtists,\r\n  selectAlbumTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/albums\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport Collection from \"./Wrapper\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withLoader from \"../withLoader\";\r\n\r\ninterface Params {\r\n  albumId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  album?: Album;\r\n  artists: Artist[];\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getAlbum: (albumId: string) => void;\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId?: string\r\n  ) => void;\r\n}\r\n\r\nfunction AlbumDetails({\r\n  match,\r\n  album,\r\n  artists,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getAlbum,\r\n  loadPlayPause\r\n}: Props) {\r\n  const { albumId } = match.params;\r\n\r\n  const effect = () => {\r\n    getAlbum(albumId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadPlayPause(albumId, Type.Album, trackId);\r\n  }\r\n\r\n  return album ? (\r\n    <Collection>\r\n      <Header\r\n        imageSource={getImageSource(album)}\r\n        title={album.name}\r\n        subTitle={getArtistNames(artists)}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        onToggle={handleToggle}\r\n      />\r\n      <TrackList tracks={tracks} onToggle={handleToggle} />\r\n    </Collection>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { albumId } = match.params;\r\n  return {\r\n    album: selectAlbum(state, albumId),\r\n    artists: selectAlbumArtists(state)(albumId),\r\n    tracks: selectAlbumTracks(state, albumId),\r\n    isPlayable: selectIsPlayable(state, albumId),\r\n    isPlaying: selectIsPlaying(state, albumId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getAlbum,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(AlbumDetails)\r\n  )\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Track, Type } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getFullArtist } from \"../../actions/artists\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectArtist,\r\n  selectIsPlayable,\r\n  selectArtistAlbums,\r\n  selectArtistTopTracks,\r\n  selectArtistRelatedArtists\r\n} from \"../../reducers/artists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport TrackList from \"./TrackList\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport { Heading } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport Header from \"./Header\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nfunction TopTracks({\r\n  tracks,\r\n  onToggle\r\n}: {\r\n  tracks: Track[];\r\n  onToggle: (trackId: string) => void;\r\n}) {\r\n  return <>{tracks && <TrackList tracks={tracks} onToggle={onToggle} />}</>;\r\n}\r\n\r\nfunction Albums({ albums }: { albums: Album[] }) {\r\n  return (\r\n    <>\r\n      {albums && !!albums.length && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RelatedArtists({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <>\r\n      {artists && !!artists.length && (\r\n        <Section>\r\n          <Heading>Related Artists</Heading>\r\n          <ArtistCovers artists={artists} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Params {\r\n  artistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  artist?: Artist;\r\n  albums: Album[];\r\n  relatedArtists: Artist[];\r\n  topTracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getFullArtist: (artistId: string) => void;\r\n  loadPlayPause: (\r\n    artistId: string,\r\n    collectionType: Type,\r\n    trackId?: string\r\n  ) => void;\r\n}\r\n\r\nfunction ArtistDetails({\r\n  match,\r\n  artist,\r\n  albums,\r\n  relatedArtists,\r\n  topTracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getFullArtist,\r\n  loadPlayPause\r\n}: Props) {\r\n  const { artistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getFullArtist(artistId);\r\n  };\r\n  useEffect(effect, [artistId]);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadPlayPause(artistId, Type.Artist, trackId);\r\n  }\r\n\r\n  return artist ? (\r\n    <>\r\n      <Wrapper>\r\n        <Header\r\n          imageSource={getImageSource(artist)}\r\n          imageShape={ImageShape.Round}\r\n          title={artist.name}\r\n          canPlay={isPlayable}\r\n          isPlaying={isPlaying}\r\n          onToggle={handleToggle}\r\n        />\r\n        <TopTracks tracks={topTracks} onToggle={handleToggle} />\r\n      </Wrapper>\r\n      <Albums albums={albums} />\r\n      <RelatedArtists artists={relatedArtists} />\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { artistId } = match.params;\r\n  return {\r\n    artist: selectArtist(state, artistId),\r\n    albums: selectArtistAlbums(state, artistId),\r\n    relatedArtists: selectArtistRelatedArtists(state, artistId),\r\n    topTracks: selectArtistTopTracks(state, artistId),\r\n    isPlayable: selectIsPlayable(state, artistId),\r\n    isPlaying: selectIsPlaying(state, artistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getFullArtist,\r\n  loadPlayPause\r\n};\r\n\r\nexport default withLoader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(ArtistDetails)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track, Type } from \"../../types\";\r\nimport { loadPlayPause } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport { Collection } from \"../../reducers/types\";\r\nimport { selectCollection, selectLoadedTracks } from \"../../reducers/player\";\r\nimport { Heading } from \"../core\";\r\nimport TrackList from \"../details/TrackList\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\ninterface Props {\r\n  collection?: Collection;\r\n  tracks: Track[];\r\n  loadPlayPause: (\r\n    collectionId: string,\r\n    collectionType: Type,\r\n    trackId: string\r\n  ) => void;\r\n}\r\n\r\nfunction Queue({ collection, tracks, loadPlayPause }: Props) {\r\n  function handleToggle(trackId: string) {\r\n    collection && loadPlayPause(collection.id, collection.type, trackId);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {tracks && tracks.length ? (\r\n        <>\r\n          <Heading>Queue</Heading>\r\n          <TrackList tracks={tracks} onToggle={handleToggle} />\r\n        </>\r\n      ) : (\r\n        <Wrapper>\r\n          <Heading>No tracks in the queue.</Heading>\r\n        </Wrapper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  collection: selectCollection(state),\r\n  tracks: selectLoadedTracks(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  loadPlayPause\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Queue);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport LogIn from \"./Login\";\r\nimport Browse from \"../browse/Browse\";\r\nimport CategoryPlaylists from \"../browse/CategoryPlaylists\";\r\nimport Search from \"../search/Search\";\r\nimport PlaylistDetails from \"../details/PlaylistDetails\";\r\nimport AlbumDetails from \"../details/AlbumDetails\";\r\nimport ArtistDetails from \"../details/ArtistDetails\";\r\nimport Queue from \"../player/Queue\";\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: ${props => props.theme.thickness.medium}px;\r\n`;\r\n\r\nconst Routes = () => {\r\n  const publicUrl = process.env.PUBLIC_URL;\r\n  return (\r\n    <Wrapper>\r\n      <DefaultRoute from={`${publicUrl}/`} to={`${publicUrl}/browse`} />\r\n      <Route path={`${publicUrl}/login`} component={LogIn} />\r\n      <PrivateRoute path={`${publicUrl}/browse`} component={Browse} />\r\n      <PrivateRoute path={`${publicUrl}/search/:query?`} component={Search} />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/category/:categoryId`}\r\n        component={CategoryPlaylists}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/playlist/:playlistId`}\r\n        component={PlaylistDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/album/:albumId`}\r\n        component={AlbumDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/artist/:artistId`}\r\n        component={ArtistDetails}\r\n      />\r\n      <PrivateRoute path={`${publicUrl}/queue`} component={Queue} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Player from \"../player/Player\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledHeader = styled(Header)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breakpoints.extraSmall}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledPlayer = styled(Player)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <StyledHeader />\r\n\r\n        <Body>\r\n          <Menu />\r\n          <Routes />\r\n        </Body>\r\n\r\n        <StyledPlayer />\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export interface Theme {\r\n  background: {\r\n    light: string;\r\n    default: string;\r\n    dark: string;\r\n    hover: string;\r\n    active: string;\r\n  };\r\n  breakpoints: {\r\n    extraSmall: number;\r\n    small: number;\r\n  };\r\n  fontSize: {\r\n    small: string;\r\n    medium: string;\r\n    large: string;\r\n    extraLarge: string;\r\n    extraExtraLarge: string;\r\n  };\r\n  fontWeight: {\r\n    light: number;\r\n    normal: number;\r\n    bold: number;\r\n  };\r\n  foreground: {\r\n    default: string;\r\n    dark: string;\r\n    darker: string;\r\n  };\r\n  primaryLight: string;\r\n  primary: string;\r\n  thickness: {\r\n    extraExtraSmall: number;\r\n    extraSmall: number;\r\n    small: number;\r\n    medium: number;\r\n    large: number;\r\n    extraLarge: number;\r\n    extraExtraLarge: number;\r\n  };\r\n}\r\n\r\nexport const theme: Theme = {\r\n  background: {\r\n    light: \"#303030\",\r\n    default: \"#202020\",\r\n    dark: \"#101010\",\r\n    hover: \"rgba(255, 255, 255, 0.1)\",\r\n    active: \"rgba(255, 255, 255, 0.1)\"\r\n  },\r\n  breakpoints: {\r\n    extraSmall: 480,\r\n    small: 960\r\n  },\r\n  fontSize: {\r\n    small: \"12px\",\r\n    medium: \"16px\",\r\n    large: \"20px\",\r\n    extraLarge: \"24px\",\r\n    extraExtraLarge: \"32px\"\r\n  },\r\n  fontWeight: {\r\n    light: 300,\r\n    normal: 400,\r\n    bold: 500\r\n  },\r\n  foreground: {\r\n    default: \"#ffffff\",\r\n    dark: \"rgba(255, 255, 255, 0.6)\",\r\n    darker: \"rgba(255, 255, 255, 0.3)\"\r\n  },\r\n  primary: \"#1db954\",\r\n  primaryLight: \"#1ed760\",\r\n  thickness: {\r\n    extraExtraSmall: 3.125,\r\n    extraSmall: 6.25,\r\n    small: 12.5,\r\n    medium: 25,\r\n    large: 50,\r\n    extraLarge: 100,\r\n    extraExtraLarge: 200\r\n  }\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\nexport default createGlobalStyle`\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body, h1, h2, button, ul {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background: ${theme.background.default}; \r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.fontSize.medium};\r\n    font-weight: ${theme.fontWeight.normal};\r\n    user-select: none;\r\n  }\r\n\r\n  a {\r\n    color: ${theme.foreground.default};\r\n    text-decoration: none;\r\n  }\r\n\r\n  button {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.fontSize.medium};\r\n    font-weight: ${theme.fontWeight.normal};\r\n\r\n    &:not(:disabled) {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  button, input {\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { ThemeProvider } from \"./styles/styled\";\r\nimport rootReducer from \"./reducers\";\r\nimport App from \"./components/layout/App\";\r\nimport { checkRedirection, initAuthorization } from \"./utils/authorization\";\r\nimport fetchMiddleware from \"./middlewares/fetchMiddleware\";\r\nimport { theme } from \"./styles/theme\";\r\nimport GlobalStyle from \"./styles/global\";\r\n\r\ncheckRedirection();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware, fetchMiddleware))\r\n);\r\ninitAuthorization(store.dispatch);\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { normalize } from \"normalizr\";\r\nimport { authorizedFetch } from \"../utils/authorization\";\r\n\r\nexport default () => (next: Dispatch) => (action: any) => {\r\n  const { types, path, schema, data } = action;\r\n\r\n  if (types) {\r\n    const [requestType, successType, failureType] = types;\r\n    next({ type: requestType });\r\n\r\n    return authorizedFetch(`${process.env.REACT_APP_BASE_URL}/${path}`).then(\r\n      response =>\r\n        response.json().then(json => {\r\n          if (response.ok) {\r\n            const payload = schema ? normalize(json, schema).entities : json;\r\n            next({\r\n              type: successType,\r\n              payload: data ? { ...payload, ...data } : payload\r\n            });\r\n          } else {\r\n            next({ type: failureType, payload: json.error });\r\n          }\r\n        })\r\n    );\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n","export * from \"./Album\";\r\nexport * from \"./Artist\";\r\nexport * from \"./Category\";\r\nexport * from \"./Copyright\";\r\nexport * from \"./Endpoint\";\r\nexport * from \"./Entities\";\r\nexport * from \"./ExternalId\";\r\nexport * from \"./ExternalUrl\";\r\nexport * from \"./Followers\";\r\nexport * from \"./Image\";\r\nexport * from \"./Paging\";\r\nexport * from \"./Playlist\";\r\nexport * from \"./PlaylistTrack\";\r\nexport * from \"./PublicUser\";\r\nexport * from \"./Restriction\";\r\nexport * from \"./Track\";\r\nexport * from \"./TrackLink\";\r\nexport * from \"./Type\";\r\nexport * from \"./User\";\r\nexport * from \"./UserProfile\";\r\n","export enum Type {\r\n  Album = \"album\",\r\n  Artist = \"artist\",\r\n  Playlist = \"playlist\"\r\n}\r\n"],"sourceRoot":""}