{"version":3,"sources":["styles/styled.ts","actions/schemas.ts","actions/albums.ts","actions/authorization.ts","utils/authorization.ts","actions/artists.ts","actions/browse.ts","actions/playlists.ts","actions/search.ts","reducers/createReducer.ts","reducers/artists.ts","reducers/tracks.ts","reducers/albums.ts","reducers/authorization.ts","reducers/playlists.ts","reducers/browse.ts","reducers/loading.ts","actions/player.ts","reducers/player.ts","reducers/search.ts","actions/userProfile.ts","reducers/userProfile.ts","reducers/index.ts","styles/effects.ts","components/core/ButtonBase.tsx","components/core/Button.tsx","components/core/Heading.tsx","components/core/Icon.tsx","components/core/Image.tsx","components/core/RoundButton.tsx","components/core/Text.tsx","components/layout/Title.tsx","components/layout/User.tsx","components/layout/Header.tsx","components/layout/Menu.tsx","utils/index.ts","components/player/AlbumInfos.tsx","components/player/Audio.tsx","components/player/Controls.tsx","components/player/Slider.tsx","components/player/Playback.tsx","components/player/Volume.tsx","components/player/Player.tsx","components/DefaultRoute.tsx","components/PrivateRoute.tsx","components/layout/Login.tsx","components/covers/Covers.tsx","components/covers/CategoryCovers.tsx","components/Fader.tsx","components/Loader.tsx","components/withReloader.tsx","components/browse/Categories.tsx","components/covers/AlbumCovers.tsx","components/browse/NewReleases.tsx","components/covers/PlaylistCovers.tsx","components/browse/FeaturedPlaylists.tsx","components/browse/Browse.tsx","components/browse/CategoryPlaylists.tsx","components/covers/ArtistCovers.tsx","components/withLoader.tsx","components/search/Results.tsx","components/search/Search.tsx","components/details/Header.tsx","components/details/TrackItem.tsx","components/details/TrackList.tsx","components/details/Wrapper.tsx","components/details/PlaylistDetails.tsx","components/details/AlbumDetails.tsx","components/details/ArtistDetails.tsx","components/layout/Routes.tsx","components/layout/App.tsx","styles/theme.ts","styles/global.ts","index.tsx","middlewares/fetchMiddleware.ts"],"names":["styledComponents","styled","default","ThemeProvider","css","createGlobalStyle","keyframes","Category","schema","Entity","Categories","Object","categories","items","Artist","Artists","artists","Album","processStrategy","_ref","tracks","rest","objectWithoutProperties","objectSpread","Albums","albums","Track","album","_ref2","parent","Tracks","Playlist","_ref3","map","item","track","Playlists","playlists","Results","_ref4","define","relatedArtists","topTracks","ActionType","Schemas","receiveLogIn","type","ReceiveLogIn","LOG_IN_URL","concat","process","REGEX","ACCESS_TOKEN","TOKEN_TYPE","EXPIRES_AT","logInRedirect","Promise","resolve","reject","window","addEventListener","handleStorage","event","key","removeEventListener","location","assign","authorizedFetch","url","tokenType","localStorage","accessToken","fetch","headers","Authorization","fetchJson","_callee","response","regenerator_default","a","wrap","_context","prev","next","sent","abrupt","json","stop","createReducer","initialState","handlers","state","arguments","length","undefined","action","hasOwnProperty","mergeArtists","merge","payload","_createReducer","defineProperty","ArtistActionType","ArtistSuccess","ArtistAlbumsSuccess","_action$payload","artistId","nexState","keys","ArtistRelatedArtistsSuccess","_action$payload2","ArtistTopTracksSuccess","_action$payload3","FullArtistSuccess","AlbumActionType","AlbumSuccess","PlaylistActionType","PlaylistSuccess","BrowseActionType","NewReleasesSuccess","SearchActionType","SearchSuccess","selectArtist","selectArtistAlbums","artist","selectAlbums","selectArtistRelatedArtists","selectArtists","selectArtistTopTracks","selectTracks","createSelector","memoize","artistIds","selectPlayableTracks","filter","preview_url","selectIsPlayable","mergeTracks","tracks_createReducer","selectTrack","trackId","selectTrackArtists","trackIds","mergeAlbums","albums_createReducer","selectAlbum","albumId","selectAlbumArtists","selectAlbumTracks","albumIds","isLoggedIn","selectIsLoggedIn","authorization","mergePlaylists","playlists_createReducer","CategoryPlaylistsSuccess","FeaturedPlaylistsSuccess","selectPlaylist","playlistId","selectPlaylistTracks","playlist","selectPlaylists","playlistIds","categoryPlaylistIds","featuredPlaylistIds","newReleaseIds","browse_createReducer","CategoriesSuccess","CategorySuccess","selectCategories","browse","values","selectCategory","categoryId","selectCategoryPlaylists","selectFeaturedPlaylists","selectNewReleases","increment","count","decrement","loading_createReducer","AlbumRequest","AlbumFailure","ArtistRequest","ArtistFailure","ArtistAlbumsRequest","ArtistAlbumsFailure","ArtistRelatedArtistsRequest","ArtistRelatedArtistsFailure","FullArtistRequest","FullArtistFailure","CategoriesRequest","CategoriesFailure","CategoryRequest","CategoryFailure","CategoryPlaylistsRequest","CategoryPlaylistsFailure","FeaturedPlaylistsRequest","FeaturedPlaylistsFailure","NewReleasesRequest","NewReleasesFailure","PlaylistRequest","PlaylistFailure","SearchRequest","SearchFailure","selectIsLoading","loading","PlayerState","Command","providers","selectArtistTracks","loadCollection","collectionId","dispatch","getState","_i","_providers","slicedToArray","isCollection","getTrackIds","id","LoadCollection","toggle","selectIsPlaying","Pause","Play","loadToggle","isLoaded","selectIsLoaded","LoadTrack","loadTrack","trackIndex","playerState","None","duration","currentTime","volume","isMuted","command","player_createReducer","indexOf","TrackLoaded","Playing","isPlaying","Update","Paused","isPaused","Seek","Seeked","Ended","Next","Previous","ChangeVolume","VolumeChanged","selectLoadedTrack","_state$player","player","selectTrackAlbum","_state$player2","_state$player3","selectCanToggle","selectCanSeek","selectCanNext","_state$player4","selectCanPrevious","_state$player5","selectTimes","selectVolumeLevels","selectCommand","search_createReducer","results","_results$Object$keys$","ClearResults","selectAlbumsById","search","selectArtistsById","sort","x","y","popularity","selectPlaylistsById","UserProfileSuccess","userProfile","selectUserProfile","combineReducers","click","props","theme","background","active","foreground","hover","ButtonBase","button","_templateObject","dark","Button","Button_templateObject","primary","IconType","Heading","h2","Heading_templateObject","font","size","extraLarge","weight","bold","Icon","ImageShape","className","react_default","createElement","StyledImg","img","Image_templateObject","shape","Round","StyledIcon","_templateObject2","light","Image","source","_useState","useState","_useState2","setIsLoaded","src","onLoad","Person","defaultProps","Square","StyedButton","RoundButton_templateObject","darker","RoundButton_templateObject2","RoundButton","iconType","RoundButton_StyledIcon","Text","span","Text_templateObject","StyledHeader","h1","Title_templateObject","large","Title_templateObject2","Title","Link","to","Title_StyledIcon","Wifi","Wrapper","div","User_templateObject","User_templateObject2","User","display_name","User_StyledIcon","header","Header_templateObject","padding","breackpoints","extraSmall","mapDispatch","getUserProfile","types","UserProfileRequest","UserProfileFailure","path","connect","useEffect","Header_Wrapper","layout_Title","layout_User","ul","Menu_templateObject","StyledNavLink","NavLink","Menu_templateObject2","primaryLight","_templateObject3","_templateObject4","Menu","Menu_Wrapper","Menu_StyledIcon","ViewModule","Menu_Text","Search","getArtistNames","name","join","getImageSource","object","images","AlbumInfos_templateObject","StyedImage","AlbumInfos_templateObject2","Infos","AlbumInfos_templateObject3","AlbumInfos_templateObject4","ArtistNames","_templateObject5","AlbumInfos_Wrapper","AlbumInfos_Title","trackLoaded","playing","update","elapsed","paused","seeked","volumeChanged","ended","loadedTrack","times","volumeLevels","audio","useRef","currentAudio","current","play","pause","ref","onLoadedMetadata","target","onPlay","onTimeUpdate","onPause","onSeeked","onVolumeChange","onEnded","Controls_templateObject","MainButton","Controls_templateObject2","Controls","canPrevious","onPrevious","canToggle","onToggle","canNext","onNext","Controls_Wrapper","core_RoundButton","disabled","onClick","SkipPrevious","PlayArrow","SkipNext","Slider_templateObject","isDisabled","Left","Slider_templateObject2","width","Thumb","Slider_templateObject3","position","Right","Slider_templateObject4","Slider","isDown","setIsDown","_useState3","_useState4","value","setValue","wrapper","thumb","getValue","currentWrapper","currentTHunb","getBoundingClientRect","left","clientWidth","handleMouseMove","pageX","handleMouseUp","document","onChange","canChange","currentValue","Slider_Wrapper","onMouseDown","Playback_templateObject","ProgressTime","Playback_templateObject2","small","StyledSlider","Playback_templateObject3","Playback","canSeek","onSeek","renderTime","seconds","minutes","Math","floor","round","progress","Playback_Wrapper","Volume_templateObject","Volume_templateObject2","Volume","Volume_Wrapper","VolumeOff","VolumeUp","Volume_StyledSlider","Player_templateObject","ThirdWrapper","Player_templateObject2","LeftWrapper","Player_templateObject3","CenterWrapper","Player_templateObject4","RightWrapper","Player_templateObject5","_ref5","_ref6","seek","time","previous","changeVolume","_ref7","Player_Wrapper","player_AlbumInfos","player_Controls","player_Playback","player_Volume","player_Audio","DefaultRoute","from","Route","exact","render","Redirect","withRouter","Component","component","es_Route","es_Redirect","Login_templateObject","StyledButton","Login_templateObject2","LogIn","Login_Wrapper","core_Heading","StyledList","Covers_templateObject","StyledItem","li","Covers_templateObject2","Covers_templateObject3","StyledImge","Covers_templateObject4","Covers_templateObject5","medium","SubTitle","_templateObject6","Cover","cover","Fragment","Covers_StyledButton","image","Covers_Title","title","subTitle","Covers","covers","history","category","icons","getCovers","covers_Covers","push","Fader","Fader_templateObject","isLoading","Loader","Loader_templateObject","withReloader","WrappedComponent","prevIsLoading","setPrevIsLoading","hasLoaded","setHasLoaded","components_Loader","components_Fader","getCategories","covers_CategoryCovers","selectAbumArtists","getAlbums","covers_AlbumCovers","owner","getPlaylists","PlaylistCovers","Browse_templateObject","Browse_templateObject2","Browse_templateObject3","links","label","match","Browse_Wrapper","Browse_StyledList","link","Browse_StyledNavLink","components_DefaultRoute","NewReleases","FeaturedPlaylists","getCategory","getCategoryPlaylists","params","withLoader","Section","section","Results_templateObject","covers_ArtistCovers","Results_Artists","Results_Albums","Results_Playlists","debounced","StyledInput","input","Search_templateObject","query","encoded","encodeURIComponent","_","debounce","hasResults","placeholder","autoFocus","search_Results","details_Header_templateObject","StyledImage","Header_templateObject2","Div","Header_templateObject3","Header_templateObject4","extraExtraLarge","Header_templateObject5","Header_templateObject6","Header","imageSource","imageShape","canPlay","details_Header_Wrapper","Header_Title","Header_SubTitle","Header_StyledButton","TrackItem_templateObject","TrackItem_templateObject2","isHover","TrackItem_templateObject3","TrackItem_templateObject4","normal","TrackItem_templateObject5","Duration","TrackItem_templateObject6","TrackItem_StyledButton","TrackItem_StyledIcon","MusicOff","MusicNote","TrackItem_Infos","TrackItem_Title","TrackItem_SubTitle","duration_ms","renderDuration","TrackList_templateObject","TrackList_templateObject2","TrackList","TrackList_StyledList","TrackList_StyledItem","details_TrackItem","Wrapper_templateObject","getPlaylist","ownProps","isPlayable","handleToggle","details_Wrapper","details_Header","details_TrackList","getAlbum","ArtistDetails_templateObject","TopTracks","ArtistDetails_Section","RelatedArtists","getFullArtist","all","then","normalize","entities","ArtistDetails_Albums","Routes_templateObject","Routes","publicUrl","Routes_Wrapper","components_PrivateRoute","Browse","CategoryPlaylists","PlaylistDetails","AlbumDetails","ArtistDetails","App_templateObject","App_templateObject2","Body","App_templateObject3","StyledPlayer","Player","App_templateObject4","App","BrowserRouter","App_Wrapper","App_StyledHeader","layout_Menu","layout_Routes","darken","global_templateObject","hash","date","Date","setSeconds","getSeconds","parseInt","toString","checkRedirection","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","data","_types","requestType","successType","failureType","ok","error","parse","now","ReactDOM","global","es","layout_App","getElementById"],"mappings":"+KASIA,EALOC,IAATC,QAIAC,KAHAC,MACAC,oBACAC,YACAH,eAIaF,2ECVTM,EAAW,IAAIC,IAAOC,OAAO,cAE7BC,EAAa,IAAIF,IAAOG,OAAO,CACnCC,WAAY,CAAEC,MAAO,CAACN,MAGlBO,EAAS,IAAIN,IAAOC,OAAO,WAE3BM,EAAU,IAAIP,IAAOG,OAAO,CAChCK,QAAS,CAACF,KAGNG,EAAQ,IAAIT,IAAOC,OACvB,SACA,CACEO,QAAS,CAACF,IAEZ,CACEI,gBAAiB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAWC,EAAdV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,mBAAAR,OAAAY,EAAA,EAAAZ,CAAA,GACZU,EADY,CAEfD,OAAQA,EAASA,EAAOP,MAAQ,QAKhCW,EAAS,IAAIhB,IAAOG,OAAO,CAC/BE,MAAO,CAACI,GACRQ,OAAQ,CAAEZ,MAAO,CAACI,MAGdS,EAAQ,IAAIlB,IAAOC,OACvB,SACA,CACEkB,MAAOV,EACPD,QAAS,CAACF,IAEZ,CACEI,gBAAiB,SAAAU,EAA8BC,GAA9B,IAAGF,EAAHC,EAAGD,MAAOX,EAAVY,EAAUZ,QAAYK,EAAtBV,OAAAW,EAAA,EAAAX,CAAAiB,EAAA,4BAAAjB,OAAAY,EAAA,EAAAZ,CAAA,GACZU,EADY,CAEfM,MAA0B,UAAnBE,EAAM,KAAuBA,EAASF,EAC7CX,QAASA,OAKTc,EAAS,IAAItB,IAAOG,OAAO,CAC/BS,OAAQ,CAACM,KAGLK,EAAW,IAAIvB,IAAOC,OAC1B,YACA,CACEW,OAAQ,CAACM,IAEX,CACER,gBAAiB,SAAAc,GAAA,IAAGZ,EAAHY,EAAGZ,OAAWC,EAAdV,OAAAW,EAAA,EAAAX,CAAAqB,EAAA,mBAAArB,OAAAY,EAAA,EAAAZ,CAAA,GACZU,EADY,CAEfD,OAAQA,EAAOP,MAAQO,EAAOP,MAAMoB,IAAI,SAACC,GAAD,OAAeA,EAAKC,QAAS,QAKrEC,EAAY,IAAI5B,IAAOC,OAAO,gBAAiB,CACnD4B,UAAW,CAAExB,MAAO,CAACkB,MAGjBO,EAAU,IAAI9B,IAAOC,OACzB,UACA,CACEgB,OAAQ,CAACR,GACTD,QAAS,CAACF,GACVuB,UAAW,CAACN,IAEd,CACEb,gBAAiB,SAAAqB,GAAA,IAAGd,EAAHc,EAAGd,OAAQT,EAAXuB,EAAWvB,QAASqB,EAApBE,EAAoBF,UAApB,MAAqC,CACpDZ,OAAQA,EAAOZ,MACfG,QAASA,EAAQH,MACjBwB,UAAWA,EAAUxB,UAK3BC,EAAO0B,OAAO,CACZf,OAAQ,CAACR,GACTwB,eAAgB,CAAC3B,GACjB4B,UAAW,CAAChB,KAGdT,EAAMuB,OAAO,CACXpB,OAAQ,CAACM,KAGJ,IC3FKiB,ED2FCC,EAAU,CACrB9B,SACAC,UACAE,QACAO,SACAjB,WACAG,aACAgB,QACAI,SACAC,WACAK,YACAE,qBCtGUK,gHCAAA,kCAeL,SAASE,IACd,MAAO,CACLC,KAAMH,EAAWI,wBAjBTJ,+ECAZ,ICGYA,ECHAA,ECAAA,ECCAA,IJDNK,EAAU,oDAAAC,OACdC,mCADc,sCAAAD,OAEqBC,kDAC/BC,EAAQ,wDACRC,EAAe,QACfC,EAAa,YACbC,EAAa,YAEnB,SAASC,KACP,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAO3BC,OAAOC,iBAAiB,UANF,SAAhBC,EAAiBC,GACjBA,EAAMC,MAAQX,IAChBO,OAAOK,oBAAoB,UAAWH,GACtCJ,OAIJE,OAAOM,SAASC,OAAOlB,KAwB3B,SAASmB,GAAgBC,GACvB,IAAMC,EAAYC,aAAajB,GACzBkB,EAAcD,aAAalB,GAEjC,OAAOoB,MAAMJ,EAAK,CAChBK,QAAS,CACPC,cAAa,GAAAzB,OAAKoB,EAAL,KAAApB,OAAkBsB,eAKtBI,mFAAf,SAAAC,EAAyBR,GAAzB,IAAAS,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACyBhB,GAAgBC,GADzC,cACQS,EADRI,EAAAG,KAAAH,EAAAI,OAAA,SAESR,EAASS,QAFlB,wBAAAL,EAAAM,SAAAX,6BKrDe,SAASY,GAAcC,EAAsBC,GAC1D,OAAO,WAAuD,IAAtCC,EAAsCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9BH,EAAcM,EAAgBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAIJ,EAASM,eAAeD,EAAOjD,MAC1B4C,EAASK,EAAOjD,MAAM6C,EAAOI,GAE7BJ,aJDDhD,+tBCHAA,stBCAAA,uICCAA,iJEwBZ,SAASsD,GAAaN,EAAcI,GAClC,OAAOG,IAAM,GAAIP,EAAOI,EAAOI,QAAQnF,SAG1BwE,UANa,IAMAY,EAAA,GAAAzF,OAAA0F,EAAA,EAAA1F,CAAAyF,EACzBE,EAAiBC,cAAgBN,IADRtF,OAAA0F,EAAA,EAAA1F,CAAAyF,EAEzBE,EAAiBE,oBAAsB,SACtCb,EACAI,GACG,IAAAU,EAC0BV,EAAOI,QAA5BO,EADLD,EACKC,SAAUjF,EADfgF,EACehF,OACZkF,EAAWV,GAAaN,EAAOI,GACrC,OAAOpF,OAAAY,EAAA,EAAAZ,CAAA,GACFgG,EADLhG,OAAA0F,EAAA,EAAA1F,CAAA,GAEG+F,EAFH/F,OAAAY,EAAA,EAAAZ,CAAA,GAGOgG,EAASD,GAHhB,CAIIjF,OAAQd,OAAOiG,KAAKnF,SAZAd,OAAA0F,EAAA,EAAA1F,CAAAyF,EAgBzBE,EAAiBO,4BAA8B,SAC9ClB,EACAI,GACG,IAAAe,EAC2Bf,EAAOI,QAA7BO,EADLI,EACKJ,SAAU1F,EADf8F,EACe9F,QACZ2F,EAAWV,GAAaN,EAAOI,GACrC,OAAOpF,OAAAY,EAAA,EAAAZ,CAAA,GACFgG,EADLhG,OAAA0F,EAAA,EAAA1F,CAAA,GAEG+F,EAFH/F,OAAAY,EAAA,EAAAZ,CAAA,GAGOgG,EAASD,GAHhB,CAIIjE,eAAgB9B,OAAOiG,KAAK5F,SA1BRL,OAAA0F,EAAA,EAAA1F,CAAAyF,EA8BzBE,EAAiBS,uBAAyB,SACzCpB,EACAI,GACG,IAAAiB,EAC0BjB,EAAOI,QAA5BO,EADLM,EACKN,SAAUtF,EADf4F,EACe5F,OACZuF,EAAWV,GAAaN,EAAOI,GACrC,OAAOpF,OAAAY,EAAA,EAAAZ,CAAA,GACFgG,EADLhG,OAAA0F,EAAA,EAAA1F,CAAA,GAEG+F,EAFH/F,OAAAY,EAAA,EAAAZ,CAAA,GAGOgG,EAASD,GAHhB,CAIIhE,UAAW/B,OAAOiG,KAAKxF,SAxCHT,OAAA0F,EAAA,EAAA1F,CAAAyF,EA4CzBE,EAAiBW,kBAAoBhB,IA5CZtF,OAAA0F,EAAA,EAAA1F,CAAAyF,EA6CzBc,EAAgBC,aAAelB,IA7CNtF,OAAA0F,EAAA,EAAA1F,CAAAyF,EA8CzBgB,EAAmBC,gBAAkBpB,IA9CZtF,OAAA0F,EAAA,EAAA1F,CAAAyF,EA+CzBkB,EAAiBC,mBAAqBtB,IA/CbtF,OAAA0F,EAAA,EAAA1F,CAAAyF,EAgDzBoB,EAAiBC,cAAgBxB,IAhDRG,IAuDrB,SAASsB,GAAT9F,EAAkD8E,GACvD,OADyE9E,EAA5CZ,QACd0F,GAGV,SAASiB,GAAmBhC,EAAsBe,GACvD,IAAMkB,EAASF,GAAa/B,EAAOe,GACnC,GAAIkB,EAAQ,CACV,IAAMnG,EAASoG,GAAalC,EAAbkC,CAAoBD,EAAOnG,QAC1C,GAAIA,EACF,OAAOA,EAIX,MAAO,GAGF,SAASqG,GACdnC,EACAe,GAEA,IAAMkB,EAASF,GAAa/B,EAAOe,GACnC,GAAIkB,EAAQ,CACV,IAAM5G,EAAU+G,GAAcpC,EAAdoC,CAAqBH,EAAOnF,gBAC5C,GAAIzB,EACF,OAAOA,EAIX,MAAO,GAGF,SAASgH,GAAsBrC,EAAsBe,GAC1D,IAAMkB,EAASF,GAAa/B,EAAOe,GACnC,GAAIkB,EAAQ,CACV,IAAMxG,EAAS6G,GAAatC,EAAbsC,CAAoBL,EAAOlF,WAC1C,GAAItB,EACF,OAAOA,EAIX,MAAO,GAGF,OAAM2G,GAAgBG,YAC3B,SAACvC,GAAD,OAA0BA,EAAM3E,SAChC,SAACA,GAAD,OAGEmH,IAAQ,SAACC,GAAD,OACNA,EAAYA,EAAUnG,IAAI,SAAAyE,GAAQ,OAAI1F,EAAQ0F,KAAa,OAI1D,SAAS2B,GAAqB1C,EAAsBe,GACzD,IAAMtF,EAAS4G,GAAsBrC,EAAOe,GAC5C,OAAItF,EACKA,EAAOkH,OAAO,SAAAnG,GAAK,OAAIA,EAAMoG,cAG/B,GAGF,SAASC,GAAiB7C,EAAsBe,GACrD,QAAS2B,GAAqB1C,EAAOe,GAAUb,OChIjD,SAAS4C,GAAY9C,EAAcI,GACjC,OAAOG,IAAM,GAAIP,EAAOI,EAAOI,QAAQ/E,QAG1BoE,UANa,IAMAkD,GAAA,GAAA/H,OAAA0F,EAAA,EAAA1F,CAAC+H,GAC1BxB,EAAgBC,aAAesB,IADN9H,OAAA0F,EAAA,EAAA1F,CAAC+H,GAE1BpC,EAAiBS,uBAAyB0B,IAFjB9H,OAAA0F,EAAA,EAAA1F,CAAC+H,GAG1BpC,EAAiBW,kBAAoBwB,IAHZ9H,OAAA0F,EAAA,EAAA1F,CAAC+H,GAI1BtB,EAAmBC,gBAAkBoB,IAJZ9H,OAAA0F,EAAA,EAAA1F,CAAC+H,GAK1BlB,EAAiBC,cAAgBgB,IALRC,KAQrB,SAASC,GAATxH,EAAgDyH,GACrD,OADsEzH,EAA1CC,OACdwH,GAQT,SAASC,GAAmBlD,EAAsBiD,GACvD,IAAMzG,EAAQwG,GAAYhD,EAAOiD,GACjC,OAAOb,GAAcpC,EAAdoC,CAAqB5F,EAAMnB,SAG7B,OAAMiH,GAAeC,YAC1B,SAACvC,GAAD,OAA0BA,EAAMvE,QAChC,SAACA,GAAD,OACE+G,IAAQ,SAACW,GAAD,OACNA,EAAWA,EAAS7G,IAAI,SAAA2G,GAAO,OAAIxH,EAAOwH,KAAY,OC9B5D,SAASG,GAAYpD,EAAcI,GACjC,OAAOG,IAAM,GAAIP,EAAOI,EAAOI,QAAQ1E,QAG1B+D,UANa,IAMAwD,GAAA,GAAArI,OAAA0F,EAAA,EAAA1F,CAACqI,GAC1B9B,EAAgBC,aAAe4B,IADNpI,OAAA0F,EAAA,EAAA1F,CAACqI,GAE1B1C,EAAiBW,kBAAoB8B,IAFZpI,OAAA0F,EAAA,EAAA1F,CAACqI,GAG1B5B,EAAmBC,gBAAkB0B,IAHZpI,OAAA0F,EAAA,EAAA1F,CAACqI,GAI1B1C,EAAiBE,oBAAsBuC,IAJdpI,OAAA0F,EAAA,EAAA1F,CAACqI,GAK1B1B,EAAiBC,mBAAqBwB,IALbpI,OAAA0F,EAAA,EAAA1F,CAACqI,GAM1BxB,EAAiBC,cAAgBsB,IANRC,KAarB,SAASC,GAATrH,EAAgDsH,GACrD,OADsEtH,EAA1CH,OACdyH,GAGT,IAAMC,GAAqBjB,YAChC,SAAAlG,GAAA,OAAAA,EAAGP,QACH,SAAAc,GAAA,OAAAA,EAAGvB,SACH,SACES,EACAT,GAFF,OAIEmH,IAAQ,SAACe,GACP,IAAMvH,EAAQF,EAAOyH,GACrB,OAAIvH,EACKA,EAAMX,QAAQiB,IAAI,SAAAyE,GAAQ,OAAI1F,EAAQ0F,KAGxC,OAIN,SAAS0C,GAAkBzD,EAAsBuD,GACtD,IAAMvH,EAAQsH,GAAYtD,EAAOuD,GACjC,GAAIvH,EAAO,CACT,IAAMP,EAAS6G,GAAatC,EAAbsC,CAAoBtG,EAAMP,QACzC,GAAIA,EACF,OAAOA,EAIX,MAAO,GAGF,IAAMyG,GAAeK,YAC1B,SAACvC,GAAD,OAA0BA,EAAMlE,QAChC,SAACA,GAAD,OACE0G,IAAQ,SAACkB,GAAD,OACNA,EAAWA,EAASpH,IAAI,SAAAiH,GAAO,OAAIzH,EAAOyH,KAAY,OAIrD,SAASb,GAAqB1C,EAAsBuD,GAEzD,OADeE,GAAkBzD,EAAOuD,GAC1BZ,OAAO,SAAAnG,GAAK,OAAIA,EAAMoG,cAG/B,SAASC,GAAiB7C,EAAsBuD,GACrD,QAASb,GAAqB1C,EAAOuD,GAASrD,OC9EhD,OAIeL,MAJa,CAC1B8D,YAAY,GAGc3I,OAAA0F,EAAA,EAAA1F,CAAA,GACzBgC,EAAWI,aAAe,SAAC4C,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GACtBgF,EADsB,CAEzB2D,YAAY,OAIT,SAASC,GAAiB5D,GAC/B,QAASA,EAAM6D,cAAcF,WCA/B,SAASG,GAAe9D,EAAcI,GACpC,OAAOG,IAAM,GAAIP,EAAOI,EAAOI,QAAQ9D,WAG1BmD,UANa,IAMAkE,GAAA,GAAA/I,OAAA0F,EAAA,EAAA1F,CAAC+I,GAC1BtC,EAAmBC,gBAAkBoC,IADZ9I,OAAA0F,EAAA,EAAA1F,CAAC+I,GAE1BpC,EAAiBqC,yBAA2BF,IAFnB9I,OAAA0F,EAAA,EAAA1F,CAAC+I,GAG1BpC,EAAiBsC,yBAA2BH,IAHnB9I,OAAA0F,EAAA,EAAA1F,CAAC+I,GAI1BlC,EAAiBC,cAAgBgC,IAJRC,KAWrB,SAASG,GAAT1I,EAEL2I,GAEA,OADA3I,EAFEkB,UAGeyH,GAGZ,SAASC,GAAqBpE,EAAsBuD,GACzD,IAAMc,EAAWH,GAAelE,EAAOuD,GACvC,GAAIc,EAAU,CACZ,IAAM5I,EAAS6G,GAAatC,EAAbsC,CAAoB+B,EAAS5I,QAC5C,GAAIA,EACF,OAAOA,EAIX,MAAO,GAGF,OAAM6I,GAAkB/B,YAC7B,SAAAtG,GAAA,OAAAA,EAAGS,WACH,SAACA,GAAD,OACE8F,IAAQ,SAAC+B,GAAD,OACNA,EAAcA,EAAYjI,IAAI,SAAA6H,GAAU,OAAIzH,EAAUyH,KAAe,OAIpE,SAASzB,GAAqB1C,EAAsBmE,GAEzD,OADeC,GAAqBpE,EAAOmE,GAC7BxB,OAAO,SAAAnG,GAAK,OAAIA,EAAMoG,cAG/B,SAASC,GAAiB7C,EAAsBmE,GACrD,QAASzB,GAAqB1C,EAAOmE,GAAYjE,OC9CnD,OAOeL,MAPa,CAC1B5E,WAAY,GACZuJ,oBAAqB,GACrBC,oBAAqB,GACrBC,cAAe,KAGWC,GAAA,GAAA3J,OAAA0F,EAAA,EAAA1F,CAAC2J,GAC1B3H,EAAW4H,kBAAoB,SAC9B5E,EACAI,GAF8B,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAI3BgF,EAJ2B,CAK9B/E,WAAYmF,EAAOI,QAAQvF,eANHD,OAAA0F,EAAA,EAAA1F,CAAC2J,GAQ1B3H,EAAW6H,gBAAkB,SAC5B7E,EACAI,GAF4B,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAIzBgF,EAJyB,CAK5B/E,WAAYmF,EAAOI,QAAQvF,eAbHD,OAAA0F,EAAA,EAAA1F,CAAC2J,GAe1B3H,EAAWgH,yBAA2B,SACrChE,EACAI,GAFqC,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAIlCgF,EAJkC,CAKrCwE,oBAAqBxJ,OAAOiG,KAAKb,EAAOI,QAAQ9D,eApBxB1B,OAAA0F,EAAA,EAAA1F,CAAC2J,GAsB1B3H,EAAWiH,yBAA2B,SACrCjE,EACAI,GAFqC,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAIlCgF,EAJkC,CAKrCyE,oBAAqBzJ,OAAOiG,KAAKb,EAAOI,QAAQ9D,eA3BxB1B,OAAA0F,EAAA,EAAA1F,CAAC2J,GA6B1B3H,EAAW4E,mBAAqB,SAC/B5B,EACAI,GAF+B,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAI5BgF,EAJ4B,CAK/B0E,cAAe1J,OAAOiG,KAAKb,EAAOI,QAAQ1E,YAlClB6I,KAsCfG,GAAmBvC,YAC9B,SAAA/G,GAAA,OAAAA,EAAGuJ,OAAmC9J,YACtC,SAACA,GAAD,OAAoDD,OAAOgK,OAAO/J,KAG7D,SAASgK,GACdjF,EACAkF,GAEA,OAAOlF,EAAM+E,OAAO9J,WAAWiK,GAG1B,SAASC,GAAwBnF,GACtC,OAAOsE,GAAgBtE,EAAhBsE,CAAuBtE,EAAM+E,OAAOP,qBAGtC,SAASY,GAAwBpF,GACtC,OAAOsE,GAAgBtE,EAAhBsE,CAAuBtE,EAAM+E,OAAON,qBAGtC,SAASY,GAAkBrF,GAChC,OAAOkC,GAAalC,EAAbkC,CAAoBlC,EAAM+E,OAAOL,eCtE1C,SAASY,GAAUtF,GACjB,OAAOhF,OAAAY,EAAA,EAAAZ,CAAA,GACFgF,EADL,CAEEuF,MAAOvF,EAAMuF,MAAQ,IAIzB,SAASC,GAAUxF,GACjB,OAAOhF,OAAAY,EAAA,EAAAZ,CAAA,GACFgF,EADL,CAEEuF,MAAOvF,EAAMuF,MAAQ,IAIV1F,ICdH7C,GDcG6C,MAlBa,CAC1B0F,MAAO,IAiBmBE,GAAA,GAAAzK,OAAA0F,EAAA,EAAA1F,CAACyK,GAC1BlE,EAAgBmE,aAAeJ,IADNtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAE1BlE,EAAgBC,aAAegE,IAFNxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAG1BlE,EAAgBoE,aAAeH,IAHNxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAI1B9E,EAAiBiF,cAAgBN,IAJRtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAK1B9E,EAAiBC,cAAgB4E,IALRxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAM1B9E,EAAiBkF,cAAgBL,IANRxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAO1B9E,EAAiBmF,oBAAsBR,IAPdtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAQ1B9E,EAAiBE,oBAAsB2E,IARdxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAS1B9E,EAAiBoF,oBAAsBP,IATdxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAU1B9E,EAAiBqF,4BAA8BV,IAVtBtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAW1B9E,EAAiBO,4BAA8BsE,IAXtBxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAY1B9E,EAAiBsF,4BAA8BT,IAZtBxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAa1B9E,EAAiBmF,oBAAsBR,IAbdtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAc1B9E,EAAiBE,oBAAsB2E,IAddxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAe1B9E,EAAiBoF,oBAAsBP,IAfdxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAgB1B9E,EAAiBuF,kBAAoBZ,IAhBZtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAiB1B9E,EAAiBW,kBAAoBkE,IAjBZxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAkB1B9E,EAAiBwF,kBAAoBX,IAlBZxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAmB1B9D,EAAiByE,kBAAoBd,IAnBZtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAoB1B9D,EAAiBiD,kBAAoBY,IApBZxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAqB1B9D,EAAiB0E,kBAAoBb,IArBZxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAsB1B9D,EAAiB2E,gBAAkBhB,IAtBVtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAuB1B9D,EAAiBkD,gBAAkBW,IAvBVxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAwB1B9D,EAAiB4E,gBAAkBf,IAxBVxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAyB1B9D,EAAiB6E,yBAA2BlB,IAzBnBtK,OAAA0F,EAAA,EAAA1F,CAACyK,GA0B1B9D,EAAiBqC,yBAA2BwB,IA1BnBxK,OAAA0F,EAAA,EAAA1F,CAACyK,GA2B1B9D,EAAiB8E,yBAA2BjB,IA3BnBxK,OAAA0F,EAAA,EAAA1F,CAACyK,GA4B1B9D,EAAiB+E,yBAA2BpB,IA5BnBtK,OAAA0F,EAAA,EAAA1F,CAACyK,GA6B1B9D,EAAiBsC,yBAA2BuB,IA7BnBxK,OAAA0F,EAAA,EAAA1F,CAACyK,GA8B1B9D,EAAiBgF,yBAA2BnB,IA9BnBxK,OAAA0F,EAAA,EAAA1F,CAACyK,GA+B1B9D,EAAiBiF,mBAAqBtB,IA/BbtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAgC1B9D,EAAiBC,mBAAqB4D,IAhCbxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAiC1B9D,EAAiBkF,mBAAqBrB,IAjCbxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAkC1BhE,EAAmBqF,gBAAkBxB,IAlCZtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAmC1BhE,EAAmBC,gBAAkB8D,IAnCZxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAoC1BhE,EAAmBsF,gBAAkBvB,IApCZxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAqC1B5D,EAAiBmF,cAAgB1B,IArCRtK,OAAA0F,EAAA,EAAA1F,CAACyK,GAsC1B5D,EAAiBC,cAAgB0D,IAtCRxK,OAAA0F,EAAA,EAAA1F,CAACyK,GAuC1B5D,EAAiBoF,cAAgBzB,IAvCRC,KA0CrB,SAASyB,GAAgBlH,GAC9B,QAASA,EAAMmH,QAAQ5B,gBCzDbvI,oVAwBZ,OC1BKoK,GAMOC,GDoBNC,GAGA,CACJ,CLXK,SAAA9L,EAAkD+H,GACvD,QADwE/H,EAA1CM,OACdyH,IKUAE,IAChB,CPoCK,SAAAjI,EAAoDuF,GACzD,QAD2EvF,EAA5CH,QACd0F,IOrCAwG,IACjB,CHjBK,SAA0BvH,EAAsBmE,GACrD,QAASnE,EAAMtD,UAAUyH,IGgBNC,KAYd,SAASoD,GAAeC,EAAsBxE,GACnD,OAAO,SAACyE,EAA0CC,GAChD,IACMxE,EAZV,SAAqBnD,EAAcyH,GACjC,QAAAG,EAAA,EAAAC,EAA0CP,GAA1CM,EAAAC,EAAA3H,OAAA0H,IAAqD,KAAAvL,EAAAwL,EAAAD,GAAA3L,EAAAjB,OAAA8M,EAAA,EAAA9M,CAAAqB,EAAA,GAAzC0L,EAAyC9L,EAAA,GAA3B+L,EAA2B/L,EAAA,GACnD,GAAI8L,EAAa/H,EAAOyH,GACtB,OAAOO,EAAYhI,EAAOyH,GAAcnL,IAAI,SAAAE,GAAK,OAAIA,EAAMyL,KAG/D,MAAO,GAMYD,CADHL,IACsBF,GAChCtE,EAASjD,QACXwH,EAAS,CACPvK,KAAMH,GAAWkL,eACjB1H,QAAS,CACPiH,aAAcA,EACdtE,WACAF,cAiCH,SAASkF,KACd,OAAO,SAACT,EAAoBC,GAG1BD,EAAS,CACPvK,KAFgBiL,GADJT,KAGM3K,GAAWqL,MAAQrL,GAAWsL,QAK/C,SAASC,GAAWd,EAAsBxE,GAC/C,OAAO,SAACyE,EAAoBC,GAC1B,IACMa,EAAWC,GADHd,KAETa,EAASf,GAEHxE,IAAYuF,EAASvF,GAvC7B,SAAmBA,GACxB,OAAO,SAACyE,GACNA,EAAS,CACPvK,KAAMH,GAAW0L,UACjBlI,QAAS,CACPyC,cAmCF0F,CAAU1F,EAAV0F,CAAmBjB,GAEnBS,KAAST,EAAUC,GAJnBH,GAAeC,EAAcxE,EAA7BuE,CAAsCE,EAAUC,cCtGjDP,wFAMOC,0GAoBZ,IAWexH,MAXa,CAC1BsD,SAAU,GACVyF,WAAY,EACZC,YAAazB,GAAY0B,KACzBC,SAAU,EACVC,YAAa,EACbC,OAAQ,EACRC,SAAS,EACTC,QAAS9B,GAAQyB,OAGSM,GAAA,GAAApO,OAAA0F,EAAA,EAAA1F,CAACoO,GAC1BpM,GAAWkL,eAAiB,SAC3BlI,EACAI,GACU,IAAAU,EACkCV,EAAOI,QAA3CiH,EADE3G,EACF2G,aAActE,EADZrC,EACYqC,SAAUF,EADtBnC,EACsBmC,QAChC,OAAOjI,OAAAY,EAAA,EAAAZ,CAAA,GACFgF,EADL,CAEEyH,aAAcA,EACdtE,SAAUA,EACVyF,WAAY3F,EAAUE,EAASkG,QAAQpG,GAAW,EAClDkG,QAAS9B,GAAQiB,SAXKtN,OAAA0F,EAAA,EAAA1F,CAACoO,GAc1BpM,GAAW0L,UAAY,SAAC1I,EAAcI,GAAf,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GACnBgF,EADmB,CAEtB4I,WAAY5I,EAAMmD,SAASkG,QAAQjJ,EAAOI,QAAQyC,SAClDkG,QAAS9B,GAAQiB,SAjBOtN,OAAA0F,EAAA,EAAA1F,CAACoO,GAmB1BpM,GAAWsM,YAAc,SACxBtJ,EACAI,GAFwB,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAIrBgF,EAJqB,CAKxB+I,SAAU3I,EAAOI,YAxBOxF,OAAA0F,EAAA,EAAA1F,CAACoO,GA0B1BpM,GAAWuM,QAAU,SAACvJ,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GACjBgF,EADiB,CAEpB6I,YAAazB,GAAYoC,UACzBL,QAAS9B,GAAQyB,SA7BO9N,OAAA0F,EAAA,EAAA1F,CAACoO,GA+B1BpM,GAAWyM,OAAS,SAACzJ,EAAcI,GAAf,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAChBgF,EADgB,CAEnBgJ,YAAa5I,EAAOI,QACpB2I,QAAS9B,GAAQyB,SAlCO9N,OAAA0F,EAAA,EAAA1F,CAACoO,GAoC1BpM,GAAWsL,KAAO,SAACtI,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GACdgF,EADc,CAEjBmJ,QAAS9B,GAAQiB,SAtCOtN,OAAA0F,EAAA,EAAA1F,CAACoO,GAwC1BpM,GAAWqL,MAAQ,SAACrI,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GACfgF,EADe,CAElBmJ,QAAS9B,GAAQgB,UA1COrN,OAAA0F,EAAA,EAAA1F,CAACoO,GA4C1BpM,GAAW0M,OAAS,SAAC1J,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GAChBgF,EADgB,CAEnB6I,YAAazB,GAAYuC,SACzBR,QAAS9B,GAAQyB,SA/CO9N,OAAA0F,EAAA,EAAA1F,CAACoO,GAiD1BpM,GAAW4M,KAAO,SAAC5J,EAAcI,GAAf,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GACdgF,EADc,CAEjBgJ,YAAa5I,EAAOI,QACpB2I,QAAS9B,GAAQuC,SApDO5O,OAAA0F,EAAA,EAAA1F,CAACoO,GAsD1BpM,GAAW6M,OAAS,SAAC7J,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GAChBgF,EADgB,CAEnBmJ,QAAS9B,GAAQiB,SAxDOtN,OAAA0F,EAAA,EAAA1F,CAACoO,GA0D1BpM,GAAW8M,MAAQ,SAAC9J,GAAwB,IACnC4I,EAAyB5I,EAAzB4I,WACR,OAAIA,IAD6B5I,EAAbmD,SACQjD,OAAS,EAC5BlF,OAAAY,EAAA,EAAAZ,CAAA,GAAKgF,EAAZ,CAAmB6I,YAAazB,GAAYuC,WAEvC3O,OAAAY,EAAA,EAAAZ,CAAA,GACFgF,EADL,CAEE4I,WAAYA,EAAa,EACzBO,QAAS9B,GAAQiB,SAlEKtN,OAAA0F,EAAA,EAAA1F,CAACoO,GAqE1BpM,GAAW+M,KAAO,SAAC/J,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GACdgF,EADc,CAEjB4I,WAAY5I,EAAM4I,WAAa,EAC/BO,QAAS9B,GAAQiB,SAxEOtN,OAAA0F,EAAA,EAAA1F,CAACoO,GA0E1BpM,GAAWgN,SAAW,SAAChK,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GAClBgF,EADkB,CAErB4I,WAAY5I,EAAM4I,WAAa,EAC/BO,QAAS9B,GAAQiB,SA7EOtN,OAAA0F,EAAA,EAAA1F,CAACoO,GA+E1BpM,GAAWiN,aAAe,SACzBjK,EACAI,GAFyB,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAItBgF,EACAI,EAAOI,QALe,CAMzB2I,QAAS9B,GAAQ4C,iBArFOjP,OAAA0F,EAAA,EAAA1F,CAACoO,GAuF1BpM,GAAWkN,cAAgB,SAAClK,GAAD,OAAAhF,OAAAY,EAAA,EAAAZ,CAAA,GACvBgF,EADuB,CAE1BmJ,QAAS9B,GAAQyB,SAzFOM,KA6FrB,SAASe,GAAkBnK,GAAyC,IAAAoK,EACxCpK,EAAMqK,OAA/BlH,EADiEiH,EACjEjH,SAAUyF,EADuDwB,EACvDxB,WAElB,GAAIzF,EACF,OAAOH,GAAYhD,EAAOmD,EAASyF,IAIhC,SAAS0B,GAAiBtK,GAAyC,IAAAuK,EACvCvK,EAAMqK,OAEjC7N,EAAQwG,GAAYhD,EAH8CuK,EAChEpH,SADgEoH,EACtD3B,aAGlB,GAAIpM,EACF,OAAO8G,GAAYtD,EAAOxD,EAAMR,OAM7B,SAASyM,GAAezI,GAAsB,IAAAwK,EACJxK,EAAMqK,OAA7C5C,EAD2C+C,EAC3C/C,aAActE,EAD6BqH,EAC7BrH,SAAUyF,EADmB4B,EACnB5B,WAChC,OAAO,SAACX,GAAD,OACLR,IAAiBQ,KAAS9E,EAASjD,QAAUiD,EAASyF,KAAgBX,GAGnE,SAASG,GAAgBpI,EAAsBiI,GAAa,IACzDY,EAAgB7I,EAAMqK,OAAtBxB,YACR,QACIZ,GAAMQ,GAAezI,EAAfyI,CAAsBR,KAAQY,IAAgBzB,GAAYoC,UAI/D,SAASiB,GAAgBzK,GAAsB,IAC5CqK,EAAWrK,EAAXqK,OACR,OACEA,EAAOxB,cAAgBzB,GAAY0B,MACnCuB,EAAOrB,cAAgBqB,EAAOtB,SAI3B,SAAS2B,GAAc1K,GAC5B,OAAOA,EAAMqK,OAAOxB,cAAgBzB,GAAY0B,KAG3C,SAAS6B,GAAc3K,GAAsB,IAAA4K,EACjB5K,EAAMqK,OAA/BlH,EAD0CyH,EAC1CzH,SAAUyF,EADgCgC,EAChChC,WAClB,OAAOzF,EAASjD,OAAS,GAAK0I,EAAazF,EAASjD,OAAS,EAGxD,SAAS2K,GAAkB7K,GAAsB,IAAA8K,EACrB9K,EAAMqK,OAA/BlH,EAD8C2H,EAC9C3H,SAAUyF,EADoCkC,EACpClC,WAClB,OAAOzF,EAASjD,OAAS,GAAK0I,EAAa,EAQtC,OAAMmC,GAAcxI,YACzB,SAAA/G,GAAA,OAAAA,EAAG6O,OAAmCtB,UACtC,SAAA9M,GAAA,OAAAA,EAAGoO,OAAmCrB,aACtC,SAACD,EAAkBC,GAAnB,MAA4C,CAC1CD,WACAC,iBASSgC,GAAqBzI,YAChC,SAAAlG,GAAA,OAAAA,EAAGgO,OAAmCpB,QACtC,SAAArM,GAAA,OAAAA,EAAGyN,OAAmCnB,SACtC,SAACD,EAAgBC,GAAjB,MAAuC,CACrCD,SACAC,aAIG,SAAS+B,GAAcjL,GAC5B,OAAOA,EAAMqK,OAAOlB,QCvNtB,ICXYnM,GDWN8C,GAAsB,CAC1B4D,SAAU,GACVjB,UAAW,GACX8B,YAAa,IAGA1E,MAAcC,IAADoL,GAAA,GAAAlQ,OAAA0F,EAAA,EAAA1F,CAACkQ,GAC1BlO,EAAW8E,cAAgB,SAAC9B,EAAcI,GAAgC,IACjE+K,EAAY/K,EAAOI,QAAnB2K,QADiEC,EAElCD,EAAQnQ,OAAOiG,KAAKkK,GAAS,IAA5DrP,EAFiEsP,EAEjEtP,OAAQT,EAFyD+P,EAEzD/P,QAASqB,EAFgD0O,EAEhD1O,UACzB,OAAO1B,OAAAY,EAAA,EAAAZ,CAAA,GACFgF,EADL,CAEE0D,SAAU5H,EACV2G,UAAWpH,EACXkJ,YAAa7H,MARS1B,OAAA0F,EAAA,EAAA1F,CAACkQ,GAW1BlO,EAAWqO,aAAe,kBAAMvL,KAXPoL,KAcrB,SAAShJ,GAAalC,GAC3B,OAAOsL,GAAiBtL,EAAjBsL,CAAwBtL,EAAMuL,OAAO7H,UAGvC,SAAStB,GAAcpC,GAC5B,OAAOwL,GAAkBxL,EAAlBwL,CAAyBxL,EAAMuL,OAAO9I,WAAWgJ,KACtD,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,WAAaF,EAAEE,aAIxB,SAAStH,GAAgBtE,GAC9B,OAAO6L,GAAoB7L,EAApB6L,CAA2B7L,EAAMuL,OAAOhH,uBC1CrCvH,qJCMZ,IAEe6C,MAFa,GAEA7E,OAAA0F,EAAA,EAAA1F,CAAA,GACzBgC,GAAW8O,mBAAqB,SAC/B9L,EACAI,GAF+B,OAAApF,OAAAY,EAAA,EAAAZ,CAAA,GAI5BgF,EAJ4B,CAK/B+L,YAAa3L,EAAOI,aAIjB,SAASwL,GACdhM,GAEA,OAAOA,EAAM+L,YAAYA,YCCZE,iCAAuB,CACpCnQ,UACAT,WACAwI,iBACAkB,UACAoC,WACAkD,UACA3N,aACA6O,UACA9P,UACAsQ,4CCnCIG,GAAQ,SAACC,GAAD,mOAAA7O,OAcI6O,EAAMC,MAAMC,WAAWC,OAd3B,sGAAAhP,OAoBD6O,EAAMC,MAAMG,WAAWhS,QApBtB,kEAAA+C,OAwBI6O,EAAMC,MAAMC,WAAWG,MAxB3B,uNCGd,IAQeC,GARInS,UAAOoS,OAAVC,KACZT,GAGS,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,sLCJ7C,IAQeC,GARAvS,EAAOmS,GAAPnS,CAAHwS,KACI,SAAAX,GAAK,OAAIA,EAAMC,MAAMW,SAE1B,SAAAZ,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,sNCJ3C,ICAYyS,GDSGC,GATC3S,EAAO4S,GAAVC,KACE,SAAAhB,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAKC,YAC7B,SAAAnB,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOC,iBCFtCR,iTAwBGS,ICtBHC,GDsBGD,GAJf,SAAAjS,GAAwE,IAAxDmS,EAAwDnS,EAAxDmS,UAAWxQ,EAA6C3B,EAA7C2B,KACzB,OAAOyQ,EAAAxO,EAAAyO,cAAA,KAAGF,UAAS,kBAAArQ,OAAoBqQ,IAAcxQ,8UCnB3CuQ,mDAKZ,IAAMI,GAAYxT,UAAOyT,IAAVC,KACX,SAAA7B,GAAK,OAAIA,EAAM8B,QAAUP,GAAWQ,OAAS,uBAGpC,SAAA/B,GAAK,OAAKA,EAAM3D,SAAW,IAAM,MAKxC2F,GAAa7T,kBAAOmT,GAAPnT,CAAH8T,KACA,SAAAjC,GAAK,OAAIA,EAAMC,MAAMC,WAAWgC,OAC5C,SAAAlC,GAAK,OAAIA,EAAM8B,QAAUP,GAAWQ,OAAS,wBAUjD,SAASI,GAAT9S,GAIwC,IAHtCmS,EAGsCnS,EAHtCmS,UACAY,EAEsC/S,EAFtC+S,OACAN,EACsCzS,EADtCyS,MACsCO,EACNC,oBAAS,GADHC,EAAA1T,OAAA8M,EAAA,EAAA9M,CAAAwT,EAAA,GAC/BhG,EAD+BkG,EAAA,GACrBC,EADqBD,EAAA,GAOtC,OAAOH,EACLX,EAAAxO,EAAAyO,cAACC,GAAD,CACEH,UAAWA,EACXiB,IAAKL,EACLN,MAAOA,EACPY,OATJ,WACEF,GAAY,IASVnG,SAAUA,IAGZoF,EAAAxO,EAAAyO,cAACM,GAAD,CAAYR,UAAWA,EAAWxQ,KAAM6P,GAAS8B,OAAQb,MAAOA,IAIpEK,GAAMS,aAAe,CACnBd,MAAOP,GAAWsB,QAGLV,gUCrDf,IAAMW,GAAc3U,kBAAOmS,GAAPnS,CAAH4U,KAEN,SAAA/C,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAM9B,SAAAT,GAAK,OAAIA,EAAMC,MAAMG,WAAW4C,SAIvChB,GAAa7T,kBAAOmT,GAAPnT,CAAH8U,MAgBDC,OARf,SAAA7T,GAAmD,IAA5B8T,EAA4B9T,EAA5B8T,SAAa5T,EAAeV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,cACjD,OACEoS,EAAAxO,EAAAyO,cAACoB,GAAgBvT,EACfkS,EAAAxO,EAAAyO,cAAC0B,GAAD,CAAYpS,KAAMmS,6KC1BxB,IAOeE,GAPFlV,UAAOmV,KAAVC,qQCGV,IAAMC,GAAerV,EAAOsV,GAAVC,KAGH,SAAA1D,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAKyC,OAC7B,SAAA3D,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOC,OAG5CW,GAAa7T,EAAOmT,GAAPnT,CAAHyV,MAeDC,GAXD,WACZ,OACEpC,EAAAxO,EAAAyO,cAACoC,GAAA,EAAD,CAAMC,GAAE,GAAA5S,OAAKC,kBAAL,YACNqQ,EAAAxO,EAAAyO,cAAC8B,GAAD,KACE/B,EAAAxO,EAAAyO,cAACsC,GAAD,CAAYhT,KAAM6P,GAASoD,OAD7B,oOCdN,IAAMC,GAAU/V,EAAOgW,IAAVC,MAKPpC,GAAa7T,EAAOmT,GAAPnT,CAAHkW,MAeDC,GAXF,SAACtE,GAAuB,IAC3BuE,EAAiBvE,EAAjBuE,aAER,OACE9C,EAAAxO,EAAAyO,cAACwC,GAAD,KACEzC,EAAAxO,EAAAyO,cAAC8C,GAAD,CAAYxT,KAAM6P,GAAS8B,SAC3BlB,EAAAxO,EAAAyO,cAAA,YAAO6C,sWCTb,IACML,GAAU/V,EAAOsW,OAAVC,KAGG,SAAA1E,GAAK,OAAIA,EAAMC,MAAMW,SAKtB+D,GAGQ,SAAAtV,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAaC,YAZzC,IA4ChB,IAKMC,GAAc,CAClBC,ebjDK,WACL,OAAO,SAACxJ,GACNA,EAAS,CACPyJ,MAAO,CACLnU,GAAWoU,mBACXpU,GAAW8O,mBACX9O,GAAWqU,oBAEbC,KAAM,Ua4CGC,eATE,SAACvR,GAAD,MAAmB,CAClC2D,WAAYC,GAAiB5D,GAC7B+L,YAAaC,GAAkBhM,KAS/BiR,GAFaM,CA9Bf,SAAAtV,GAKwC,IAJtC0R,EAIsC1R,EAJtC0R,UACAhK,EAGsC1H,EAHtC0H,WACAoI,EAEsC9P,EAFtC8P,YACAmF,EACsCjV,EADtCiV,eASA,OAFAM,oBALe,WACT7N,GACFuN,KAGc,IAGhBtD,EAAAxO,EAAAyO,cAAC4D,GAAD,CAAS9D,UAAWA,GAClBC,EAAAxO,EAAAyO,cAAC6D,GAAD,MACC3F,GAAe6B,EAAAxO,EAAAyO,cAAC8D,GAAS5F,mmCC5ChC,IACMsE,GAAU/V,EAAOsX,GAAVC,KACG,SAAA1F,GAAK,OAAIA,EAAMC,MAAMC,WAAWO,MAWzB,SAAApR,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAaC,YAb3C,KAuBRc,GAAgBxX,EAAOyX,KAAPzX,CAAH0X,KACf9F,GAEO,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAG5BkE,GAGF,SAAA3E,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAIZ,SAAA4R,GAAK,OAAIA,EAAMC,MAAM6F,cACzC,SAAA9F,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAGtB,SAAA0B,GAAA,OAAAA,EAAGmQ,MAAkB2E,aAAaC,YAlBzC,GAuBkB,SAAA7E,GAAK,OAAIA,EAAMC,MAAM6F,eAKjD9D,GAAa7T,EAAOmT,GAAPnT,CAAH4X,MAIV1C,GAAOlV,EAAOmV,KAAV0C,MAqBKC,GAnBF,WACX,OACExE,EAAAxO,EAAAyO,cAACwE,GAAD,KACEzE,EAAAxO,EAAAyO,cAAA,UACED,EAAAxO,EAAAyO,cAACiE,GAAD,CAAe5B,GAAE,GAAA5S,OAAKC,kBAAL,YACfqQ,EAAAxO,EAAAyO,cAACyE,GAAD,CAAYnV,KAAM6P,GAASuF,aAC3B3E,EAAAxO,EAAAyO,cAAC2E,GAAD,iBAGJ5E,EAAAxO,EAAAyO,cAAA,UACED,EAAAxO,EAAAyO,cAACiE,GAAD,CAAe5B,GAAE,GAAA5S,OAAKC,kBAAL,YACfqQ,EAAAxO,EAAAyO,cAACyE,GAAD,CAAYnV,KAAM6P,GAASyF,SAC3B7E,EAAAxO,EAAAyO,cAAC2E,GAAD,mBCxEH,SAASE,GAAerX,GAC7B,OAAOA,EAAQiB,IAAI,SAAA2F,GAAM,OAAIA,EAAO0Q,OAAMC,KAAK,MAG1C,SAASC,GAAeC,GAG7B,OAAOA,GAAUA,EAAOC,QAAUD,EAAOC,OAAO7S,OAC5C4S,EAAOC,OAAO,GAAGtU,SACjB0B,0qBCFN,IAAMkQ,GAAU/V,EAAOgW,IAAV0C,MAMPC,GAAa3Y,EAAOgU,GAAPhU,CAAH4Y,MAOVC,GAAQ7Y,EAAOgW,IAAV8C,MAMLpD,GAAQ1V,EAAOkV,GAAPlV,CAAH+Y,MAILC,GAAchZ,EAAOkV,GAAPlV,CAAHiZ,KACN,SAAApH,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAC1B,SAAAT,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOc,QA2BlD,IAIekD,eAJE,SAACvR,EAAD/D,GAAA,IAAiBD,EAAjBC,EAAiBD,MAAjB,MAAwC,CACvDX,QAASmI,GAAmBxD,EAAnBwD,CAA0BxH,EAAMiM,MAKzC,KAFasJ,CApBf,SAAA/V,GAIwC,IAHtCmS,EAGsCnS,EAHtCmS,UACA3R,EAEsCR,EAFtCQ,MACAX,EACsCG,EADtCH,QAEA,OACEuS,EAAAxO,EAAAyO,cAAC2F,GAAD,CAAS7F,UAAWA,GAClBC,EAAAxO,EAAAyO,cAACoF,GAAD,CAAY1E,OAAQsE,GAAe7W,KACnC4R,EAAAxO,EAAAyO,cAACsF,GAAD,KACEvF,EAAAxO,EAAAyO,cAAC4F,GAAD,KAAQzX,EAAM2W,MACd/E,EAAAxO,EAAAyO,cAACyF,GAAD,KAAcZ,GAAerX,QCoDrC,IAOM4V,GAAc,CAClByC,YpBrBK,SAAqB3K,GAC1B,OAAO,SAACrB,GACNA,EAAS,CACPvK,KAAMH,GAAWsM,YACjB9I,QAASuI,MoBkBb4K,QpBWK,WACL,OAAO,SAACjM,GACNA,EAAS,CACPvK,KAAMH,GAAWuM,YoBbrBqK,OpBqBK,SAAgBC,GACrB,OAAO,SAACnM,GACNA,EAAS,CACPvK,KAAMH,GAAWyM,OACjBjJ,QAASqT,MoBxBbC,OpB6BK,WACL,OAAO,SAACpM,GACNA,EAAS,CACPvK,KAAMH,GAAW0M,WoB/BrBqK,OpB+CK,WACL,OAAO,SAACrM,GACNA,EAAS,CACPvK,KAAMH,GAAW6M,WoBjDrBmK,cpB0FK,WACL,OAAO,SAACtM,GACNA,EAAS,CACPvK,KAAMH,GAAWkN,kBoB5FrB+J,MpBqDK,WACL,OAAO,SAACvM,GACNA,EAAS,CAAEvK,KAAMH,GAAW8M,WoBpDjByH,eAjBE,SAACvR,GAAD,MAAmB,CAClCkU,YAAa/J,GAAkBnK,GAC/BmU,MAAOpJ,GAAY/K,GACnBmJ,QAAS8B,GAAcjL,GACvBoU,aAAcpJ,GAAmBhL,KAejCiR,GAFaM,CAvFf,SAAA/V,GAYU,IAXR0Y,EAWQ1Y,EAXR0Y,YACAC,EAUQ3Y,EAVR2Y,MACAC,EASQ5Y,EATR4Y,aACAjL,EAQQ3N,EARR2N,QACAuK,EAOQlY,EAPRkY,YACAC,EAMQnY,EANRmY,QACAC,EAKQpY,EALRoY,OACAE,EAIQtY,EAJRsY,OACAC,EAGQvY,EAHRuY,OACAC,EAEQxY,EAFRwY,cACAC,EACQzY,EADRyY,MAEMI,EAAQC,iBAAyB,MA0CvC,OAxCA9C,oBAAU,WACR,IAAM+C,EAAeF,EAAMG,QAE3B,GAAID,EAAc,KACRvL,EAAgBmL,EAAhBnL,YACAC,EAAoBmL,EAApBnL,OAAQC,EAAYkL,EAAZlL,QAEhB,OAAQC,GACN,KAAK9B,GAAQiB,KACXiM,EAAaE,OACb,MACF,KAAKpN,GAAQgB,MACXkM,EAAaG,QACb,MACF,KAAKrN,GAAQuC,KACX2K,EAAavL,YAAcA,EAC3B,MACF,KAAK3B,GAAQ4C,aACXsK,EAAatL,OAASC,EAAU,EAAID,MAuB1C2E,EAAAxO,EAAAyO,cAAA,SACE8G,IAAKN,EACLzF,IAAKsF,GAAeA,EAAYtR,YAChCgS,iBArBJ,SAA8BzW,GAC5B,IAAM0W,EAAS1W,EAAM0W,OACrBnB,EAAYmB,EAAO9L,WAoBjB+L,OAAQnB,EACRoB,aAlBJ,SAA0B5W,GACxB,IAAM0W,EAAS1W,EAAM0W,OACrBjB,EAAOiB,EAAO7L,cAiBZgM,QAdJ,SAAqB7W,GACnB,IAAM0W,EAAS1W,EAAM0W,OACjBA,EAAO7L,cAAgB6L,EAAO9L,UAChC+K,KAYAmB,SAAUlB,EACVmB,eAAgBlB,EAChBmB,QAASlB,+NClGf,IAAM5D,GAAU/V,EAAOgW,IAAV8E,MAKPC,GAAa/a,EAAO+U,GAAP/U,CAAHgb,MA8CDC,OAhCf,SAAA/Z,GAQU,IAPRga,EAOQha,EAPRga,YACAC,EAMQja,EANRia,WACAjM,EAKQhO,EALRgO,UACAkM,EAIQla,EAJRka,UACAC,EAGQna,EAHRma,SACAC,EAEQpa,EAFRoa,QACAC,EACQra,EADRqa,OAEA,OACEjI,EAAAxO,EAAAyO,cAACiI,GAAD,KACElI,EAAAxO,EAAAyO,cAACkI,GAAD,CACEC,UAAWR,EACXS,QAASR,EACTnG,SAAUtC,GAASkJ,eAGrBtI,EAAAxO,EAAAyO,cAACwH,GAAD,CACEW,UAAWN,EACXO,QAASN,EACTrG,SAAU9F,EAAYwD,GAAS3E,MAAQ2E,GAASmJ,YAGlDvI,EAAAxO,EAAAyO,cAACkI,GAAD,CACEC,UAAWJ,EACXK,QAASJ,EACTvG,SAAUtC,GAASoJ,0qCC9C3B,IAAM/F,GAAU/V,EAAOgW,IAAV+F,KAID,SAAAlK,GAAK,OAAKA,EAAMmK,WAAa,UAAY,YAM/CC,GAAOjc,EAAOgW,IAAVkG,KACM,SAAArK,GAAK,OAAIA,EAAMC,MAAM6F,cAKrB,SAAA9F,GAAK,OAAkB,IAAdA,EAAMsK,QAGzBC,GAAQpc,EAAOgW,IAAVqG,KAII,SAAAxK,GAAK,OAAqB,IAAjBA,EAAMyK,UAQZ,SAAAzK,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAW9C8V,IAKEwG,GAAQvc,EAAOgW,IAAVwG,KACK,SAAA3K,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAKzB,SAAAT,GAAK,OAAkB,IAAdA,EAAMsK,QAUtC,SAASM,GAAO5K,GAAc,IAAAqC,EACAC,oBAAS,GADTC,EAAA1T,OAAA8M,EAAA,EAAA9M,CAAAwT,EAAA,GACrBwI,EADqBtI,EAAA,GACbuI,EADavI,EAAA,GAAAwI,EAEFzI,mBAAS,GAFP0I,EAAAnc,OAAA8M,EAAA,EAAA9M,CAAAkc,EAAA,GAErBE,EAFqBD,EAAA,GAEdE,EAFcF,EAAA,GAItBG,EAAUhD,iBAAuB,MACjCiD,EAAQjD,iBAAuB,MAErC,SAASkD,EAAS9L,GAChB,IAAM+L,EAAiBH,EAAQ9C,QACzBkD,EAAeH,EAAM/C,QAC3B,IAAKiD,IAAmBC,EACtB,OAAO,EAGT,IACIN,GAAS1L,EADM+L,EAAeE,wBACNC,MAAQH,EAAeI,YAOnD,OANIT,EAAQ,EACVA,EAAQ,EACCA,EAAQ,IACjBA,EAAQ,GAGHA,EAeT,SAASU,EAAgB3Z,GACvBkZ,EAASG,EAASrZ,EAAM4Z,QAG1B,SAASC,EAAc7Z,GACrB8Z,SAAS5Z,oBAAoB,YAAayZ,GAC1CG,SAAS5Z,oBAAoB,UAAW2Z,GACxCf,GAAU,GAH8B,IAIhCiB,EAAa/L,EAAb+L,SACJA,GAEFA,EADcV,EAASrZ,EAAM4Z,QA/CL,IAwDpBpK,EAAyBxB,EAAzBwB,UAAWwK,EAAchM,EAAdgM,UACbC,EAJGpB,EAASI,EAAQjL,EAAMiL,MAMhC,OACExJ,EAAAxO,EAAAyO,cAACwK,GAAD,CACE1D,IAAK2C,EACLgB,YArCJ,SAAyBna,GACDgO,EAAdgM,YAKRlB,GAAU,GACVI,EAASG,EAASrZ,EAAM4Z,QACxBE,SAASha,iBAAiB,YAAa6Z,GACvCG,SAASha,iBAAiB,UAAW+Z,KA6BnC1B,YAAa6B,EACbxK,UAAWA,GAEXC,EAAAxO,EAAAyO,cAAC0I,GAAD,CAAME,MAAO2B,IACZD,GACCvK,EAAAxO,EAAAyO,cAAC6I,GAAD,CAAO/B,IAAK4C,EAAOX,SAAUwB,EAAc9B,YAAa6B,IAE1DvK,EAAAxO,EAAAyO,cAACgJ,GAAD,CAAOJ,MAAO2B,KAKpBrB,GAAOhI,aAAe,CACpBqI,MAAO,EACPe,WAAW,GAGEpB,iaC9If,IAAM1G,GAAU/V,EAAOgW,IAAViI,MAQPC,GAAele,EAAOgW,IAAVmI,KACP,SAAAtM,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAC5B,SAAAT,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAKqL,OAC7B,SAAAvM,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOc,QAG5CsK,GAAere,EAAOyc,GAAPzc,CAAHse,MA0CHC,OA/Bf,SAAArd,GAAqE,IAAjDuN,EAAiDvN,EAAjDuN,SAAUC,EAAuCxN,EAAvCwN,YAAa8P,EAA0Btd,EAA1Bsd,QAASC,EAAiBvd,EAAjBud,OAClD,SAASC,EAAWC,GAClB,IAAMC,EAAUC,KAAKC,MAAMH,EAAU,IAGrC,OAFAA,EAAUE,KAAKE,MAAMJ,GAGnBrL,EAAAxO,EAAAyO,cAAC2K,GAAD,QAAAlb,OACM4b,EADN,KAAA5b,OACiB2b,EAAU,GAAK,IAAMA,EAAUA,IASpD,IAAMK,EAAWvQ,EAAWC,EAAcD,EAAW,EAErD,OACE6E,EAAAxO,EAAAyO,cAAC0L,GAAD,KACGP,EAAWhQ,GACZ4E,EAAAxO,EAAAyO,cAAC8K,GAAD,CACEvB,MAAOkC,EACPpB,SAXN,SAAsBd,GACpB2B,EAAOhQ,EAAWqO,IAWde,UAAWW,IAEZE,EAAWjQ,qOClDlB,IAAMsH,GAAU/V,EAAOgW,IAAVkJ,MAMPb,GAAere,EAAOyc,GAAPzc,CAAHmf,MA8BHC,OApBf,SAAAle,GAAsD,IAApCyN,EAAoCzN,EAApCyN,OAAQC,EAA4B1N,EAA5B0N,QAASgP,EAAmB1c,EAAnB0c,SASjC,OACEtK,EAAAxO,EAAAyO,cAAC8L,GAAD,KACE/L,EAAAxO,EAAAyO,cAACkI,GAAD,CACEE,QAXN,WACEiC,EAASjP,GAASC,IAWdoG,SAAUpG,EAAU8D,GAAS4M,UAAY5M,GAAS6M,WAEpDjM,EAAAxO,EAAAyO,cAACiM,GAAD,CAAc1C,MAAOlO,EAAU,EAAID,EAAQiP,SAV/C,SAAsBd,GACpBc,EAASd,GAAO,2mCCGpB,IAAM/G,GAAU/V,EAAOgW,IAAVyJ,KAEG,SAAA5N,GAAK,OAAIA,EAAMC,MAAMC,WAAWgC,QAS1C2L,GAAe1f,EAAOgW,IAAV2J,KAKK,SAAAze,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAaC,aAKnDkJ,GAAc5f,EAAO0f,GAAP1f,CAAH6f,KAGM,SAAAle,GAAA,OAAAA,EAAGmQ,MAAkB2E,aAAaC,YAIlC,SAAA3U,GAAA,OAAAA,EAAG+P,MAAkB2E,aAAa2H,QAKnD0B,GAAgB9f,EAAO0f,GAAP1f,CAAH+f,KAMI,SAAAzd,GAAA,OAAAA,EAAGwP,MAAkB2E,aAAa2H,QAKnD4B,GAAehgB,EAAO0f,GAAP1f,CAAHigB,KAIK,SAAAC,GAAA,OAAAA,EAAGpO,MAAkB2E,aAAaC,YAIlC,SAAAyJ,GAAA,OAAAA,EAAGrO,MAAkB2E,aAAa2H,QA4EzD,IAWMzH,GAAc,CAClB9I,UACAuS,KzBdK,SAAcC,GACnB,OAAO,SAACjT,GACNA,EAAS,CACPvK,KAAMH,GAAW4M,KACjBpJ,QAASma,MyBWbnb,KzBQK,WACL,OAAO,SAACkI,GACNA,EAAS,CAAEvK,KAAMH,GAAW+M,SyBT9B6Q,SzBaK,WACL,OAAO,SAAClT,GACNA,EAAS,CAAEvK,KAAMH,GAAWgN,ayBd9B6Q,azBwBK,SAAsB5R,EAAgBC,GAC3C,OAAO,SAACxB,GACNA,EAAS,CACPvK,KAAMH,GAAWiN,aACjBzJ,QAAS,CACPyI,SACAC,gByB3BOqI,eAnBE,SAACvR,GAAD,MAAmB,CAClChE,MAAOsO,GAAiBtK,GACxBwJ,UAAWpB,GAAgBpI,GAC3BmU,MAAOpJ,GAAY/K,GACnB0V,UAAWjL,GAAgBzK,GAC3B8Y,QAASpO,GAAc1K,GACvB4V,QAASjL,GAAc3K,GACvBwV,YAAa3K,GAAkB7K,GAC/BoU,aAAcpJ,GAAmBhL,KAajCiR,GAFaM,CA1Ef,SAAAuJ,GAewC,IAdtCnN,EAcsCmN,EAdtCnN,UACA3R,EAasC8e,EAbtC9e,MACAwN,EAYsCsR,EAZtCtR,UACA2K,EAWsC2G,EAXtC3G,MACAuB,EAUsCoF,EAVtCpF,UACAoD,EASsCgC,EATtChC,QACAlD,EAQsCkF,EARtClF,QACAJ,EAOsCsF,EAPtCtF,YACApB,EAMsC0G,EANtC1G,aACAjM,EAKsC2S,EALtC3S,OACAuS,EAIsCI,EAJtCJ,KACAlb,EAGsCsb,EAHtCtb,KACAob,EAEsCE,EAFtCF,SACAC,EACsCC,EADtCD,aAMA,OACEjN,EAAAxO,EAAAyO,cAACkN,GAAD,CAASpN,UAAWA,GAClBC,EAAAxO,EAAAyO,cAACqM,GAAD,KAAcle,GAAS4R,EAAAxO,EAAAyO,cAACmN,GAAD,CAAYhf,MAAOA,KAE1C4R,EAAAxO,EAAAyO,cAACuM,GAAD,KACExM,EAAAxO,EAAAyO,cAACoN,GAAD,CACEzR,UAAWA,EACXkM,UAAWA,EACXC,SAZR,WACExN,KAYMyN,QAASA,EACTC,OAAQrW,EACRgW,YAAaA,EACbC,WAAYmF,IAEdhN,EAAAxO,EAAAyO,cAACqN,GAAD,CACEnS,SAAUoL,EAAMpL,SAChBC,YAAamL,EAAMnL,YACnB8P,QAASA,EACTC,OAAQ2B,KAIZ9M,EAAAxO,EAAAyO,cAACyM,GAAD,KACE1M,EAAAxO,EAAAyO,cAACsN,GAAD,CACElS,OAAQmL,EAAanL,OACrBC,QAASkL,EAAalL,QACtBgP,SAAU2C,KAIdjN,EAAAxO,EAAAyO,cAACuN,GAAD,4BC7ISC,OAJf,SAAA7f,GAA2C,IAAnB8f,EAAmB9f,EAAnB8f,KAAMpL,EAAa1U,EAAb0U,GAC5B,OAAOtC,EAAAxO,EAAAyO,cAAC0N,GAAA,EAAD,CAAOC,OAAK,EAAClK,KAAMgK,EAAMG,OAAQ,kBAAM7N,EAAAxO,EAAAyO,cAAC6N,GAAA,EAAD,CAAUxL,GAAIA,mCC0B9D,IAIeyL,gBACbpK,YALe,SAACvR,GAAD,MAAmB,CAClC2D,WAAYC,GAAiB5D,KAM3B,KAFFuR,CAxBF,SAAA/V,GAIgC,IAHnBogB,EAGmBpgB,EAH9BqgB,UACAlY,EAE8BnI,EAF9BmI,WACGjI,EAC2BV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,4BAC9B,OACEoS,EAAAxO,EAAAyO,cAACiO,GAAA,EAAD9gB,OAAAuD,OAAA,GACM7C,EADN,CAEE+f,OAAQ,SAAAtP,GAAK,OACXxI,EACEiY,GAAahO,EAAAxO,EAAAyO,cAAC+N,EAAczP,GAE5ByB,EAAAxO,EAAAyO,cAACkO,GAAA,EAAD,CAAU7L,GAAE,GAAA5S,OAAKC,kBAAL,0SCvBtB,IAAM8S,GAAU/V,EAAOgW,IAAV0L,MAQPC,GAAe3hB,EAAOuS,GAAPvS,CAAH4hB,MAiBHC,OAbf,WAKE,OACEvO,EAAAxO,EAAAyO,cAACuO,GAAD,KACExO,EAAAxO,EAAAyO,cAACwO,GAAD,+BACAzO,EAAAxO,EAAAyO,cAACoO,GAAD,CAAchG,QAPlB,WACErY,OAME,8xCCnBN,IAAM0e,GAAahiB,EAAOsX,GAAV2K,MASVC,GAAaliB,EAAOmiB,GAAVC,KAMLxc,IAEY,SAAA1E,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAaC,YAT1C,KAcTiL,GAAe3hB,EAAOmS,GAAPnS,CAAHqiB,KACF,SAAAxQ,GAAK,OAAIA,EAAMC,MAAMC,WAAWgC,OAC5C,SAAAlC,GAAK,OAAIA,EAAMhP,OAASuQ,GAAWQ,OAAS,uBAGpChO,IAEDA,IAEY,SAAAjE,GAAA,OAAAA,EAAGmQ,MAAkB2E,aAAaC,YAvB1C,SA6BT4L,GAAatiB,EAAOgU,GAAPhU,CAAHuiB,KACD3c,GACEA,IAEM,SAAA7D,GAAA,OAAAA,EAAG+P,MAAkB2E,aAAaC,YACxC9Q,IAlCF,KAuCT8P,GAAQ1V,EAAOkV,GAAPlV,CAAHwiB,KACI,SAAA3Q,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAK0P,SAMxCC,GAAW1iB,EAAOkV,GAAPlV,CAAH2iB,KACH,SAAA9Q,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAC5B,SAAAT,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAK0P,QAC7B,SAAA5Q,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOc,QAYlD,SAAS6O,GAATtgB,GAQG,IAPDugB,EAOCvgB,EAPDugB,MACOhgB,EAMNP,EANDqR,MACAgI,EAKCrZ,EALDqZ,QAUA,OACErI,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAACwP,GAAD,CAAcpH,QANlB,WACEA,EAAQkH,EAAMlV,KAKwB9K,KAAMA,GACxCyQ,EAAAxO,EAAAyO,cAAC+O,GAAD,CAAYrO,OAAQ4O,EAAMG,SAE5B1P,EAAAxO,EAAAyO,cAAC0P,GAAD,KAAQJ,EAAMK,OACbL,EAAMM,UAAY7P,EAAAxO,EAAAyO,cAACmP,GAAD,KAAWG,EAAMM,WAW1C,SAASC,GAATlD,GAAmD,IAAjCmD,EAAiCnD,EAAjCmD,OAAQ1P,EAAyBuM,EAAzBvM,MAAOgI,EAAkBuE,EAAlBvE,QAC/B,OACErI,EAAAxO,EAAAyO,cAACyO,GAAD,KACGqB,EAAOrhB,IAAI,SAAA6gB,GAAK,OACfvP,EAAAxO,EAAAyO,cAAC2O,GAAD,CAAYpe,IAAK+e,EAAMlV,IACrB2F,EAAAxO,EAAAyO,cAACqP,GAAD,CAAOC,MAAOA,EAAOlP,MAAOA,EAAOgI,QAASA,QAOtDyH,GAAO3O,aAAe,CACpBd,MAAOP,GAAWsB,QAGL0O,UC1FA/B,oBAXf,SAAAngB,GAAwD,IAA9BoiB,EAA8BpiB,EAA9BoiB,QAOlBD,EAtBR,SAAmB1iB,GACjB,OAAOA,EAAWqB,IAAI,SAAAuhB,GAAQ,MAAK,CACjC5V,GAAI4V,EAAS5V,GACbqV,MACEO,EAASC,OAASD,EAASC,MAAM5d,OAC7B2d,EAASC,MAAM,GAAGrf,SAClB0B,EACNqd,MAAOK,EAASlL,QAeHoL,CAPuCviB,EAArBP,YAQjC,OAAO2S,EAAAxO,EAAAyO,cAACmQ,GAAD,CAAQL,OAAQA,EAAQ1H,QAP/B,SAAqB/Q,GACnB0Y,EAAQK,KAAR,GAAA3gB,OACKC,kBADL,gBAAAD,OAC0C4H,EAD1C,mICpBJ,IAKegZ,GALD5jB,EAAOgW,IAAV6N,KACE,SAAAhS,GAAK,OAAKA,EAAMiS,UAAY,IAAM,KAC/B,SAAAjS,GAAK,OAAKA,EAAMiS,UAAY,QAAU,suBCFtD,IA2CeC,GA3CA/jB,EAAOgW,IAAVgO,KAIC,SAAAnS,GAAK,OAAKA,EAAMiS,UAAY,IAAM,KAE/B,SAAAjS,GAAK,OAAKA,EAAMiS,UAAY,QAAU,YAIpC,SAAAjS,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAShC,SAAAT,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,UCkBnCgkB,OAhCf,SAAsBC,GA0BpB,OAAOjN,YAJU,SAACvR,GAAD,MAAmB,CAClCoe,UAAWlX,GAAgBlH,KAK3B,KAFKuR,CAzBc,SAAA/V,GAAiC,IAA9B4iB,EAA8B5iB,EAA9B4iB,UAAc1iB,EAAgBV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,eAAAgT,EACVC,oBAAS,GADCC,EAAA1T,OAAA8M,EAAA,EAAA9M,CAAAwT,EAAA,GAC7CiQ,EAD6C/P,EAAA,GAC9BgQ,EAD8BhQ,EAAA,GAAAwI,EAElBzI,oBAAS,GAFS0I,EAAAnc,OAAA8M,EAAA,EAAA9M,CAAAkc,EAAA,GAE7CyH,EAF6CxH,EAAA,GAElCyH,EAFkCzH,EAAA,GAWpD,OAPIsH,IAAkBL,IACfA,GACHQ,GAAa,GAEfF,EAAiBN,IAIjBxQ,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAACgR,GAAD,CAAQT,WAAYO,IACpB/Q,EAAAxO,EAAAyO,cAACiR,GAAD,CAAOV,WAAYO,GACjB/Q,EAAAxO,EAAAyO,cAAC2Q,EAAqB9iB,QCHhC,IAIMuV,GAAc,CAClB8N,c7CDK,WACL,OAAO,SAACrX,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAWoJ,kBACXpJ,EAAW4H,kBACX5H,EAAWqJ,mBAEbiL,KAAM,oBACNzW,OAAQoC,EAAQlC,gB6CLPwW,eARE,SAACvR,GAAD,MAAmB,CAClC/E,WAAY6J,GAAiB9E,KAS7BiR,GAFaM,CAGbgN,GAjBF,SAAA/iB,GAA0D,IAApCP,EAAoCO,EAApCP,WAAY8jB,EAAwBvjB,EAAxBujB,cAGhC,OAFAvN,oBAAUuN,EAAe,IAElBnR,EAAAxO,EAAAyO,cAACmR,GAAD,CAAgB/jB,WAAYA,OCqBrC,IAIe0gB,gBACbpK,YALkB,SAACvR,GAAD,MAAmB,CACrCif,kBAAmBzb,GAAmBxD,KAMpC,KAFFuR,CAdF,SAAA/V,GAAoE,IAA7CoiB,EAA6CpiB,EAA7CoiB,QAKfD,EAzBR,SACE7hB,EACA0H,GAEA,OAAO1H,EAAOQ,IAAI,SAAAN,GAChB,IAAMX,EAAUmI,EAAmBxH,EAAMiM,IACzC,MAAO,CACLA,GAAIjM,EAAMiM,GACVqV,MAAOzK,GAAe7W,GACtBwhB,MAAOxhB,EAAM2W,KACb8K,SAAU/K,GAAerX,MAed0iB,CALmDviB,EAApCM,OAAoCN,EAA5ByjB,mBAMtC,OAAOrR,EAAAxO,EAAAyO,cAACmQ,GAAD,CAAQL,OAAQA,EAAQ1H,QAL/B,SAAqB1S,GACnBqa,EAAQK,KAAR,GAAA3gB,OAAgBC,kBAAhB,YAAAD,OAAiDiG,UCXrD,IAIM0N,GAAc,CAClBiO,U/CmEK,WACL,OAAO,SAACxX,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAW4J,mBACX5J,EAAW4E,mBACX5E,EAAW6J,oBAEbyK,KAAM,sBACNzW,OAAQoC,EAAQpB,Y+CzEP0V,eARE,SAACvR,GAAD,MAAmB,CAClClE,OAAQuJ,GAAkBrF,KAS1BiR,GAFaM,CAGbgN,GAjBF,SAAA/iB,GAAmD,IAA5BM,EAA4BN,EAA5BM,OAAQojB,EAAoB1jB,EAApB0jB,UAG7B,OAFA1N,oBAAU0N,EAAW,IAEdtR,EAAAxO,EAAAyO,cAACsR,GAAD,CAAarjB,OAAQA,OCWf6f,oBATf,SAAAngB,GAAsD,IAA7BoiB,EAA6BpiB,EAA7BoiB,QAKjBD,EAlBR,SAAmBjhB,GACjB,OAAOA,EAAUJ,IAAI,SAAA+H,GAAQ,MAAK,CAChC4D,GAAI5D,EAAS4D,GACbqV,MAAOzK,GAAexO,GACtBmZ,MAAOnZ,EAASsO,KAChB8K,SAAUpZ,EAAS+a,MAAM1O,gBAaZqN,CALqCviB,EAApBkB,WAMhC,OAAOkR,EAAAxO,EAAAyO,cAACmQ,GAAD,CAAQL,OAAQA,EAAQ1H,QAL/B,SAAqB9R,GACnByZ,EAAQK,KAAR,GAAA3gB,OAAgBC,kBAAhB,eAAAD,OAAoD6G,SCDxD,IAIM8M,GAAc,CAClBoO,ajDkDK,WACL,OAAO,SAAC3X,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAW0J,yBACX1J,EAAWiH,yBACXjH,EAAW2J,0BAEb2K,KAAM,4BACNzW,OAAQoC,EAAQR,eiDxDP8U,eARE,SAACvR,GAAD,MAAmB,CAClCtD,UAAW0I,GAAwBpF,KASnCiR,GAFaM,CAGbgN,GAjBF,SAAA/iB,GAA+D,IAAlCkB,EAAkClB,EAAlCkB,UAAW2iB,EAAuB7jB,EAAvB6jB,aAGtC,OAFA7N,oBAAU6N,EAAc,IAEjBzR,EAAAxO,EAAAyO,cAACyR,GAAD,CAAgB5iB,UAAWA,g5BCJpC,IAAM2T,GAAU/V,EAAOgW,IAAViP,MAIPjD,GAAahiB,EAAOsX,GAAV4N,KAID,SAAArT,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAK0P,QAMvB,SAAAvhB,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAaC,aAMnDc,GAAgBxX,EAAOyX,KAAPzX,CAAHmlB,KAER,SAAAtT,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAQ9B,SAAAT,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAIhC,SAAA4R,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAI3B,SAAA4R,GAAK,OAAIA,EAAMC,MAAM6F,eAWjCyN,GAAQ,CACZ,CACEjhB,IAAK,aACLkhB,MAAO,cAET,CACElhB,IAAK,eACLkhB,MAAO,gBAET,CACElhB,IAAK,mBACLkhB,MAAO,uBA4BIhE,oBAxBf,SAAA1f,GAAgD,IAA9B2jB,EAA8B3jB,EAA9B2jB,MAChB,OACEhS,EAAAxO,EAAAyO,cAACgS,GAAD,KACEjS,EAAAxO,EAAAyO,cAACiS,GAAD,KACGJ,GAAMpjB,IAAI,SAAAyjB,GAAI,OACbnS,EAAAxO,EAAAyO,cAAA,MAAIzP,IAAK2hB,EAAKthB,KACZmP,EAAAxO,EAAAyO,cAACmS,GAAD,CAAe9P,GAAE,GAAA5S,OAAKsiB,EAAMnhB,IAAX,KAAAnB,OAAkByiB,EAAKthB,MACrCshB,EAAKJ,WAMd/R,EAAAxO,EAAAyO,cAACoS,GAAD,CAAc3E,KAAI,GAAAhe,OAAKsiB,EAAMtO,MAAQpB,GAAE,GAAA5S,OAAKsiB,EAAMtO,KAAX,iBACvC1D,EAAAxO,EAAAyO,cAAC0N,GAAA,EAAD,CAAOC,OAAK,EAAClK,KAAI,GAAAhU,OAAKsiB,EAAMtO,KAAX,eAA8BuK,UAAW9gB,KAC1D6S,EAAAxO,EAAAyO,cAAC0N,GAAA,EAAD,CAAOjK,KAAI,GAAAhU,OAAKsiB,EAAMtO,KAAX,iBAAgCuK,UAAWqE,KACtDtS,EAAAxO,EAAAyO,cAAC0N,GAAA,EAAD,CACEjK,KAAI,GAAAhU,OAAKsiB,EAAMtO,KAAX,qBACJuK,UAAWsE,QCjDnB,IASMlP,GAAc,CAClBmP,YAAa,SAAClb,GAAD,OnDfR,SAAqBA,GAC1B,OAAO,SAACwC,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAWsJ,gBACXtJ,EAAW6H,gBACX7H,EAAWuJ,iBAEb+K,KAAI,qBAAAhU,OAAuB4H,GAC3BrK,OAAQoC,EAAQrC,YmDMiBwlB,CAAYlb,IACjDma,aAAc,SAACna,GAAD,OnDCT,SAA8BA,GACnC,OAAO,SAACwC,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAWwJ,yBACXxJ,EAAWgH,yBACXhH,EAAWyJ,0BAEb6K,KAAI,qBAAAhU,OAAuB4H,EAAvB,cACJrK,OAAQoC,EAAQR,amDVkB4jB,CAAqBnb,KAG9CyW,gBACbpK,YAfe,SAACvR,EAAD/D,GAGf,MAAO,CACL4hB,SAAU5Y,GAAejF,EAJwB/D,EAAnB2jB,MACPU,OAAOpb,YAI9BxI,UAAWyI,GAAwBnF,KAYnCiR,GAFFM,CAGEgN,GA1CJ,SAAA/iB,GAMU,IALRokB,EAKQpkB,EALRokB,MACA/B,EAIQriB,EAJRqiB,SACAnhB,EAGQlB,EAHRkB,UACA0jB,EAEQ5kB,EAFR4kB,YACAf,EACQ7jB,EADR6jB,aAWA,OAFA7N,oBAPe,WAAM,IACXtM,EAAe0a,EAAMU,OAArBpb,WACH2Y,GACHuC,EAAYlb,GAEdma,EAAana,IAEG,IAGhB0I,EAAAxO,EAAAyO,cAAA,WACED,EAAAxO,EAAAyO,cAACwO,GAAD,KAAUwB,GAAYA,EAASlL,MAC/B/E,EAAAxO,EAAAyO,cAACyR,GAAD,CAAgB5iB,UAAWA,6BCXlBif,oBAXf,SAAAngB,GAAmD,IAA3BoiB,EAA2BpiB,EAA3BoiB,QAKhBD,EAjBR,SAAmBtiB,GACjB,OAAOA,EAAQiB,IAAI,SAAA2F,GAAM,MAAK,CAC5BgG,GAAIhG,EAAOgG,GACXqV,MAAOzK,GAAe5Q,GACtBub,MAAOvb,EAAO0Q,QAaDoL,CALkCviB,EAAlBH,SAM/B,OACEuS,EAAAxO,EAAAyO,cAACmQ,GAAD,CAAQL,OAAQA,EAAQ1P,MAAOP,GAAWQ,MAAO+H,QANnD,SAAqBlV,GACnB6c,EAAQK,KAAR,GAAA3gB,OAAgBC,kBAAhB,aAAAD,OAAkDyD,SCQvCwf,GAtBI,SAAC/B,GAgBlB,OAAOjN,YAJU,SAACvR,GAAD,MAAmB,CAClCoe,UAAWlX,GAAgBlH,KAK3B,KAFKuR,CAfY,SAAA/V,GAAiC,IAA9B4iB,EAA8B5iB,EAA9B4iB,UAAc1iB,EAAgBV,OAAAW,EAAA,EAAAX,CAAAQ,EAAA,eAClD,OACEoS,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAACgR,GAAD,CAAQT,UAAWA,IACnBxQ,EAAAxO,EAAAyO,cAACiR,GAAD,CAAOV,UAAWA,GAChBxQ,EAAAxO,EAAAyO,cAAC2Q,EAAqB9iB,0GCJhC,IAAM8kB,GAAUlmB,EAAOmmB,QAAVC,MAIb,SAAStlB,GAATI,GAAqD,IAAlCH,EAAkCG,EAAlCH,QACjB,OACEuS,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACG/hB,EAAQ6E,OAAS,GAChB0N,EAAAxO,EAAAyO,cAAC2S,GAAD,KACE5S,EAAAxO,EAAAyO,cAACwO,GAAD,gBACAzO,EAAAxO,EAAAyO,cAAC8S,GAAD,CAActlB,QAASA,MAOjC,SAASQ,GAATI,GAAiD,IAA/BH,EAA+BG,EAA/BH,OAChB,OACE8R,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACGthB,EAAOoE,OAAS,GACf0N,EAAAxO,EAAAyO,cAAC2S,GAAD,KACE5S,EAAAxO,EAAAyO,cAACwO,GAAD,yBACAzO,EAAAxO,EAAAyO,cAACsR,GAAD,CAAarjB,OAAQA,MAO/B,SAASW,GAATJ,GAA6D,IAAxCK,EAAwCL,EAAxCK,UACnB,OACEkR,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACG1gB,EAAUwD,OAAS,GAClB0N,EAAAxO,EAAAyO,cAAC2S,GAAD,KACE5S,EAAAxO,EAAAyO,cAACwO,GAAD,kBACAzO,EAAAxO,EAAAyO,cAACyR,GAAD,CAAgB5iB,UAAWA,MAuBtB6jB,UAVf,SAAA3jB,GAAwD,IAArCvB,EAAqCuB,EAArCvB,QAASS,EAA4Bc,EAA5Bd,OAAQY,EAAoBE,EAApBF,UAClC,OACEkR,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAAC+S,GAAD,CAASvlB,QAASA,IAClBuS,EAAAxO,EAAAyO,cAACgT,GAAD,CAAQ/kB,OAAQA,IAChB8R,EAAAxO,EAAAyO,cAACiT,GAAD,CAAWpkB,UAAWA,8SC9C5B,IA0BIqkB,GA1BEC,GAAc1mB,EAAO2mB,MAAVC,KACD,SAAA/U,GAAK,OAAIA,EAAMC,MAAMC,WAAWgC,OAG/B,SAAAlC,GAAK,OAAIA,EAAMC,MAAM6F,cAC3B,SAAA9F,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAC5B,SAAA4R,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAKC,YAC7B,SAAAnB,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOc,QAyElD,IAOM4C,GAAc,CAClB1F,OrD3FK,SAAgB4V,GACrB,OAAIA,EACK,SAACzZ,GACN,IAAM0Z,EAAUC,mBAAmBF,GACnCzZ,EAAS,CACPyJ,MAAO,CACLnU,EAAWgK,cACXhK,EAAW8E,cACX9E,EAAWiK,eAEbqK,KAAI,YAAAhU,OAAc8jB,EAAd,gCACJvmB,OAAQoC,EAAQN,WAIb,SAAC+K,GACNA,EAAS,CACPvK,KAAMH,EAAWqO,kBqD6EVsQ,gBACbpK,YAZe,SAACvR,GAAD,MAAmB,CAClCoe,UAAWlX,GAAgBlH,GAC3BlE,OAAQoG,GAAalC,GACrB3E,QAAS+G,GAAcpC,GACvBtD,UAAW4H,GAAgBtE,KAUzBiR,GAFFM,CAhEF,SAAA/V,GAQU,IAPRoiB,EAOQpiB,EAPRoiB,QACAgC,EAMQpkB,EANRokB,MACAxB,EAKQ5iB,EALR4iB,UACAtiB,EAIQN,EAJRM,OACAT,EAGQG,EAHRH,QACAqB,EAEQlB,EAFRkB,UACA6O,EACQ/P,EADR+P,OAEQ4V,EAAUvB,EAAMU,OAAhBa,MADA3S,EAEkBC,mBAAS0S,GAAS,IAFpCzS,EAAA1T,OAAA8M,EAAA,EAAA9M,CAAAwT,EAAA,GAED4I,EAFC1I,EAAA,GAEM2I,EAFN3I,EAAA,GAWR8C,oBAPe,WACbjG,EAAO6L,GACP2J,GAAYO,KAAEC,SAAS,SAACJ,GACtBvD,EAAQK,KAAR,GAAA3gB,OAAgBC,kBAAhB,WAAAD,OAAgD6jB,GAAS,KAAzD7jB,OAA+D6jB,IAC/D5V,EAAO4V,IACN,MAEa,IAQlB,IAAMK,EACJpD,GAAa/iB,EAAQ6E,QAAUpE,EAAOoE,QAAUxD,EAAUwD,OAC5D,OACE0N,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAACmT,GAAD,CACE5J,MAAOA,EACPc,SAZN,SAAsB/Z,GAAsC,IAClDiZ,EAAUjZ,EAAM0W,OAAhBuC,MACRC,EAASD,GACT2J,GAAU3J,IAUNqK,YAAY,YACZC,WAAS,IAEVP,IACEK,EACC5T,EAAAxO,EAAAyO,cAAC8T,GAAD,CACEvD,UAAWA,EACX/iB,QAASA,EACTS,OAAQA,EACRY,UAAWA,IAGbkR,EAAAxO,EAAAyO,cAACwO,GAAD,8BAAgC8E,EAAhC,67CCtFV,IAAM9Q,GAAU/V,EAAOgW,IAAVsR,KAQU,SAAApmB,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAa2H,QAQnDmJ,GAAcvnB,EAAOgU,GAAPhU,CAAHwnB,KAEF5hB,GACHA,IACKA,IAENA,IAEY,SAAAjE,GAAA,OAAAA,EAAGmQ,MAAkB2E,aAAa2H,OACxCxY,IAVF,aAkBT6hB,GAAMznB,EAAOgW,IAAV0R,MAOHhS,GAAQ1V,EAAOkV,GAAPlV,CAAH2nB,KACI,SAAA9V,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAKC,YAGvB,SAAAjR,GAAA,OAAAA,EAAG+P,MAAkB2E,aAAa2H,OACxC,SAAAvM,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAK6U,iBA9BjC,KAmCTlF,GAAW1iB,EAAOkV,GAAPlV,CAAH6nB,KACH,SAAAhW,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,MAE5B,SAAAT,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAK0P,QAC7B,SAAA5Q,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOc,OAI3B,SAAAzR,GAAA,OAAAA,EAAGwP,MAAkB2E,aAAa2H,OACxC,SAAAvM,GAAK,OAAIA,EAAMC,MAAMgB,KAAKC,KAAKyC,OA5CjC,KAiDTmM,GAAe3hB,EAAOuS,GAAPvS,CAAH8nB,MAelB,SAASC,GAAT7H,GAQU,IAPR8H,EAOQ9H,EAPR8H,YACAC,EAMQ/H,EANR+H,WACA/E,EAKQhD,EALRgD,MACAC,EAIQjD,EAJRiD,SACA+E,EAGQhI,EAHRgI,QACAhZ,EAEQgR,EAFRhR,UACAmM,EACQ6E,EADR7E,SAMA,OACE/H,EAAAxO,EAAAyO,cAAC4U,GAAD,KACE7U,EAAAxO,EAAAyO,cAACgU,GAAD,CAAatT,OAAQ+T,EAAarU,MAAOsU,IACzC3U,EAAAxO,EAAAyO,cAACkU,GAAD,KACEnU,EAAAxO,EAAAyO,cAAC6U,GAAD,KAAQlF,GACPC,GAAY7P,EAAAxO,EAAAyO,cAAC8U,GAAD,KAAWlF,GACxB7P,EAAAxO,EAAAyO,cAAC+U,GAAD,CAAc5M,UAAWwM,EAASvM,QAVxC,WACEN,MAUOnM,EAAY,QAAU,UAOjC6Y,GAAOtT,aAAe,CACpBwT,WAAY7U,GAAWsB,QAGVqT,+hCCxGf,IAAMpG,GAAe3hB,EAAOmS,GAAPnS,CAAHuoB,KAGd,SAAA1W,GAAK,OAAIA,EAAM3D,UAAY,UAAY2D,EAAMC,MAAM6F,cAM1C,SAAA9F,GAAK,OAAIA,EAAMC,MAAMG,WAAWhS,SAIvC,SAAA4R,GAAK,OAAIA,EAAM3D,UAAY,UAAY2D,EAAMC,MAAM6F,eAInD9D,GAAa7T,EAAOmT,GAAPnT,CAAHwoB,KACL,SAAA3W,GAAK,OACZA,EAAM3D,SAAW2D,EAAMC,MAAM6F,aAAe9F,EAAMC,MAAMG,WAAWK,MAC1D,SAAAT,GAAK,OAAKA,EAAM4W,QAAU,OAAS,SAG5C9G,GACS,SAAA9P,GAAK,OACZA,EAAM3D,SACF2D,EAAMC,MAAM6F,aACZ9F,EAAMC,MAAMG,WAAWhS,SAClB,SAAA4R,GAAK,OAAKA,EAAM4W,QAAU,QAAU,SAI7C5P,GAAQ7Y,EAAOgW,IAAV0S,KAIM,SAAA7W,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAOc,QAM5C2B,GAAQ1V,EAAOkV,GAAPlV,CAAH2oB,KACM,SAAA9W,GAAK,OAAIA,EAAMC,MAAMgB,KAAKG,OAAO2V,SAK5ClG,GAAW1iB,EAAOkV,GAAPlV,CAAH6oB,KACH,SAAAhX,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,OAIrCwW,GAAW9oB,EAAOmV,KAAV4T,KACH,SAAAlX,GAAK,OAAIA,EAAMC,MAAMG,WAAWK,OAiF3C,SAAS0J,GAAW9Z,GAClB,OAAQA,EAAMoG,YAGhB,IAOe2O,eAPE,SAACvR,EAAD/D,GAAA,IAAiBO,EAAjBP,EAAiBO,MAAjB,MAAwC,CACvDnB,QAAS6H,GAAmBlD,EAAOxD,EAAMyL,IACzCqO,WAAYA,GAAW9Z,GACvBgM,SAAUC,GAAezI,EAAfyI,CAAsBjM,EAAMyL,IACtCuB,UAAWpB,GAAgBpI,EAAOxD,EAAMyL,MAKxC,KAFasJ,CA5Ef,SAAA/V,GAOU,IANRgB,EAMQhB,EANRgB,MACAnB,EAKQG,EALRH,QACAib,EAIQ9a,EAJR8a,WACA9N,EAGQhN,EAHRgN,SACAgB,EAEQhO,EAFRgO,UACAmM,EACQna,EADRma,SAyCA,OACE/H,EAAAxO,EAAAyO,cAACyV,GAAD,CACErN,QANJ,WACEN,EAASnZ,EAAMyL,KAMb+N,SAAUM,EACV9N,SAAUA,GA1CL8N,EACL1I,EAAAxO,EAAAyO,cAAC0V,GAAD,CAAYpmB,KAAM6P,GAASwW,WAE3B5V,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAAC0V,GAAD,CACEpmB,KAAMqM,EAAYwD,GAAS6M,SAAW7M,GAASyW,UAC/Cjb,SAAUA,EACVua,SAAS,IAEXnV,EAAAxO,EAAAyO,cAAC0V,GAAD,CACEpmB,KAAMqM,EAAYwD,GAAS3E,MAAQ2E,GAASmJ,UAC5C3N,SAAUA,EACVua,SAAS,KAkCbnV,EAAAxO,EAAAyO,cAAC6V,GAAD,KACE9V,EAAAxO,EAAAyO,cAAC8V,GAAD,KAAQnnB,EAAMmW,MA5BX/E,EAAAxO,EAAAyO,cAAC+V,GAAD,KAAWlR,GAAerX,KAGnC,WACE,IAAI4d,EAAUzc,EAAMqnB,YAAc,IAC5B3K,EAAUC,KAAKC,MAAMH,EAAU,IAGrC,OAFAA,EAAUE,KAAKC,MAAMH,EAAU,IAG7BrL,EAAAxO,EAAAyO,cAACuV,GAAD,QAAA9lB,OAAc4b,EAAd,KAAA5b,OACE2b,EAAU,GAAK,IAAMA,EAAUA,IAsBhC6K,0NCxIP,IAAMxH,GAAahiB,EAAOsX,GAAVmS,MAKVvH,GAAaliB,EAAOmiB,GAAVuH,MAqBDC,OAZf,SAAAzoB,GAAgD,IAA3BC,EAA2BD,EAA3BC,OAAQka,EAAmBna,EAAnBma,SAC3B,OACE/H,EAAAxO,EAAAyO,cAACqW,GAAD,KACGzoB,EAAOa,IAAI,SAAAE,GAAK,OACfoR,EAAAxO,EAAAyO,cAACsW,GAAD,CAAY/lB,IAAK5B,EAAMyL,IACrB2F,EAAAxO,EAAAyO,cAACuW,GAAD,CAAW5nB,MAAOA,EAAOmZ,SAAUA,gMCtB7C,IASetF,GATC/V,EAAOgW,IAAV+T,KAIU,SAAA7oB,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAa2H,QC+DzD,IAWMzH,GAAc,CAClBqT,Y3DrEK,SAAqBngB,GAC1B,OAAO,SAACuD,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAW8J,gBACX9J,EAAW0E,gBACX1E,EAAW+J,iBAEbuK,KAAI,aAAAhU,OAAe6G,GACnBtJ,OAAQoC,EAAQb,a2D6DpBmM,eAGagW,MACb5C,aACEpK,YAlBa,SAACvR,EAAcukB,GAAoB,IAE1CpgB,EADUogB,EAAV3E,MACqBU,OAArBnc,WACR,MAAO,CACLE,SAAUH,GAAelE,EAAOmE,GAChC1I,OAAQ2I,GAAqBpE,EAAOmE,GACpCqgB,WAAY3hB,GAAiB7C,EAAOmE,GACpCqF,UAAWpB,GAAgBpI,EAAOmE,KAahC8M,GAFFM,CAvDJ,SAAA/V,GAQU,IAPRokB,EAOQpkB,EAPRokB,MACAvb,EAMQ7I,EANR6I,SACA5I,EAKQD,EALRC,OACA+oB,EAIQhpB,EAJRgpB,WACAhb,EAGQhO,EAHRgO,UACA8a,EAEQ9oB,EAFR8oB,YACA/b,EACQ/M,EADR+M,WAEQpE,EAAeyb,EAAMU,OAArBnc,WAOR,SAASsgB,EAAaxhB,GACpBsF,EAAWpE,EAAYlB,GAGzB,OANAuO,oBAHe,WACb8S,EAAYngB,IAEI,IAMXE,EACLuJ,EAAAxO,EAAAyO,cAAC6W,GAAD,KACE9W,EAAAxO,EAAAyO,cAAC8W,GAAD,CACErC,YAAazP,GAAexO,GAC5BmZ,MAAOnZ,EAASsO,KAChB8K,SAAUpZ,EAAS+a,MAAM1O,aACzB8R,QAASgC,EACThb,UAAWA,EACXmM,SAAU8O,IAEZ7W,EAAAxO,EAAAyO,cAAC+W,GAAD,CAAWnpB,OAAQA,EAAQka,SAAU8O,KAGvC7W,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,UCOJ,IAYMnM,GAAc,CAClB4T,SjEzEK,SAAkBthB,GACvB,OAAO,SAACmE,GACNA,EAAS,CACPyJ,MAAO,CACLnU,EAAW0I,aACX1I,EAAWwE,aACXxE,EAAW2I,cAEb2L,KAAI,UAAAhU,OAAYiG,GAChB1I,OAAQoC,EAAQ3B,UiEiEpBiN,eAGagW,MACb5C,aACEpK,YAnBa,SAACvR,EAAcukB,GAAoB,IAE1ChhB,EADUghB,EAAV3E,MACkBU,OAAlB/c,QACR,MAAO,CACLvH,MAAOsH,GAAYtD,EAAOuD,GAC1BlI,QAASmI,GAAmBxD,EAAnBwD,CAA0BD,GACnC9H,OAAQgI,GAAkBzD,EAAOuD,GACjCihB,WAAY3hB,GAAiB7C,EAAOuD,GACpCiG,UAAWpB,GAAgBpI,EAAOuD,KAahC0N,GAFFM,CAzDJ,SAAA/V,GASU,IARRokB,EAQQpkB,EARRokB,MACA5jB,EAOQR,EAPRQ,MACAX,EAMQG,EANRH,QACAI,EAKQD,EALRC,OACA+oB,EAIQhpB,EAJRgpB,WACAhb,EAGQhO,EAHRgO,UACAqb,EAEQrpB,EAFRqpB,SACAtc,EACQ/M,EADR+M,WAEQhF,EAAYqc,EAAMU,OAAlB/c,QAOR,SAASkhB,EAAaxhB,GACpBsF,EAAWhF,EAASN,GAGtB,OANAuO,oBAHe,WACbqT,EAASthB,IAEO,IAMXvH,EACL4R,EAAAxO,EAAAyO,cAAC6W,GAAD,KACE9W,EAAAxO,EAAAyO,cAAC8W,GAAD,CACErC,YAAazP,GAAe7W,GAC5BwhB,MAAOxhB,EAAM2W,KACb8K,SAAU/K,GAAerX,GACzBmnB,QAASgC,EACThb,UAAWA,EACXmM,SAAU8O,IAEZ7W,EAAAxO,EAAAyO,cAAC+W,GAAD,CAAWnpB,OAAQA,EAAQka,SAAU8O,KAGvC7W,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,4GC1CJ,IAAMoD,GAAUlmB,EAAOmmB,QAAVqE,MAIb,SAASC,GAATvpB,GAMG,IALDC,EAKCD,EALDC,OACAka,EAICna,EAJDma,SAKA,OAAO/H,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KAAG3hB,GAAUmS,EAAAxO,EAAAyO,cAAC+W,GAAD,CAAWnpB,OAAQA,EAAQka,SAAUA,KAG3D,SAAS9Z,GAATI,GAAiD,IAA/BH,EAA+BG,EAA/BH,OAChB,OACE8R,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACGthB,KAAYA,EAAOoE,QAClB0N,EAAAxO,EAAAyO,cAACmX,GAAD,KACEpX,EAAAxO,EAAAyO,cAACwO,GAAD,yBACAzO,EAAAxO,EAAAyO,cAACsR,GAAD,CAAarjB,OAAQA,MAO/B,SAASmpB,GAAT5oB,GAA4D,IAAlChB,EAAkCgB,EAAlChB,QACxB,OACEuS,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACG/hB,KAAaA,EAAQ6E,QACpB0N,EAAAxO,EAAAyO,cAACmX,GAAD,KACEpX,EAAAxO,EAAAyO,cAACwO,GAAD,wBACAzO,EAAAxO,EAAAyO,cAAC8S,GAAD,CAActlB,QAASA,MAiEjC,IAaM4V,GAAc,CAClBiU,c/DlCK,SAAuBnkB,GAC5B,OAAO,SAAC2G,GACNA,EAAS,CACPvK,KAAMH,EAAWkJ,oBAEnB,IAAMzH,EAAG,GAAAnB,OAAMC,6BAAN,aAAAD,OAAgDyD,GACzDlD,QAAQsnB,IAAI,CACVnmB,GAAUP,GACVO,GAAS,GAAA1B,OAAImB,EAAJ,YACTO,GAAS,GAAA1B,OAAImB,EAAJ,qBACTO,GAAS,GAAA1B,OAAImB,EAAJ,6BACR2mB,KAAK,SAAA5pB,GAAiD,IAAAS,EAAAjB,OAAA8M,EAAA,EAAA9M,CAAAQ,EAAA,GAA/CyG,EAA+ChG,EAAA,GAAvCH,EAAuCG,EAAA,GAA/Ba,EAA+Bb,EAAA,GAAfc,EAAed,EAAA,GACvDyL,EAAS,CACPvK,KAAMH,EAAWsE,kBACjBd,QAAS6kB,YAAUrqB,OAAAY,EAAA,EAAAZ,CAAA,GAEZiH,EAFW,CAGdnG,OAAQA,EAAOZ,MACf4B,eAAgBA,EAAezB,QAC/B0B,UAAWA,EAAUtB,SAEvBwB,EAAQ9B,QACRmqB,e+DaR/c,eAGagW,MACb5C,aACEpK,YApBa,SAACvR,EAAcukB,GAAoB,IAE1CxjB,EADUwjB,EAAV3E,MACmBU,OAAnBvf,SACR,MAAO,CACLkB,OAAQF,GAAa/B,EAAOe,GAC5BjF,OAAQkG,GAAmBhC,EAAOe,GAClCjE,eAAgBqF,GAA2BnC,EAAOe,GAClDhE,UAAWsF,GAAsBrC,EAAOe,GACxCyjB,WAAY3hB,GAAiB7C,EAAOe,GACpCyI,UAAWpB,GAAgBpI,EAAOe,KAahCkQ,GAFFM,CA/DJ,SAAA3U,GAUU,IATRgjB,EASQhjB,EATRgjB,MACA3d,EAQQrF,EARRqF,OACAnG,EAOQc,EAPRd,OACAgB,EAMQF,EANRE,eACAC,EAKQH,EALRG,UACAynB,EAIQ5nB,EAJR4nB,WACAhb,EAGQ5M,EAHR4M,UACA0b,EAEQtoB,EAFRsoB,cACA3c,EACQ3L,EADR2L,WAEQxH,EAAa6e,EAAMU,OAAnBvf,SAOR,SAAS0jB,EAAaxhB,GACpBsF,EAAWxH,EAAUkC,GAGvB,OANAuO,oBAHe,WACb0T,EAAcnkB,IAEE,CAACA,IAMZkB,EACL2L,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAAC6W,GAAD,KACE9W,EAAAxO,EAAAyO,cAAC8W,GAAD,CACErC,YAAazP,GAAe5Q,GAC5BsgB,WAAY7U,GAAWQ,MACvBsP,MAAOvb,EAAO0Q,KACd6P,QAASgC,EACThb,UAAWA,EACXmM,SAAU8O,IAEZ7W,EAAAxO,EAAAyO,cAACkX,GAAD,CAAWtpB,OAAQsB,EAAW4Y,SAAU8O,KAE1C7W,EAAAxO,EAAAyO,cAAC0X,GAAD,CAAQzpB,OAAQA,IAChB8R,EAAAxO,EAAAyO,cAACoX,GAAD,CAAgB5pB,QAASyB,KAG3B8Q,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,+MC3GJ,IAAM/M,GAAU/V,EAAOgW,IAAVkV,MAqCEC,GA5BA,WACb,IAAMC,EAAYnoB,kBAClB,OACEqQ,EAAAxO,EAAAyO,cAAC8X,GAAD,KACE/X,EAAAxO,EAAAyO,cAACoS,GAAD,CAAc3E,KAAI,GAAAhe,OAAKooB,EAAL,KAAmBxV,GAAE,GAAA5S,OAAKooB,EAAL,aACvC9X,EAAAxO,EAAAyO,cAAC0N,GAAA,EAAD,CAAOjK,KAAI,GAAAhU,OAAKooB,EAAL,UAAwB7J,UAAWM,KAC9CvO,EAAAxO,EAAAyO,cAAC+X,GAAD,CAActU,KAAI,GAAAhU,OAAKooB,EAAL,WAAyB7J,UAAWgK,KACtDjY,EAAAxO,EAAAyO,cAAC+X,GAAD,CAActU,KAAI,GAAAhU,OAAKooB,EAAL,mBAAiC7J,UAAWpJ,KAC9D7E,EAAAxO,EAAAyO,cAAC+X,GAAD,CACEtU,KAAI,GAAAhU,OAAKooB,EAAL,qCACJ7J,UAAWiK,KAEblY,EAAAxO,EAAAyO,cAAC+X,GAAD,CACEtU,KAAI,GAAAhU,OAAKooB,EAAL,0BACJ7J,UAAWkK,KAEbnY,EAAAxO,EAAAyO,cAAC+X,GAAD,CACEtU,KAAI,GAAAhU,OAAKooB,EAAL,oBACJ7J,UAAWmK,KAEbpY,EAAAxO,EAAAyO,cAAC+X,GAAD,CACEtU,KAAI,GAAAhU,OAAKooB,EAAL,sBACJ7J,UAAWoK,ihBCpCnB,IAAM5V,GAAU/V,EAAOgW,IAAV4V,MAMPvW,GAAerV,EAAO+nB,GAAP/nB,CAAH6rB,MAIZC,GAAO9rB,EAAOgW,IAAV+V,KAKa,SAAA7qB,GAAA,OAAAA,EAAG4Q,MAAkB2E,aAAaC,aAKnDsV,GAAehsB,EAAOisB,GAAPjsB,CAAHksB,MAqBHC,OAjBf,WACE,OACE7Y,EAAAxO,EAAAyO,cAAC6Y,GAAA,EAAD,KACE9Y,EAAAxO,EAAAyO,cAAC8Y,GAAD,KACE/Y,EAAAxO,EAAAyO,cAAC+Y,GAAD,MAEAhZ,EAAAxO,EAAAyO,cAACuY,GAAD,KACExY,EAAAxO,EAAAyO,cAACgZ,GAAD,MACAjZ,EAAAxO,EAAAyO,cAACiZ,GAAD,OAGFlZ,EAAAxO,EAAAyO,cAACyY,GAAD,SCLKla,GAAe,CAC1BC,WAAY,CACVgC,MAAO,UACP9T,QAAS,UACTqS,KAAM,UACNJ,MAAO,2BACPF,OAAQ,4BAEVyE,aAAc,CACZC,WAAY,IACZ0H,MAAO,KAETtL,KAAM,CACJC,KAAM,CACJqL,MAAO,OACPqE,OAAQ,OACRjN,MAAO,OACPxC,WAAY,OACZ4U,gBAAiB,QAEnB3U,OAAQ,CACNc,MAAO,IACP6U,OAAQ,IACR1V,KAAM,MAGVjB,WAAY,CACVhS,QAAS,UACTqS,KAAM,2BACNuC,OAAQ,4BAEVpC,QAAS,UACTkF,aAAc,UACdtP,OAAQ,CACNokB,OAAQ,8vBCrEGrsB,mCAAfssB,KAWkB5a,GAAMC,WAAW9R,QACtB6R,GAAMG,WAAWhS,QAEb6R,GAAMgB,KAAKC,KAAK0P,OACd3Q,GAAMgB,KAAKG,OAAO2V,OAKxB9W,GAAMG,WAAWhS,QAOjB6R,GAAMG,WAAWhS,QAEb6R,GAAMgB,KAAKC,KAAK0P,OACd3Q,GAAMgB,KAAKG,OAAO2V,SpETrC,WACE,IAAMtD,EAAQ5hB,OAAOM,SAAS2oB,KAAKrH,MAAMpiB,GACzC,GAAIoiB,EAAO,CACTjhB,aAAalB,GAAgBmiB,EAAM,GACnCjhB,aAAajB,GAAckiB,EAAM,GACjC,IAAMsH,EAAO,IAAIC,KACjBD,EAAKE,WAAWF,EAAKG,aAAeC,SAAS1H,EAAM,KACnDjhB,aAAahB,GAAcupB,EAAKK,YqEjBpCC,GACA,IrEoB2B9f,GqEpBrB+f,GAAQC,sBACZC,GACAC,8BAAoBC,0BAAgBC,ICbvB,kBAAM,SAACtoB,GAAD,OAAoB,SAACY,GAAgB,IAChD+Q,EAA8B/Q,EAA9B+Q,MAAOG,EAAuBlR,EAAvBkR,KAAMzW,EAAiBuF,EAAjBvF,OAAQktB,EAAS3nB,EAAT2nB,KAE7B,GAAI5W,EAAO,KAAA6W,EAAAhtB,OAAA8M,EAAA,EAAA9M,CACuCmW,EADvC,GACF8W,EADED,EAAA,GACWE,EADXF,EAAA,GACwBG,EADxBH,EAAA,GAIT,OAFAxoB,EAAK,CAAErC,KAAM8qB,IAENzpB,GAAe,GAAAlB,OAAIC,6BAAJ,KAAAD,OAAsCgU,IAAQ8T,KAClE,SAAAlmB,GAAQ,OACNA,EAASS,OAAOylB,KAAK,SAAAzlB,GACnB,GAAIT,EAASkpB,GAAI,CACf,IAAM5nB,EAAU3F,EAASwqB,YAAU1lB,EAAM9E,GAAQyqB,SAAW3lB,EAC5DH,EAAK,CACHrC,KAAM+qB,EACN1nB,QAASunB,EAAI/sB,OAAAY,EAAA,EAAAZ,CAAA,GAAQwF,EAAYunB,GAASvnB,SAG5ChB,EAAK,CAAErC,KAAMgrB,EAAa3nB,QAASb,EAAK0oB,YAKhD7oB,EAAKY,StESkBsH,GqEhBT+f,GAAM/f,SrEkBlB/I,aAAalB,IACf0pB,KAAKmB,MAAM3pB,aAAahB,IAAewpB,KAAKoB,OAE5C7gB,GAASxK,KqEnBbsrB,IAAS/M,OACP7N,EAAAxO,EAAAyO,cAAAD,EAAAxO,EAAAge,SAAA,KACExP,EAAAxO,EAAAyO,cAAC4a,GAAD,MACA7a,EAAAxO,EAAAyO,cAACrT,EAAD,CAAe4R,MAAOA,IACpBwB,EAAAxO,EAAAyO,cAAC6a,EAAA,EAAD,CAAUjB,MAAOA,IACf7Z,EAAAxO,EAAAyO,cAAC8a,GAAD,SAIN1Q,SAAS2Q,eAAe","file":"static/js/main.1aa68a9b.chunk.js","sourcesContent":["import * as styledComponents from \"styled-components\";\r\nimport { Theme } from \"./theme\";\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider\r\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>;\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\r\nexport default styled;\r\n","import { schema } from \"normalizr\";\r\n\r\nconst Category = new schema.Entity(\"categories\");\r\n\r\nconst Categories = new schema.Object({\r\n  categories: { items: [Category] }\r\n});\r\n\r\nconst Artist = new schema.Entity(\"artists\");\r\n\r\nconst Artists = new schema.Object({\r\n  artists: [Artist]\r\n});\r\n\r\nconst Album = new schema.Entity(\r\n  \"albums\",\r\n  {\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks ? tracks.items : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Albums = new schema.Object({\r\n  items: [Album],\r\n  albums: { items: [Album] }\r\n});\r\n\r\nconst Track = new schema.Entity(\r\n  \"tracks\",\r\n  {\r\n    album: Album,\r\n    artists: [Artist]\r\n  },\r\n  {\r\n    processStrategy: ({ album, artists, ...rest }, parent) => ({\r\n      ...rest,\r\n      album: parent[\"type\"] === \"album\" ? parent : album,\r\n      artists: artists\r\n    })\r\n  }\r\n);\r\n\r\nconst Tracks = new schema.Object({\r\n  tracks: [Track]\r\n});\r\n\r\nconst Playlist = new schema.Entity(\r\n  \"playlists\",\r\n  {\r\n    tracks: [Track]\r\n  },\r\n  {\r\n    processStrategy: ({ tracks, ...rest }) => ({\r\n      ...rest,\r\n      tracks: tracks.items ? tracks.items.map((item: any) => item.track) : []\r\n    })\r\n  }\r\n);\r\n\r\nconst Playlists = new schema.Entity(\"playlistItems\", {\r\n  playlists: { items: [Playlist] }\r\n});\r\n\r\nconst Results = new schema.Entity(\r\n  \"results\",\r\n  {\r\n    albums: [Album],\r\n    artists: [Artist],\r\n    playlists: [Playlist]\r\n  },\r\n  {\r\n    processStrategy: ({ albums, artists, playlists }) => ({\r\n      albums: albums.items,\r\n      artists: artists.items,\r\n      playlists: playlists.items\r\n    })\r\n  }\r\n);\r\n\r\nArtist.define({\r\n  albums: [Album],\r\n  relatedArtists: [Artist],\r\n  topTracks: [Track]\r\n});\r\n\r\nAlbum.define({\r\n  tracks: [Track]\r\n});\r\n\r\nexport const Schemas = {\r\n  Artist,\r\n  Artists,\r\n  Album,\r\n  Albums,\r\n  Category,\r\n  Categories,\r\n  Track,\r\n  Tracks,\r\n  Playlist,\r\n  Playlists,\r\n  Results\r\n};\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  AlbumRequest = \"ALBUM_REQUEST\",\r\n  AlbumSuccess = \"ALBUM_SUCCESS\",\r\n  AlbumFailure = \"ALBUM_FAILURE\"\r\n}\r\n\r\nexport interface AlbumSuccessAction\r\n  extends EntitiesAction<ActionType.AlbumSuccess> {}\r\n\r\nexport function getAlbum(albumId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.AlbumRequest,\r\n        ActionType.AlbumSuccess,\r\n        ActionType.AlbumFailure\r\n      ],\r\n      path: `albums/${albumId}`,\r\n      schema: Schemas.Album\r\n    });\r\n  };\r\n}\r\n","import { Action, Dispatch } from \"redux\";\r\nimport { logInRedirect } from \"../utils/authorization\";\r\n\r\nexport enum ActionType {\r\n  RequestLogIn = \"REQUEST_LOG_IN\",\r\n  ReceiveLogIn = \"RECEIVE_LOG_IN\"\r\n}\r\n\r\nexport interface RequestLogInAction extends Action<ActionType.RequestLogIn> {}\r\n\r\nfunction requestLogIn(): RequestLogInAction {\r\n  return {\r\n    type: ActionType.RequestLogIn\r\n  };\r\n}\r\n\r\nexport interface ReceiveLogInAction extends Action<ActionType.ReceiveLogIn> {}\r\n\r\nexport function receiveLogIn(): ReceiveLogInAction {\r\n  return {\r\n    type: ActionType.ReceiveLogIn\r\n  };\r\n}\r\n\r\nexport function logIn() {\r\n  return async (\r\n    dispatch: Dispatch<RequestLogInAction | ReceiveLogInAction>\r\n  ) => {\r\n    dispatch(requestLogIn());\r\n    await logInRedirect();\r\n    dispatch(receiveLogIn());\r\n  };\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { receiveLogIn } from \"../actions/authorization\";\r\n\r\nconst LOG_IN_URL = `https://accounts.spotify.com/authorize?client_id=${\r\n  process.env.REACT_APP_CLIENT_ID\r\n}&response_type=token&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\r\nconst REGEX = /#access_token=(.*?)&token_type=(.*?)&expires_in=(.*)$/;\r\nconst ACCESS_TOKEN = \"token\";\r\nconst TOKEN_TYPE = \"tokenType\";\r\nconst EXPIRES_AT = \"expiresAt\";\r\n\r\nfunction logInRedirect(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    const handleStorage = (event: StorageEvent) => {\r\n      if (event.key === ACCESS_TOKEN) {\r\n        window.removeEventListener(\"storage\", handleStorage);\r\n        resolve();\r\n      }\r\n    };\r\n    window.addEventListener(\"storage\", handleStorage);\r\n    window.location.assign(LOG_IN_URL);\r\n  });\r\n}\r\n\r\nfunction checkRedirection(): void {\r\n  const match = window.location.hash.match(REGEX);\r\n  if (match) {\r\n    localStorage[ACCESS_TOKEN] = match[1];\r\n    localStorage[TOKEN_TYPE] = match[2];\r\n    const date = new Date();\r\n    date.setSeconds(date.getSeconds() + parseInt(match[3]));\r\n    localStorage[EXPIRES_AT] = date.toString();\r\n  }\r\n}\r\n\r\nfunction initAuthorization(dispatch: Dispatch): void {\r\n  if (\r\n    !!localStorage[ACCESS_TOKEN] &&\r\n    Date.parse(localStorage[EXPIRES_AT]) > Date.now()\r\n  ) {\r\n    dispatch(receiveLogIn());\r\n  }\r\n}\r\n\r\nfunction authorizedFetch(url: string): Promise<Response> {\r\n  const tokenType = localStorage[TOKEN_TYPE];\r\n  const accessToken = localStorage[ACCESS_TOKEN];\r\n\r\n  return fetch(url, {\r\n    headers: {\r\n      Authorization: `${tokenType} ${accessToken}`\r\n    }\r\n  });\r\n}\r\n\r\nasync function fetchJson(url: string): Promise<any> {\r\n  const response = await authorizedFetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport {\r\n  logInRedirect,\r\n  checkRedirection,\r\n  initAuthorization,\r\n  authorizedFetch,\r\n  fetchJson\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { normalize } from \"normalizr\";\r\nimport { fetchJson } from \"../utils/authorization\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  ArtistRequest = \"ARTIST_REQUEST\",\r\n  ArtistSuccess = \"ARTIST_SUCCESS\",\r\n  ArtistFailure = \"ARTIST_FAILURE\",\r\n  ArtistAlbumsRequest = \"ARTIST_ALBUMS_REQUEST\",\r\n  ArtistAlbumsSuccess = \"ARTIST_ALBUMS_SUCCESS\",\r\n  ArtistAlbumsFailure = \"ARTIST_ALBUMS_FAILURE\",\r\n  ArtistRelatedArtistsRequest = \"ARTIST_RELATED_ARTISTS_REQUEST\",\r\n  ArtistRelatedArtistsSuccess = \"ARTIST_RELATED_ARTISTS_SUCCESS\",\r\n  ArtistRelatedArtistsFailure = \"ARTIST_RELATED_ARTISTS_FAILURE\",\r\n  ArtistTopTracksRequest = \"ARTIST_TOP_TRACKS_REQUEST\",\r\n  ArtistTopTracksSuccess = \"ARTIST_TOP_TRACKS_SUCCESS\",\r\n  ArtistTopTracksFailure = \"ARTIST_TOP_TRACKS_FAILURE\",\r\n  FullArtistRequest = \"FULL_ARTIST_REQUEST\",\r\n  FullArtistSuccess = \"FULL_ARTIST_SUCCESS\",\r\n  FullArtistFailure = \"FULL_ARTIST_FAILURE\"\r\n}\r\n\r\nexport interface ArtistSuccessAction\r\n  extends EntitiesAction<ActionType.ArtistSuccess> {}\r\n\r\nexport function getArtist(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRequest,\r\n        ActionType.ArtistSuccess,\r\n        ActionType.ArtistFailure\r\n      ],\r\n      path: `artists/${artistId}`,\r\n      schema: Schemas.Artist\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistAlbumsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistAlbumsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistAlbums(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistAlbumsRequest,\r\n        ActionType.ArtistAlbumsSuccess,\r\n        ActionType.ArtistAlbumsFailure\r\n      ],\r\n      path: `artists/${artistId}/albums`,\r\n      schema: Schemas.Albums,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistRelatedArtistsSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistRelatedArtistsSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistRelatedArtists(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistRelatedArtistsRequest,\r\n        ActionType.ArtistRelatedArtistsSuccess,\r\n        ActionType.ArtistRelatedArtistsFailure\r\n      ],\r\n      path: `artists/${artistId}/related-artists`,\r\n      schema: Schemas.Artists,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface ArtistTopTracksSuccessAction\r\n  extends EntitiesAction<\r\n    ActionType.ArtistTopTracksSuccess,\r\n    { artistId: string }\r\n  > {}\r\n\r\nexport function getArtistTopTracks(artistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.ArtistTopTracksRequest,\r\n        ActionType.ArtistTopTracksSuccess,\r\n        ActionType.ArtistTopTracksFailure\r\n      ],\r\n      path: `artists/${artistId}/top-tracks?country=us`,\r\n      schema: Schemas.Tracks,\r\n      data: { artistId }\r\n    });\r\n  };\r\n}\r\n\r\nexport function getFullArtist(artistId: string) {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch({\r\n      type: ActionType.FullArtistRequest\r\n    });\r\n    const url = `${process.env.REACT_APP_BASE_URL}/artists/${artistId}`;\r\n    Promise.all([\r\n      fetchJson(url),\r\n      fetchJson(`${url}/albums`),\r\n      fetchJson(`${url}/related-artists`),\r\n      fetchJson(`${url}/top-tracks?country=us`)\r\n    ]).then(([artist, albums, relatedArtists, topTracks]) => {\r\n      dispatch({\r\n        type: ActionType.FullArtistSuccess,\r\n        payload: normalize(\r\n          {\r\n            ...artist,\r\n            albums: albums.items,\r\n            relatedArtists: relatedArtists.artists,\r\n            topTracks: topTracks.tracks\r\n          },\r\n          Schemas.Artist\r\n        ).entities\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  CategoriesRequest = \"CATEGORIES_REQUEST\",\r\n  CategoriesSuccess = \"CATEGORIES_SUCCESS\",\r\n  CategoriesFailure = \"CATEGORIES_FAILURE\",\r\n  CategoryRequest = \"CATEGORY_REQUEST\",\r\n  CategorySuccess = \"CATEGORY_SUCCESS\",\r\n  CategoryFailure = \"CATEGORY_FAILURE\",\r\n  CategoryPlaylistsRequest = \"CATEGORY_PLAYLISTS_REQUEST\",\r\n  CategoryPlaylistsSuccess = \"CATEGORY_PLAYLISTS_SUCCESS\",\r\n  CategoryPlaylistsFailure = \"CATEGORY_PLAYLISTS_FAILURE\",\r\n  FeaturedPlaylistsRequest = \"FEATURED_PLAYLISTS_REQUEST\",\r\n  FeaturedPlaylistsSuccess = \"FEATURED_PLAYLISTS_SUCCESS\",\r\n  FeaturedPlaylistsFailure = \"FEATURED_PLAYLISTS_FAILURE\",\r\n  NewReleasesRequest = \"NEW_RELEASES_REQUEST\",\r\n  NewReleasesSuccess = \"NEW_RELEASES_SUCCESS\",\r\n  NewReleasesFailure = \"NEW_RELEASES_FAILURE\"\r\n}\r\n\r\nexport interface CategoriesSuccessAction\r\n  extends EntitiesAction<ActionType.CategoriesSuccess> {}\r\n\r\nexport function getCategories() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoriesRequest,\r\n        ActionType.CategoriesSuccess,\r\n        ActionType.CategoriesFailure\r\n      ],\r\n      path: \"browse/categories\",\r\n      schema: Schemas.Categories\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategorySuccessAction\r\n  extends EntitiesAction<ActionType.CategorySuccess> {}\r\n\r\nexport function getCategory(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryRequest,\r\n        ActionType.CategorySuccess,\r\n        ActionType.CategoryFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}`,\r\n      schema: Schemas.Category\r\n    });\r\n  };\r\n}\r\n\r\nexport interface CategoryPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.CategoryPlaylistsSuccess> {}\r\n\r\nexport function getCategoryPlaylists(categoryId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.CategoryPlaylistsRequest,\r\n        ActionType.CategoryPlaylistsSuccess,\r\n        ActionType.CategoryPlaylistsFailure\r\n      ],\r\n      path: `browse/categories/${categoryId}/playlists`,\r\n      schema: Schemas.Playlists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface FeaturedPlaylistsSuccessAction\r\n  extends EntitiesAction<ActionType.FeaturedPlaylistsSuccess> {}\r\n\r\nexport function getFeaturedPlaylists() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.FeaturedPlaylistsRequest,\r\n        ActionType.FeaturedPlaylistsSuccess,\r\n        ActionType.FeaturedPlaylistsFailure\r\n      ],\r\n      path: \"browse/featured-playlists\",\r\n      schema: Schemas.Playlists\r\n    });\r\n  };\r\n}\r\n\r\nexport interface NewReleasesSuccessAction\r\n  extends EntitiesAction<ActionType.NewReleasesSuccess> {}\r\n\r\nexport function getNewReleases() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.NewReleasesRequest,\r\n        ActionType.NewReleasesSuccess,\r\n        ActionType.NewReleasesFailure\r\n      ],\r\n      path: \"browse/new-releases\",\r\n      schema: Schemas.Albums\r\n    });\r\n  };\r\n}\r\n","import { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  PlaylistRequest = \"PLAYLIST_REQUEST\",\r\n  PlaylistSuccess = \"PLAYLIST_SUCCESS\",\r\n  PlaylistFailure = \"PLAYLIST_FAILURE\"\r\n}\r\n\r\nexport interface PlaylistSuccessAction\r\n  extends EntitiesAction<ActionType.PlaylistSuccess> {}\r\n\r\nexport function getPlaylist(playlistId: string) {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.PlaylistRequest,\r\n        ActionType.PlaylistSuccess,\r\n        ActionType.PlaylistFailure\r\n      ],\r\n      path: `playlists/${playlistId}`,\r\n      schema: Schemas.Playlist\r\n    });\r\n  };\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { EntitiesAction, FetchDispatch } from \"./types\";\r\nimport { Schemas } from \"./schemas\";\r\n\r\nexport enum ActionType {\r\n  SearchRequest = \"SEARCH_REQUEST\",\r\n  SearchSuccess = \"SEARCH_SUCCESS\",\r\n  SearchFailure = \"SEARCH_FAILURE\",\r\n  ClearResults = \"CLEAR_RESULTS\"\r\n}\r\n\r\nexport interface SearchSuccessAction\r\n  extends EntitiesAction<ActionType.SearchSuccess> {}\r\n\r\nexport function search(query: string) {\r\n  if (query) {\r\n    return (dispatch: FetchDispatch) => {\r\n      const encoded = encodeURIComponent(query);\r\n      dispatch({\r\n        types: [\r\n          ActionType.SearchRequest,\r\n          ActionType.SearchSuccess,\r\n          ActionType.SearchFailure\r\n        ],\r\n        path: `search?q=${encoded}*&type=album,artist,playlist`,\r\n        schema: Schemas.Results\r\n      });\r\n    };\r\n  } else {\r\n    return (dispatch: Dispatch) => {\r\n      dispatch({\r\n        type: ActionType.ClearResults\r\n      });\r\n    };\r\n  }\r\n}\r\n","import { Action } from \"redux\";\r\n\r\nexport default function createReducer(initialState: object, handlers: any) {\r\n  return function reducer(state = initialState, action: Action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Artist } from \"../types\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport {\r\n  ArtistAlbumsSuccessAction,\r\n  ArtistRelatedArtistsSuccessAction,\r\n  ArtistTopTracksSuccessAction\r\n} from \"../actions/artists\";\r\nimport { selectAlbums } from \"./albums\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State {\r\n  [id: string]: Artist;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeArtists(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.artists);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [ArtistActionType.ArtistSuccess]: mergeArtists,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: (\r\n    state: State,\r\n    action: ArtistAlbumsSuccessAction\r\n  ) => {\r\n    const { artistId, albums } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        albums: Object.keys(albums)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: (\r\n    state: State,\r\n    action: ArtistRelatedArtistsSuccessAction\r\n  ) => {\r\n    const { artistId, artists } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        relatedArtists: Object.keys(artists)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.ArtistTopTracksSuccess]: (\r\n    state: State,\r\n    action: ArtistTopTracksSuccessAction\r\n  ) => {\r\n    const { artistId, tracks } = action.payload;\r\n    const nexState = mergeArtists(state, action);\r\n    return {\r\n      ...nexState,\r\n      [artistId]: {\r\n        ...nexState[artistId],\r\n        topTracks: Object.keys(tracks)\r\n      }\r\n    };\r\n  },\r\n  [ArtistActionType.FullArtistSuccess]: mergeArtists,\r\n  [AlbumActionType.AlbumSuccess]: mergeArtists,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeArtists,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeArtists,\r\n  [SearchActionType.SearchSuccess]: mergeArtists\r\n});\r\n\r\nexport function selectIsArtist({ artists }: CombinedState, artistId: string) {\r\n  return !!artists[artistId];\r\n}\r\n\r\nexport function selectArtist({ artists }: CombinedState, artistId: string) {\r\n  return artists[artistId];\r\n}\r\n\r\nexport function selectArtistAlbums(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const albums = selectAlbums(state)(artist.albums);\r\n    if (albums) {\r\n      return albums;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistRelatedArtists(\r\n  state: CombinedState,\r\n  artistId: string\r\n) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const artists = selectArtists(state)(artist.relatedArtists);\r\n    if (artists) {\r\n      return artists;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectArtistTopTracks(state: CombinedState, artistId: string) {\r\n  const artist = selectArtist(state, artistId);\r\n  if (artist) {\r\n    const tracks = selectTracks(state)(artist.topTracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectArtists = createSelector(\r\n  (state: CombinedState) => state.artists,\r\n  (artists: {\r\n    [artistId: string]: Artist;\r\n  }): ((artistIds: string[]) => Artist[]) =>\r\n    memoize((artistIds: string[]) =>\r\n      artistIds ? artistIds.map(artistId => artists[artistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, artistId: string) {\r\n  const tracks = selectArtistTopTracks(state, artistId);\r\n  if (tracks) {\r\n    return tracks.filter(track => track.preview_url);\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, artistId: string) {\r\n  return !!selectPlayableTracks(state, artistId).length;\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Track } from \"../types\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { selectAlbum } from \"./albums\";\r\nimport { selectArtists } from \"./artists\";\r\n\r\nexport interface State {\r\n  [id: string]: Track;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeTracks(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.tracks);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeTracks,\r\n  [ArtistActionType.ArtistTopTracksSuccess]: mergeTracks,\r\n  [ArtistActionType.FullArtistSuccess]: mergeTracks,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeTracks,\r\n  [SearchActionType.SearchSuccess]: mergeTracks\r\n});\r\n\r\nexport function selectTrack({ tracks }: CombinedState, trackId: string) {\r\n  return tracks[trackId];\r\n}\r\n\r\nexport function selectTrackAlbum(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return selectAlbum(state, track.album);\r\n}\r\n\r\nexport function selectTrackArtists(state: CombinedState, trackId: string) {\r\n  const track = selectTrack(state, trackId);\r\n  return selectArtists(state)(track.artists);\r\n}\r\n\r\nexport const selectTracks = createSelector(\r\n  (state: CombinedState) => state.tracks,\r\n  (tracks: { [trackId: string]: Track }) =>\r\n    memoize((trackIds: string[]) =>\r\n      trackIds ? trackIds.map(trackId => tracks[trackId]) : []\r\n    )\r\n);\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Album, Artist } from \"../types\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State {\r\n  [id: string]: Album;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergeAlbums(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.albums);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumSuccess]: mergeAlbums,\r\n  [ArtistActionType.FullArtistSuccess]: mergeAlbums,\r\n  [PlaylistActionType.PlaylistSuccess]: mergeAlbums,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: mergeAlbums,\r\n  [BrowseActionType.NewReleasesSuccess]: mergeAlbums,\r\n  [SearchActionType.SearchSuccess]: mergeAlbums\r\n});\r\n\r\nexport function selectIsAlbum({ albums }: CombinedState, albumId: string) {\r\n  return !!albums[albumId];\r\n}\r\n\r\nexport function selectAlbum({ albums }: CombinedState, albumId: string) {\r\n  return albums[albumId];\r\n}\r\n\r\nexport const selectAlbumArtists = createSelector(\r\n  ({ albums }: CombinedState) => albums,\r\n  ({ artists }: CombinedState) => artists,\r\n  (\r\n    albums: { [albumId: string]: Album },\r\n    artists: { [artistId: string]: Artist }\r\n  ) =>\r\n    memoize((albumId: string) => {\r\n      const album = albums[albumId];\r\n      if (album) {\r\n        return album.artists.map(artistId => artists[artistId]);\r\n      }\r\n\r\n      return [];\r\n    })\r\n);\r\n\r\nexport function selectAlbumTracks(state: CombinedState, albumId: string) {\r\n  const album = selectAlbum(state, albumId);\r\n  if (album) {\r\n    const tracks = selectTracks(state)(album.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectAlbums = createSelector(\r\n  (state: CombinedState) => state.albums,\r\n  (albums: { [albumId: string]: Album }) =>\r\n    memoize((albumIds: string[]) =>\r\n      albumIds ? albumIds.map(albumId => albums[albumId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, albumId: string) {\r\n  const tracks = selectAlbumTracks(state, albumId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, albumId: string) {\r\n  return !!selectPlayableTracks(state, albumId).length;\r\n}\r\n","import { ActionType } from \"../actions/authorization\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoggedIn: false\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.ReceiveLogIn]: (state: State) => ({\r\n    ...state,\r\n    isLoggedIn: true\r\n  })\r\n});\r\n\r\nexport function selectIsLoggedIn(state: CombinedState): boolean {\r\n  return !!state.authorization.isLoggedIn;\r\n}\r\n","import merge from \"lodash/merge\";\r\nimport { createSelector } from \"reselect\";\r\nimport memoize from \"lodash/memoize\";\r\nimport { Playlist } from \"../types\";\r\nimport { EntitiesAction } from \"../actions/types\";\r\nimport {\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTracks } from \"./tracks\";\r\n\r\nexport interface State {\r\n  [id: string]: Playlist;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nfunction mergePlaylists(state: State, action: EntitiesAction<any>): State {\r\n  return merge({}, state, action.payload.playlists);\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [PlaylistActionType.PlaylistSuccess]: mergePlaylists,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: mergePlaylists,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: mergePlaylists,\r\n  [SearchActionType.SearchSuccess]: mergePlaylists\r\n});\r\n\r\nexport function selectIsPlaylist(state: CombinedState, playlistId: string) {\r\n  return !!state.playlists[playlistId];\r\n}\r\n\r\nexport function selectPlaylist(\r\n  { playlists }: CombinedState,\r\n  playlistId: string\r\n) {\r\n  return playlists[playlistId];\r\n}\r\n\r\nexport function selectPlaylistTracks(state: CombinedState, albumId: string) {\r\n  const playlist = selectPlaylist(state, albumId);\r\n  if (playlist) {\r\n    const tracks = selectTracks(state)(playlist.tracks);\r\n    if (tracks) {\r\n      return tracks;\r\n    }\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nexport const selectPlaylists = createSelector(\r\n  ({ playlists }: CombinedState) => playlists,\r\n  (playlists: { [playlistId: string]: Playlist }) =>\r\n    memoize((playlistIds: string[]) =>\r\n      playlistIds ? playlistIds.map(playlistId => playlists[playlistId]) : []\r\n    )\r\n);\r\n\r\nexport function selectPlayableTracks(state: CombinedState, playlistId: string) {\r\n  const tracks = selectPlaylistTracks(state, playlistId);\r\n  return tracks.filter(track => track.preview_url);\r\n}\r\n\r\nexport function selectIsPlayable(state: CombinedState, playlistId: string) {\r\n  return !!selectPlayableTracks(state, playlistId).length;\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Album, Category, Playlist } from \"../types\";\r\nimport {\r\n  ActionType,\r\n  CategorySuccessAction,\r\n  CategoriesSuccessAction,\r\n  NewReleasesSuccessAction,\r\n  CategoryPlaylistsSuccessAction,\r\n  FeaturedPlaylistsSuccessAction\r\n} from \"../actions/browse\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectPlaylists } from \"./playlists\";\r\nimport { selectAlbums } from \"./albums\";\r\n\r\nexport interface State {\r\n  categories: { [id: string]: Category };\r\n  categoryPlaylistIds: string[];\r\n  featuredPlaylistIds: string[];\r\n  newReleaseIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  categories: {},\r\n  categoryPlaylistIds: [],\r\n  featuredPlaylistIds: [],\r\n  newReleaseIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.CategoriesSuccess]: (\r\n    state: State,\r\n    action: CategoriesSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategorySuccess]: (\r\n    state: State,\r\n    action: CategorySuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categories: action.payload.categories\r\n  }),\r\n  [ActionType.CategoryPlaylistsSuccess]: (\r\n    state: State,\r\n    action: CategoryPlaylistsSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    categoryPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.FeaturedPlaylistsSuccess]: (\r\n    state: State,\r\n    action: FeaturedPlaylistsSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    featuredPlaylistIds: Object.keys(action.payload.playlists)\r\n  }),\r\n  [ActionType.NewReleasesSuccess]: (\r\n    state: State,\r\n    action: NewReleasesSuccessAction\r\n  ): State => ({\r\n    ...state,\r\n    newReleaseIds: Object.keys(action.payload.albums)\r\n  })\r\n});\r\n\r\nexport const selectCategories = createSelector(\r\n  ({ browse }: CombinedState) => browse.categories,\r\n  (categories: { [categoryId: string]: Category }) => Object.values(categories)\r\n);\r\n\r\nexport function selectCategory(\r\n  state: CombinedState,\r\n  categoryId: string\r\n): Category | undefined {\r\n  return state.browse.categories[categoryId];\r\n}\r\n\r\nexport function selectCategoryPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.categoryPlaylistIds);\r\n}\r\n\r\nexport function selectFeaturedPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylists(state)(state.browse.featuredPlaylistIds);\r\n}\r\n\r\nexport function selectNewReleases(state: CombinedState): Album[] {\r\n  return selectAlbums(state)(state.browse.newReleaseIds);\r\n}\r\n","import {\r\n  AlbumActionType,\r\n  ArtistActionType,\r\n  BrowseActionType,\r\n  PlaylistActionType,\r\n  SearchActionType\r\n} from \"../actions\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  count: number;\r\n}\r\n\r\nconst initialState: State = {\r\n  count: 0\r\n};\r\n\r\nfunction increment(state: State): State {\r\n  return {\r\n    ...state,\r\n    count: state.count + 1\r\n  };\r\n}\r\n\r\nfunction decrement(state: State): State {\r\n  return {\r\n    ...state,\r\n    count: state.count - 1\r\n  };\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n  [AlbumActionType.AlbumRequest]: increment,\r\n  [AlbumActionType.AlbumSuccess]: decrement,\r\n  [AlbumActionType.AlbumFailure]: decrement,\r\n  [ArtistActionType.ArtistRequest]: increment,\r\n  [ArtistActionType.ArtistSuccess]: decrement,\r\n  [ArtistActionType.ArtistFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsRequest]: increment,\r\n  [ArtistActionType.ArtistRelatedArtistsSuccess]: decrement,\r\n  [ArtistActionType.ArtistRelatedArtistsFailure]: decrement,\r\n  [ArtistActionType.ArtistAlbumsRequest]: increment,\r\n  [ArtistActionType.ArtistAlbumsSuccess]: decrement,\r\n  [ArtistActionType.ArtistAlbumsFailure]: decrement,\r\n  [ArtistActionType.FullArtistRequest]: increment,\r\n  [ArtistActionType.FullArtistSuccess]: decrement,\r\n  [ArtistActionType.FullArtistFailure]: decrement,\r\n  [BrowseActionType.CategoriesRequest]: increment,\r\n  [BrowseActionType.CategoriesSuccess]: decrement,\r\n  [BrowseActionType.CategoriesFailure]: decrement,\r\n  [BrowseActionType.CategoryRequest]: increment,\r\n  [BrowseActionType.CategorySuccess]: decrement,\r\n  [BrowseActionType.CategoryFailure]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsRequest]: increment,\r\n  [BrowseActionType.CategoryPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.CategoryPlaylistsFailure]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsRequest]: increment,\r\n  [BrowseActionType.FeaturedPlaylistsSuccess]: decrement,\r\n  [BrowseActionType.FeaturedPlaylistsFailure]: decrement,\r\n  [BrowseActionType.NewReleasesRequest]: increment,\r\n  [BrowseActionType.NewReleasesSuccess]: decrement,\r\n  [BrowseActionType.NewReleasesFailure]: decrement,\r\n  [PlaylistActionType.PlaylistRequest]: increment,\r\n  [PlaylistActionType.PlaylistSuccess]: decrement,\r\n  [PlaylistActionType.PlaylistFailure]: decrement,\r\n  [SearchActionType.SearchRequest]: increment,\r\n  [SearchActionType.SearchSuccess]: decrement,\r\n  [SearchActionType.SearchFailure]: decrement\r\n});\r\n\r\nexport function selectIsLoading(state: CombinedState): boolean {\r\n  return !!state.loading.count;\r\n}\r\n","import { Dispatch } from \"redux\";\r\nimport { Track } from \"../types\";\r\nimport { PayloadAction } from \"./types\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsPlaying, selectIsLoaded } from \"../reducers/player\";\r\nimport {\r\n  selectIsAlbum,\r\n  selectPlayableTracks as selectAlbumTracks\r\n} from \"../reducers/albums\";\r\nimport {\r\n  selectIsArtist,\r\n  selectPlayableTracks as selectArtistTracks\r\n} from \"../reducers/artists\";\r\nimport {\r\n  selectIsPlaylist,\r\n  selectPlayableTracks as selectPlaylistTracks\r\n} from \"../reducers/playlists\";\r\n\r\nexport enum ActionType {\r\n  LoadCollection = \"LOAD_COLLECTION\",\r\n  LoadTrack = \"LOAD_TRACK\",\r\n  TrackLoaded = \"TRACK_LOADED\",\r\n  Play = \"PLAY\",\r\n  Playing = \"PLAYING\",\r\n  Update = \"UPDATE\",\r\n  Pause = \"PAUSE\",\r\n  Paused = \"PAUSED\",\r\n  Seek = \"SEEK\",\r\n  Seeked = \"SEEKED\",\r\n  ChangeVolume = \"CHANGE_VOLUME\",\r\n  VolumeChanged = \"VOLUME_CHANGED\",\r\n  Ended = \"ENDED\",\r\n  Next = \"NEXT\",\r\n  Previous = \"PREVIOUS\"\r\n}\r\n\r\nexport interface LoadCollectionAction\r\n  extends PayloadAction<\r\n    ActionType.LoadCollection,\r\n    { collectionId: string; trackIds: string[]; trackId?: string }\r\n  > {}\r\n\r\nconst providers: [\r\n  (state: State, id: string) => boolean,\r\n  (state: State, id: string) => Track[]\r\n][] = [\r\n  [selectIsAlbum, selectAlbumTracks],\r\n  [selectIsArtist, selectArtistTracks],\r\n  [selectIsPlaylist, selectPlaylistTracks]\r\n];\r\n\r\nfunction getTrackIds(state: State, collectionId: string): string[] {\r\n  for (const [isCollection, getTrackIds] of providers) {\r\n    if (isCollection(state, collectionId)) {\r\n      return getTrackIds(state, collectionId).map(track => track.id);\r\n    }\r\n  }\r\n  return [];\r\n}\r\n\r\nexport function loadCollection(collectionId: string, trackId?: string) {\r\n  return (dispatch: Dispatch<LoadCollectionAction>, getState: () => State) => {\r\n    const state = getState();\r\n    const trackIds = getTrackIds(state, collectionId);\r\n    if (trackIds.length) {\r\n      dispatch({\r\n        type: ActionType.LoadCollection,\r\n        payload: {\r\n          collectionId: collectionId,\r\n          trackIds,\r\n          trackId\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport interface LoadTrackAction\r\n  extends PayloadAction<ActionType.LoadTrack, { trackId: string }> {}\r\n\r\nexport function loadTrack(trackId: string) {\r\n  return (dispatch: Dispatch<LoadTrackAction>) => {\r\n    dispatch({\r\n      type: ActionType.LoadTrack,\r\n      payload: {\r\n        trackId\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport interface TrackLoadedAction\r\n  extends PayloadAction<ActionType.TrackLoaded, number> {}\r\n\r\nexport function trackLoaded(duration: number) {\r\n  return (dispatch: Dispatch<TrackLoadedAction>) => {\r\n    dispatch({\r\n      type: ActionType.TrackLoaded,\r\n      payload: duration\r\n    });\r\n  };\r\n}\r\n\r\nexport function toggle() {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isPlaying = selectIsPlaying(state);\r\n    dispatch({\r\n      type: isPlaying ? ActionType.Pause : ActionType.Play\r\n    });\r\n  };\r\n}\r\n\r\nexport function loadToggle(collectionId: string, trackId?: string) {\r\n  return (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n    const isLoaded = selectIsLoaded(state);\r\n    if (!isLoaded(collectionId)) {\r\n      loadCollection(collectionId, trackId)(dispatch, getState);\r\n    } else if (trackId && !isLoaded(trackId)) {\r\n      loadTrack(trackId)(dispatch);\r\n    } else {\r\n      toggle()(dispatch, getState);\r\n    }\r\n  };\r\n}\r\n\r\nexport function playing() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Playing\r\n    });\r\n  };\r\n}\r\n\r\nexport interface UpdateAction\r\n  extends PayloadAction<ActionType.Update, number> {}\r\n\r\nexport function update(elapsed: number) {\r\n  return (dispatch: Dispatch<UpdateAction>) => {\r\n    dispatch({\r\n      type: ActionType.Update,\r\n      payload: elapsed\r\n    });\r\n  };\r\n}\r\n\r\nexport function paused() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Paused\r\n    });\r\n  };\r\n}\r\n\r\nexport interface SeekAction extends PayloadAction<ActionType.Seek, number> {}\r\n\r\nexport function seek(time: number) {\r\n  return (dispatch: Dispatch<SeekAction>) => {\r\n    dispatch({\r\n      type: ActionType.Seek,\r\n      payload: time\r\n    });\r\n  };\r\n}\r\n\r\nexport function seeked() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.Seeked\r\n    });\r\n  };\r\n}\r\n\r\nexport function ended() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Ended });\r\n  };\r\n}\r\n\r\nexport function next() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Next });\r\n  };\r\n}\r\n\r\nexport function previous() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({ type: ActionType.Previous });\r\n  };\r\n}\r\n\r\nexport interface ChangeVolumeAction\r\n  extends PayloadAction<\r\n    ActionType.ChangeVolume,\r\n    { volume: number; isMuted: boolean }\r\n  > {}\r\n\r\nexport function changeVolume(volume: number, isMuted: boolean) {\r\n  return (dispatch: Dispatch<ChangeVolumeAction>) => {\r\n    dispatch({\r\n      type: ActionType.ChangeVolume,\r\n      payload: {\r\n        volume,\r\n        isMuted\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function volumeChanged() {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: ActionType.VolumeChanged\r\n    });\r\n  };\r\n}\r\n","import { createSelector } from \"reselect\";\r\nimport { Track, Album } from \"../types\";\r\nimport {\r\n  ActionType,\r\n  LoadCollectionAction,\r\n  LoadTrackAction,\r\n  TrackLoadedAction,\r\n  UpdateAction,\r\n  SeekAction,\r\n  ChangeVolumeAction\r\n} from \"../actions/player\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectTrack } from \"./tracks\";\r\nimport { selectAlbum } from \"./albums\";\r\n\r\nenum PlayerState {\r\n  None = \"NONE\",\r\n  isPlaying = \"IS_PLAYING\",\r\n  isPaused = \"IS_PAUSED\"\r\n}\r\n\r\nexport enum Command {\r\n  None = \"NONE\",\r\n  Play = \"PLAY\",\r\n  Pause = \"PAUSE\",\r\n  Seek = \"SEEK\",\r\n  ChangeVolume = \"CHANGE_VOLUME\"\r\n}\r\n\r\nexport interface State {\r\n  collectionId?: string;\r\n  trackIds: string[];\r\n  trackIndex: number;\r\n  playerState: PlayerState;\r\n  duration: number;\r\n  currentTime: number;\r\n  volume: number;\r\n  isMuted: boolean;\r\n  command: Command;\r\n}\r\n\r\nconst initialState: State = {\r\n  trackIds: [],\r\n  trackIndex: 0,\r\n  playerState: PlayerState.None,\r\n  duration: 0,\r\n  currentTime: 0,\r\n  volume: 1,\r\n  isMuted: false,\r\n  command: Command.None\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.LoadCollection]: (\r\n    state: State,\r\n    action: LoadCollectionAction\r\n  ): State => {\r\n    const { collectionId, trackIds, trackId } = action.payload;\r\n    return {\r\n      ...state,\r\n      collectionId: collectionId,\r\n      trackIds: trackIds,\r\n      trackIndex: trackId ? trackIds.indexOf(trackId) : 0,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.LoadTrack]: (state: State, action: LoadTrackAction) => ({\r\n    ...state,\r\n    trackIndex: state.trackIds.indexOf(action.payload.trackId),\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.TrackLoaded]: (\r\n    state: State,\r\n    action: TrackLoadedAction\r\n  ): State => ({\r\n    ...state,\r\n    duration: action.payload\r\n  }),\r\n  [ActionType.Playing]: (state: State): State => ({\r\n    ...state,\r\n    playerState: PlayerState.isPlaying,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Update]: (state: State, action: UpdateAction): State => ({\r\n    ...state,\r\n    currentTime: action.payload,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Play]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Pause]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Pause\r\n  }),\r\n  [ActionType.Paused]: (state: State): State => ({\r\n    ...state,\r\n    playerState: PlayerState.isPaused,\r\n    command: Command.None\r\n  }),\r\n  [ActionType.Seek]: (state: State, action: SeekAction): State => ({\r\n    ...state,\r\n    currentTime: action.payload,\r\n    command: Command.Seek\r\n  }),\r\n  [ActionType.Seeked]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Ended]: (state: State): State => {\r\n    const { trackIndex, trackIds } = state;\r\n    if (trackIndex === trackIds.length - 1) {\r\n      return { ...state, playerState: PlayerState.isPaused };\r\n    }\r\n    return {\r\n      ...state,\r\n      trackIndex: trackIndex + 1,\r\n      command: Command.Play\r\n    };\r\n  },\r\n  [ActionType.Next]: (state: State): State => ({\r\n    ...state,\r\n    trackIndex: state.trackIndex + 1,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.Previous]: (state: State): State => ({\r\n    ...state,\r\n    trackIndex: state.trackIndex - 1,\r\n    command: Command.Play\r\n  }),\r\n  [ActionType.ChangeVolume]: (\r\n    state: State,\r\n    action: ChangeVolumeAction\r\n  ): State => ({\r\n    ...state,\r\n    ...action.payload,\r\n    command: Command.ChangeVolume\r\n  }),\r\n  [ActionType.VolumeChanged]: (state: State): State => ({\r\n    ...state,\r\n    command: Command.None\r\n  })\r\n});\r\n\r\nexport function selectLoadedTrack(state: CombinedState): Track | undefined {\r\n  const { trackIds, trackIndex } = state.player;\r\n\r\n  if (trackIds) {\r\n    return selectTrack(state, trackIds[trackIndex]);\r\n  }\r\n}\r\n\r\nexport function selectTrackAlbum(state: CombinedState): Album | undefined {\r\n  const { trackIds, trackIndex } = state.player;\r\n  const trackId = trackIds[trackIndex];\r\n  const track = selectTrack(state, trackId);\r\n  if (track) {\r\n    return selectAlbum(state, track.album);\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function selectIsLoaded(state: CombinedState) {\r\n  const { collectionId, trackIds, trackIndex } = state.player;\r\n  return (id: string) =>\r\n    collectionId === id || (!!trackIds.length && trackIds[trackIndex] === id);\r\n}\r\n\r\nexport function selectIsPlaying(state: CombinedState, id?: string) {\r\n  const { playerState } = state.player;\r\n  return (\r\n    (!id || selectIsLoaded(state)(id)) && playerState === PlayerState.isPlaying\r\n  );\r\n}\r\n\r\nexport function selectCanToggle(state: CombinedState) {\r\n  const { player } = state;\r\n  return (\r\n    player.playerState !== PlayerState.None &&\r\n    player.currentTime !== player.duration\r\n  );\r\n}\r\n\r\nexport function selectCanSeek(state: CombinedState) {\r\n  return state.player.playerState !== PlayerState.None;\r\n}\r\n\r\nexport function selectCanNext(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  return trackIds.length > 1 && trackIndex < trackIds.length - 1;\r\n}\r\n\r\nexport function selectCanPrevious(state: CombinedState) {\r\n  const { trackIds, trackIndex } = state.player;\r\n  return trackIds.length > 1 && trackIndex > 0;\r\n}\r\n\r\nexport interface Times {\r\n  duration: number;\r\n  currentTime: number;\r\n}\r\n\r\nexport const selectTimes = createSelector(\r\n  ({ player }: CombinedState) => player.duration,\r\n  ({ player }: CombinedState) => player.currentTime,\r\n  (duration: number, currentTime: number) => ({\r\n    duration,\r\n    currentTime\r\n  })\r\n);\r\n\r\nexport interface VolumeLevels {\r\n  volume: number;\r\n  isMuted: boolean;\r\n}\r\n\r\nexport const selectVolumeLevels = createSelector(\r\n  ({ player }: CombinedState) => player.volume,\r\n  ({ player }: CombinedState) => player.isMuted,\r\n  (volume: number, isMuted: boolean) => ({\r\n    volume,\r\n    isMuted\r\n  })\r\n);\r\n\r\nexport function selectCommand(state: CombinedState): Command {\r\n  return state.player.command;\r\n}\r\n","import { Album, Artist, Playlist } from \"../types\";\r\nimport { ActionType, SearchSuccessAction } from \"../actions/search\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\nimport { selectAlbums as selectAlbumsById } from \"./albums\";\r\nimport { selectArtists as selectArtistsById } from \"./artists\";\r\nimport { selectPlaylists as selectPlaylistsById } from \"./playlists\";\r\n\r\nexport interface State {\r\n  albumIds: string[];\r\n  artistIds: string[];\r\n  playlistIds: string[];\r\n}\r\n\r\nconst initialState: State = {\r\n  albumIds: [],\r\n  artistIds: [],\r\n  playlistIds: []\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.SearchSuccess]: (state: State, action: SearchSuccessAction) => {\r\n    const { results } = action.payload;\r\n    const { albums, artists, playlists } = results[Object.keys(results)[0]];\r\n    return {\r\n      ...state,\r\n      albumIds: albums,\r\n      artistIds: artists,\r\n      playlistIds: playlists\r\n    };\r\n  },\r\n  [ActionType.ClearResults]: () => initialState\r\n});\r\n\r\nexport function selectAlbums(state: CombinedState): Album[] {\r\n  return selectAlbumsById(state)(state.search.albumIds);\r\n}\r\n\r\nexport function selectArtists(state: CombinedState): Artist[] {\r\n  return selectArtistsById(state)(state.search.artistIds).sort(\r\n    (x, y) => y.popularity - x.popularity\r\n  );\r\n}\r\n\r\nexport function selectPlaylists(state: CombinedState): Playlist[] {\r\n  return selectPlaylistsById(state)(state.search.playlistIds);\r\n}\r\n","import { UserProfile } from \"../types\";\r\nimport { FetchDispatch, PayloadAction } from \"./types\";\r\n\r\nexport enum ActionType {\r\n  UserProfileRequest = \"USER_PROFILE_REQUEST\",\r\n  UserProfileSuccess = \"USER_PROFILE_SUCCESS\",\r\n  UserProfileFailure = \"USER_PROFILE_FAILURE\"\r\n}\r\n\r\nexport interface UserProfileSuccessAction\r\n  extends PayloadAction<ActionType.UserProfileSuccess, UserProfile> {}\r\n\r\nexport function getUserProfile() {\r\n  return (dispatch: FetchDispatch) => {\r\n    dispatch({\r\n      types: [\r\n        ActionType.UserProfileRequest,\r\n        ActionType.UserProfileSuccess,\r\n        ActionType.UserProfileFailure\r\n      ],\r\n      path: \"me\"\r\n    });\r\n  };\r\n}\r\n","import { UserProfile } from \"../types\";\r\nimport { ActionType, UserProfileSuccessAction } from \"../actions/userProfile\";\r\nimport { State as CombinedState } from \".\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport interface State {\r\n  userProfile?: UserProfile;\r\n}\r\n\r\nconst initialState: State = {};\r\n\r\nexport default createReducer(initialState, {\r\n  [ActionType.UserProfileSuccess]: (\r\n    state: State,\r\n    action: UserProfileSuccessAction\r\n  ) => ({\r\n    ...state,\r\n    userProfile: action.payload\r\n  })\r\n});\r\n\r\nexport function selectUserProfile(\r\n  state: CombinedState\r\n): UserProfile | undefined {\r\n  return state.userProfile.userProfile;\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport albums, { State as AlbumsState } from \"./albums\";\r\nimport artists, { State as ArtistsState } from \"./artists\";\r\nimport authorization, { State as AuthorizationState } from \"./authorization\";\r\nimport browse, { State as BrowseState } from \"./browse\";\r\nimport loading, { State as LoadingState } from \"./loading\";\r\nimport player, { State as PlayerState } from \"./player\";\r\nimport playlists, { State as PlaylistsState } from \"./playlists\";\r\nimport search, { State as SearchState } from \"./search\";\r\nimport tracks, { State as TracksState } from \"./tracks\";\r\nimport userProfile, { State as UserProfileState } from \"./userProfile\";\r\n\r\nexport interface State {\r\n  albums: AlbumsState;\r\n  artists: ArtistsState;\r\n  authorization: AuthorizationState;\r\n  browse: BrowseState;\r\n  loading: LoadingState;\r\n  player: PlayerState;\r\n  playlists: PlaylistsState;\r\n  search: SearchState;\r\n  tracks: TracksState;\r\n  userProfile: UserProfileState;\r\n}\r\n\r\nexport default combineReducers<State>({\r\n  albums,\r\n  artists,\r\n  authorization,\r\n  browse,\r\n  loading,\r\n  player,\r\n  playlists,\r\n  search,\r\n  tracks,\r\n  userProfile\r\n});\r\n","const click = (props: any) => `\r\n  overflow: hidden;\r\n  position relative;\r\n  \r\n  &::before, &::after {\r\n    content: \"\";\r\n    height: 100%;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    background: ${props.theme.background.active};\r\n    opacity: 0;\r\n    transition: opacity .2s;\r\n  }\r\n  \r\n  &:not(:disabled):hover {\r\n    color: ${props.theme.foreground.default};\r\n  }\r\n\r\n  &:not(:disabled):hover::before {\r\n    background: ${props.theme.background.hover};\r\n  }\r\n\r\n  &:not(:disabled):active::after {\r\n    opacity: 1;\r\n    transition: 0s;\r\n  }\r\n`;\r\n\r\nexport { click };\r\n","import styled from \"styled-components\";\r\nimport { click } from \"../../styles/effects\";\r\n\r\nconst ButtonBase = styled.button`\r\n  ${click}\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.dark};\r\n  }\r\n`;\r\n\r\nexport default ButtonBase;\r\n","import styled from \"../../styles/styled\";\r\nimport ButtonBase from \"./ButtonBase\";\r\n\r\nconst Button = styled(ButtonBase)`\r\n  background: ${props => props.theme.primary};\r\n  border-radius: 25px;\r\n  color: ${props => props.theme.foreground.default};\r\n  height: 50px;\r\n  padding: 12.5px 25px;\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${props => props.theme.font.size.extraLarge};\r\n  font-weight: ${props => props.theme.font.weight.bold};\r\n  margin-bottom: 25px;\r\n  text-align: center;\r\n  width: 100%;\r\n  word-break: break-word;\r\n`;\r\n\r\nexport default Heading;\r\n","import React, { HTMLAttributes } from \"react\";\r\n\r\nexport enum IconType {\r\n  MusicNote = \"music_note\",\r\n  MusicOff = \"music_off\",\r\n  Pause = \"pause\",\r\n  Person = \"person\",\r\n  PlayArrow = \"play_arrow\",\r\n  Refresh = \"refresh\",\r\n  Search = \"search\",\r\n  SkipNext = \"skip_next\",\r\n  SkipPrevious = \"skip_previous\",\r\n  ViewModule = \"view_module\",\r\n  VolumeOff = \"volume_off\",\r\n  VolumeUp = \"volume_up\",\r\n  Wifi = \"wifi\"\r\n}\r\n\r\ninterface Props {\r\n  type: IconType;\r\n}\r\n\r\nfunction Icon({ className, type }: Props & HTMLAttributes<HTMLElement>) {\r\n  return <i className={`material-icons ${className}`}>{type}</i>;\r\n}\r\n\r\nexport default Icon;\r\n","import React, { useState, HTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon, { IconType } from \"./Icon\";\r\n\r\nexport enum ImageShape {\r\n  Square = \"SQUARE\",\r\n  Round = \"ROUND\"\r\n}\r\n\r\nconst StyledImg = styled.img<{ shape: ImageShape; isLoaded: boolean }>`\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  height: auto;\r\n  object-fit: cover;\r\n  opacity: ${props => (props.isLoaded ? \"1\" : \"0\")}\r\n  width: 100%;\r\n  transition: opacity .2s;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)<{ shape: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.shape === ImageShape.Round && \"border-radius: 50%;\"}\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\ninterface Props {\r\n  source?: string;\r\n  shape: ImageShape;\r\n}\r\n\r\nfunction Image({\r\n  className,\r\n  source,\r\n  shape\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  function handleLoad() {\r\n    setIsLoaded(true);\r\n  }\r\n\r\n  return source ? (\r\n    <StyledImg\r\n      className={className}\r\n      src={source}\r\n      shape={shape}\r\n      onLoad={handleLoad}\r\n      isLoaded={isLoaded}\r\n    />\r\n  ) : (\r\n    <StyledIcon className={className} type={IconType.Person} shape={shape} />\r\n  );\r\n}\r\n\r\nImage.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default Image;\r\n","import React, { ButtonHTMLAttributes } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonBase from \"./ButtonBase\";\r\nimport Icon, { IconType } from \"./Icon\";\r\n\r\nconst StyedButton = styled(ButtonBase)`\r\n  border-radius: 50%;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  margin: 6.25px 12.5px;\r\n  padding: 6.25px;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.darker};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  font-size: 25px;\r\n`;\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  iconType: IconType;\r\n}\r\n\r\nfunction RoundButton({ iconType, ...rest }: Props) {\r\n  return (\r\n    <StyedButton {...rest}>\r\n      <StyledIcon type={iconType} />\r\n    </StyedButton>\r\n  );\r\n}\r\n\r\nexport default RoundButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst Text = styled.span`\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst StyledHeader = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: ${props => props.theme.font.size.large};\r\n  font-weight: ${props => props.theme.font.weight.bold};\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: 12.5px;\r\n`;\r\n\r\nconst Title = () => {\r\n  return (\r\n    <Link to={`${process.env.PUBLIC_URL}/browse`}>\r\n      <StyledHeader>\r\n        <StyledIcon type={IconType.Wifi} />\r\n        Spotify\r\n      </StyledHeader>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: 12.5px;\r\n`;\r\n\r\nconst User = (props: UserProfile) => {\r\n  const { display_name } = props;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledIcon type={IconType.Person} />\r\n      <span>{display_name}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { UserProfile } from \"../../types\";\r\nimport { getUserProfile } from \"../../actions/userProfile\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoggedIn } from \"../../reducers/authorization\";\r\nimport { selectUserProfile } from \"../../reducers/userProfile\";\r\nimport Title from \"./Title\";\r\nimport User from \"./User\";\r\n\r\nconst padding = 50;\r\nconst Wrapper = styled.header`\r\n  align-items: center;\r\n  display: flex;\r\n  background: ${props => props.theme.primary};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  flex-shrink: 0;\r\n  height: 50px;\r\n  justify-content: space-between;\r\n  padding: 0 ${padding / 2}px;\r\n  z-index: 2;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    padding: 0 ${padding}px;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  isLoggedIn: boolean;\r\n  userProfile?: UserProfile;\r\n  getUserProfile: () => void;\r\n}\r\n\r\nfunction Header({\r\n  className,\r\n  isLoggedIn,\r\n  userProfile,\r\n  getUserProfile\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  const effect = () => {\r\n    if (isLoggedIn) {\r\n      getUserProfile();\r\n    }\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Title />\r\n      {userProfile && <User {...userProfile} />}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state),\r\n  userProfile: selectUserProfile(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getUserProfile\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Header);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport { click } from \"../../styles/effects\";\r\nimport { Icon, IconType } from \"../core\";\r\n\r\nconst width = 200;\r\nconst Wrapper = styled.ul`\r\n  background: ${props => props.theme.background.dark};\r\n  box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 0;\r\n  justify-content: center;\r\n  padding: 0 25px;\r\n  width: 100%;\r\n  z-index: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    box-shadow: 2px 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    padding: 25px 0;\r\n    width: ${width}px;\r\n  }\r\n`;\r\n\r\nconst padding = 50;\r\nconst StyledNavLink = styled(NavLink)`\r\n  ${click}\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: 50px;\r\n  padding: 0 ${padding / 2}px;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    border-bottom: 2.5px solid ${props => props.theme.primaryLight};\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    padding: 0 ${padding}px;\r\n\r\n    &.active {\r\n      border: none;\r\n      border-right: 2.5px solid ${props => props.theme.primaryLight};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-right: 12.5px;\r\n`;\r\n\r\nconst Text = styled.span``;\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <Wrapper>\r\n      <li>\r\n        <StyledNavLink to={`${process.env.PUBLIC_URL}/browse`}>\r\n          <StyledIcon type={IconType.ViewModule} />\r\n          <Text>Browse</Text>\r\n        </StyledNavLink>\r\n      </li>\r\n      <li>\r\n        <StyledNavLink to={`${process.env.PUBLIC_URL}/search`}>\r\n          <StyledIcon type={IconType.Search} />\r\n          <Text>Search</Text>\r\n        </StyledNavLink>\r\n      </li>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import { Artist, Image } from \"../types\";\r\n\r\nexport function getArtistNames(artists: Artist[]): string {\r\n  return artists.map(artist => artist.name).join(\", \");\r\n}\r\n\r\nexport function getImageSource(object: {\r\n  images: Image[];\r\n}): string | undefined {\r\n  return object && object.images && object.images.length\r\n    ? object.images[0].url\r\n    : undefined;\r\n}\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Album } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectAlbumArtists } from \"../../reducers/albums\";\r\nimport { Image, Text } from \"../core\";\r\nimport { getImageSource, getArtistNames } from \"../../utils\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyedImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  height: 75px;\r\n  margin: -12.5px 12.5px -12.5px -12.5px;\r\n  width: 75px;\r\n`;\r\n\r\nconst Infos = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  margin-bottom: 6.25px;\r\n`;\r\n\r\nconst ArtistNames = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-weight: ${props => props.theme.font.weight.light};\r\n`;\r\n\r\ninterface OwnProps {\r\n  album: Album;\r\n}\r\n\r\ninterface Props extends OwnProps {\r\n  artists: Artist[];\r\n}\r\n\r\nfunction AlbumInfos({\r\n  className,\r\n  album,\r\n  artists\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  return (\r\n    <Wrapper className={className}>\r\n      <StyedImage source={getImageSource(album)} />\r\n      <Infos>\r\n        <Title>{album.name}</Title>\r\n        <ArtistNames>{getArtistNames(artists)}</ArtistNames>\r\n      </Infos>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, { album }: OwnProps) => ({\r\n  artists: selectAlbumArtists(state)(album.id)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(AlbumInfos);\r\n","import React, { useEffect, useRef, SyntheticEvent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Track } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectLoadedTrack,\r\n  Times,\r\n  selectTimes,\r\n  Command,\r\n  selectCommand,\r\n  VolumeLevels,\r\n  selectVolumeLevels\r\n} from \"../../reducers/player\";\r\nimport {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n} from \"../../actions/player\";\r\n\r\ninterface Props {\r\n  loadedTrack?: Track;\r\n  times: Times;\r\n  command: Command;\r\n  volumeLevels: VolumeLevels;\r\n  trackLoaded: (duration: number) => void;\r\n  playing: () => void;\r\n  update: (elaped: number) => void;\r\n  paused: () => void;\r\n  seeked: () => void;\r\n  volumeChanged: () => void;\r\n  ended: () => void;\r\n}\r\n\r\nfunction Audio({\r\n  loadedTrack,\r\n  times,\r\n  volumeLevels,\r\n  command,\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n}: Props) {\r\n  const audio = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    const currentAudio = audio.current;\r\n\r\n    if (currentAudio) {\r\n      const { currentTime } = times;\r\n      const { volume, isMuted } = volumeLevels;\r\n\r\n      switch (command) {\r\n        case Command.Play:\r\n          currentAudio.play();\r\n          break;\r\n        case Command.Pause:\r\n          currentAudio.pause();\r\n          break;\r\n        case Command.Seek:\r\n          currentAudio.currentTime = currentTime;\r\n          break;\r\n        case Command.ChangeVolume:\r\n          currentAudio.volume = isMuted ? 0 : volume;\r\n      }\r\n    }\r\n  });\r\n\r\n  function handleLoadedMetadata(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    trackLoaded(target.duration);\r\n  }\r\n\r\n  function handleTimeUpdate(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    update(target.currentTime);\r\n  }\r\n\r\n  function handlePause(event: SyntheticEvent<HTMLAudioElement>) {\r\n    const target = event.target as HTMLAudioElement;\r\n    if (target.currentTime !== target.duration) {\r\n      paused();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <audio\r\n      ref={audio}\r\n      src={loadedTrack && loadedTrack.preview_url}\r\n      onLoadedMetadata={handleLoadedMetadata}\r\n      onPlay={playing}\r\n      onTimeUpdate={handleTimeUpdate}\r\n      onPause={handlePause}\r\n      onSeeked={seeked}\r\n      onVolumeChange={volumeChanged}\r\n      onEnded={ended}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  loadedTrack: selectLoadedTrack(state),\r\n  times: selectTimes(state),\r\n  command: selectCommand(state),\r\n  volumeLevels: selectVolumeLevels(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  trackLoaded,\r\n  playing,\r\n  update,\r\n  paused,\r\n  seeked,\r\n  volumeChanged,\r\n  ended\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Audio);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { IconType, RoundButton } from \"../core\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nconst MainButton = styled(RoundButton)`\r\n  transform: scale(1.25);\r\n`;\r\n\r\ninterface Props {\r\n  isPlaying: boolean;\r\n  canToggle: boolean;\r\n  canNext: boolean;\r\n  canPrevious: boolean;\r\n  onToggle: () => void;\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n}\r\n\r\nfunction Controls({\r\n  canPrevious,\r\n  onPrevious,\r\n  isPlaying,\r\n  canToggle,\r\n  onToggle,\r\n  canNext,\r\n  onNext\r\n}: Props) {\r\n  return (\r\n    <Wrapper>\r\n      <RoundButton\r\n        disabled={!canPrevious}\r\n        onClick={onPrevious}\r\n        iconType={IconType.SkipPrevious}\r\n      />\r\n\r\n      <MainButton\r\n        disabled={!canToggle}\r\n        onClick={onToggle}\r\n        iconType={isPlaying ? IconType.Pause : IconType.PlayArrow}\r\n      />\r\n\r\n      <RoundButton\r\n        disabled={!canNext}\r\n        onClick={onNext}\r\n        iconType={IconType.SkipNext}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div<{ isDisabled: boolean }>`\r\n  align-items: center;\r\n  border-radius: 2.5px;\r\n  display: flex;\r\n  cursor: ${props => (props.isDisabled ? \"default\" : \"pointer\")};\r\n  height: 25px;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nconst Left = styled.div<{ width: number }>`\r\n  background: ${props => props.theme.primaryLight};\r\n  border-radius: 2.5px 0 0 2.5px;\r\n  height: 2.5px;\r\n  left: 0;\r\n  position: absolute;\r\n  width: calc(${props => props.width * 100}%);\r\n`;\r\n\r\nconst Thumb = styled.div<{ position: number; isDisabled: boolean }>`\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  height: 25px;\r\n  left: calc(${props => props.position * 100}% - 12.5px);\r\n  position: absolute;\r\n  visibility: hidden;\r\n  width: 25px;\r\n  z-index: 1;\r\n  transition: left 0.2s;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.default};\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n    content: \"\";\r\n    height: 50%;\r\n    left: 25%;\r\n    position: absolute;\r\n    top: 25%;\r\n    width: 50%;\r\n  }\r\n\r\n  ${Wrapper}:hover & {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Right = styled.div<{ width: number }>`\r\n  background: ${props => props.theme.foreground.dark};\r\n  border-radius: 0 2.5px 2.5px 0;\r\n  height: 2.5px;\r\n  position: absolute;\r\n  right: 0;\r\n  width: calc(100% - ${props => props.width * 100}%);\r\n`;\r\n\r\ninterface Props {\r\n  className?: string;\r\n  value: number;\r\n  canChange: boolean;\r\n  onChange?: (value: number) => void;\r\n}\r\n\r\nfunction Slider(props: Props) {\r\n  const [isDown, setIsDown] = useState(false);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const wrapper = useRef<HTMLDivElement>(null);\r\n  const thumb = useRef<HTMLDivElement>(null);\r\n\r\n  function getValue(x: number) {\r\n    const currentWrapper = wrapper.current;\r\n    const currentTHunb = thumb.current;\r\n    if (!currentWrapper || !currentTHunb) {\r\n      return 0;\r\n    }\r\n\r\n    const clientRect = currentWrapper.getBoundingClientRect();\r\n    let value = (x - clientRect.left) / currentWrapper.clientWidth;\r\n    if (value < 0) {\r\n      value = 0;\r\n    } else if (value > 1) {\r\n      value = 1;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  function handleMouseDown(event: React.MouseEvent<HTMLElement>) {\r\n    const { canChange } = props;\r\n    if (!canChange) {\r\n      return;\r\n    }\r\n\r\n    setIsDown(true);\r\n    setValue(getValue(event.pageX));\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n  }\r\n\r\n  function handleMouseMove(event: MouseEvent) {\r\n    setValue(getValue(event.pageX));\r\n  }\r\n\r\n  function handleMouseUp(event: MouseEvent) {\r\n    document.removeEventListener(\"mousemove\", handleMouseMove);\r\n    document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    setIsDown(false);\r\n    const { onChange } = props;\r\n    if (onChange) {\r\n      const value = getValue(event.pageX);\r\n      onChange(value);\r\n    }\r\n  }\r\n\r\n  function getCurrentValue() {\r\n    return isDown ? value : props.value;\r\n  }\r\n\r\n  const { className, canChange } = props;\r\n  const currentValue = getCurrentValue();\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapper}\r\n      onMouseDown={handleMouseDown}\r\n      isDisabled={!canChange}\r\n      className={className}\r\n    >\r\n      <Left width={currentValue} />\r\n      {canChange && (\r\n        <Thumb ref={thumb} position={currentValue} isDisabled={!canChange} />\r\n      )}\r\n      <Right width={currentValue} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nSlider.defaultProps = {\r\n  value: 0,\r\n  canChange: true\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-cotent: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProgressTime = styled.div`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.font.size.small};\r\n  font-weight: ${props => props.theme.font.weight.light};\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  margin: 0 12.5px;\r\n`;\r\n\r\ninterface Props {\r\n  duration: number;\r\n  currentTime: number;\r\n  canSeek: boolean;\r\n  onSeek: (time: number) => void;\r\n}\r\n\r\nfunction Playback({ duration, currentTime, canSeek, onSeek }: Props) {\r\n  function renderTime(seconds: number) {\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.round(seconds);\r\n\r\n    return (\r\n      <ProgressTime>\r\n        {`${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`}\r\n      </ProgressTime>\r\n    );\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    onSeek(duration * value);\r\n  }\r\n\r\n  const progress = duration ? currentTime / duration : 0;\r\n\r\n  return (\r\n    <Wrapper>\r\n      {renderTime(currentTime)}\r\n      <StyledSlider\r\n        value={progress}\r\n        onChange={handleChange}\r\n        canChange={canSeek}\r\n      />\r\n      {renderTime(duration)}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Playback;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { IconType, RoundButton } from \"../core\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  width: 100px;\r\n`;\r\n\r\ninterface Props {\r\n  volume: number;\r\n  isMuted: boolean;\r\n  onChange: (volume: number, isMuted: boolean) => void;\r\n}\r\n\r\nfunction Volume({ volume, isMuted, onChange }: Props) {\r\n  function handleClick() {\r\n    onChange(volume, !isMuted);\r\n  }\r\n\r\n  function handleChange(value: number) {\r\n    onChange(value, false);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <RoundButton\r\n        onClick={handleClick}\r\n        iconType={isMuted ? IconType.VolumeOff : IconType.VolumeUp}\r\n      />\r\n      <StyledSlider value={isMuted ? 0 : volume} onChange={handleChange} />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Volume;\r\n","import React, { HTMLAttributes } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album } from \"../../types\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectTrackAlbum,\r\n  selectIsPlaying,\r\n  selectCanToggle,\r\n  Times,\r\n  selectTimes,\r\n  selectCanSeek,\r\n  selectCanNext,\r\n  selectCanPrevious,\r\n  VolumeLevels,\r\n  selectVolumeLevels\r\n} from \"../../reducers/player\";\r\nimport {\r\n  toggle,\r\n  seek,\r\n  next,\r\n  previous,\r\n  changeVolume\r\n} from \"../../actions/player\";\r\nimport AlbumInfos from \"./AlbumInfos\";\r\nimport Audio from \"./Audio\";\r\nimport Controls from \"./Controls\";\r\nimport Playback from \"./Playback\";\r\nimport Volume from \"./Volume\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  background: ${props => props.theme.background.light};\r\n  box-sizing: border-box;\r\n  box-shadow: 0 -2px 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  height: 100px;\r\n  padding: 25px;\r\n  z-index: 2;\r\n`;\r\n\r\nconst ThirdWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    width: 33.33%;\r\n  }\r\n`;\r\n\r\nconst LeftWrapper = styled(ThirdWrapper)`\r\n  display: none;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    display: block;\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\nconst CenterWrapper = styled(ThirdWrapper)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst RightWrapper = styled(ThirdWrapper)`\r\n  display: none;\r\n  justify-content: flex-end;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    display: flex;\r\n  }\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    width: 25%;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  album?: Album;\r\n  isPlaying: boolean;\r\n  times: Times;\r\n  canToggle: boolean;\r\n  canSeek: boolean;\r\n  canNext: boolean;\r\n  canPrevious: boolean;\r\n  volumeLevels: VolumeLevels;\r\n  toggle: () => void;\r\n  seek: (time: number) => void;\r\n  next: () => void;\r\n  previous: () => void;\r\n  changeVolume: (volume: number, isMuted: boolean) => void;\r\n}\r\n\r\nfunction Player({\r\n  className,\r\n  album,\r\n  isPlaying,\r\n  times,\r\n  canToggle,\r\n  canSeek,\r\n  canNext,\r\n  canPrevious,\r\n  volumeLevels,\r\n  toggle,\r\n  seek,\r\n  next,\r\n  previous,\r\n  changeVolume\r\n}: Props & HTMLAttributes<HTMLElement>) {\r\n  function handleToggle() {\r\n    toggle();\r\n  }\r\n\r\n  return (\r\n    <Wrapper className={className}>\r\n      <LeftWrapper>{album && <AlbumInfos album={album} />}</LeftWrapper>\r\n\r\n      <CenterWrapper>\r\n        <Controls\r\n          isPlaying={isPlaying}\r\n          canToggle={canToggle}\r\n          onToggle={handleToggle}\r\n          canNext={canNext}\r\n          onNext={next}\r\n          canPrevious={canPrevious}\r\n          onPrevious={previous}\r\n        />\r\n        <Playback\r\n          duration={times.duration}\r\n          currentTime={times.currentTime}\r\n          canSeek={canSeek}\r\n          onSeek={seek}\r\n        />\r\n      </CenterWrapper>\r\n\r\n      <RightWrapper>\r\n        <Volume\r\n          volume={volumeLevels.volume}\r\n          isMuted={volumeLevels.isMuted}\r\n          onChange={changeVolume}\r\n        />\r\n      </RightWrapper>\r\n\r\n      <Audio />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  album: selectTrackAlbum(state),\r\n  isPlaying: selectIsPlaying(state),\r\n  times: selectTimes(state),\r\n  canToggle: selectCanToggle(state),\r\n  canSeek: selectCanSeek(state),\r\n  canNext: selectCanNext(state),\r\n  canPrevious: selectCanPrevious(state),\r\n  volumeLevels: selectVolumeLevels(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  toggle,\r\n  seek,\r\n  next,\r\n  previous,\r\n  changeVolume\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Player);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  from: string;\r\n  to: string;\r\n}\r\n\r\nfunction DefaultRoute({ from, to }: Props) {\r\n  return <Route exact path={from} render={() => <Redirect to={to} />} />;\r\n}\r\n\r\nexport default DefaultRoute;\r\n","import React from \"react\";\r\nimport {\r\n  Route,\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Redirect,\r\n  withRouter\r\n} from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoggedIn } from \"../reducers/authorization\";\r\n\r\ninterface Props extends RouteProps {\r\n  isLoggedIn: boolean;\r\n}\r\n\r\nfunction PrivateRoute({\r\n  component: Component,\r\n  isLoggedIn,\r\n  ...rest\r\n}: Props & RouteComponentProps) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? (\r\n          Component && <Component {...props} />\r\n        ) : (\r\n          <Redirect to={`${process.env.PUBLIC_URL}/login`} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoggedIn: selectIsLoggedIn(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    null\r\n  )(PrivateRoute)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Heading } from \"../core\";\r\nimport { logInRedirect } from \"../../utils/authorization\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100px;\r\n`;\r\n\r\nfunction LogIn() {\r\n  function handleCLick() {\r\n    logInRedirect();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>You are not logged in.</Heading>\r\n      <StyledButton onClick={handleCLick}>Log In</StyledButton>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Image, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { ImageShape } from \"../core/Image\";\r\n\r\nconst StyledList = styled.ul`\r\n  align-content: flex-start;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin: -12.5px;\r\n`;\r\n\r\nconst length = 200;\r\nconst StyledItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 12.5px;\r\n  width: ${length / 2}px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(ButtonBase)<{ type: ImageShape }>`\r\n  background: ${props => props.theme.background.light};\r\n  ${props => props.type === ImageShape.Round && \"border-radius: 50%;\"}\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  height: ${length / 2}px;\r\n  margin-bottom: 12.5px;\r\n  width: ${length / 2}px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    height: ${length}px;\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst StyledImge = styled(Image)`\r\n  font-size: ${length / 4}px;\r\n  line-height: ${length / 2}px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    font-size: ${length / 2}px;\r\n    line-height: ${length}px;\r\n  }\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.font.size.medium};\r\n  margin-bottom: 6.25px;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  font-size: ${props => props.theme.font.size.medium};\r\n  font-weight: ${props => props.theme.font.weight.light};\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport interface Cover {\r\n  id: string;\r\n  image?: string;\r\n  title: string;\r\n  subTitle?: string;\r\n}\r\n\r\nfunction Cover({\r\n  cover,\r\n  shape: type,\r\n  onClick\r\n}: {\r\n  cover: Cover;\r\n  shape: ImageShape;\r\n  onClick: (coverId: string) => void;\r\n}) {\r\n  function handleClick() {\r\n    onClick(cover.id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledButton onClick={handleClick} type={type}>\r\n        <StyledImge source={cover.image} />\r\n      </StyledButton>\r\n      <Title>{cover.title}</Title>\r\n      {cover.subTitle && <SubTitle>{cover.subTitle}</SubTitle>}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  covers: Cover[];\r\n  shape: ImageShape;\r\n  onClick: (id: string) => void;\r\n}\r\n\r\nfunction Covers({ covers, shape, onClick }: Props) {\r\n  return (\r\n    <StyledList>\r\n      {covers.map(cover => (\r\n        <StyledItem key={cover.id}>\r\n          <Cover cover={cover} shape={shape} onClick={onClick} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nCovers.defaultProps = {\r\n  shape: ImageShape.Square\r\n};\r\n\r\nexport default Covers;\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Category } from \"../../types\";\r\nimport Covers, { Cover } from \"./Covers\";\r\n\r\nfunction getCovers(categories: Category[]): Cover[] {\r\n  return categories.map(category => ({\r\n    id: category.id,\r\n    image:\r\n      category.icons && category.icons.length\r\n        ? category.icons[0].url\r\n        : undefined,\r\n    title: category.name\r\n  }));\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  categories: Category[];\r\n}\r\n\r\nfunction CategoryCovers({ history, categories }: Props) {\r\n  function handleClick(categoryId: string) {\r\n    history.push(\r\n      `${process.env.PUBLIC_URL}/categories/${categoryId}/playlists`\r\n    );\r\n  }\r\n\r\n  const covers = getCovers(categories);\r\n  return <Covers covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nexport default withRouter(CategoryCovers);\r\n","import styled from \"../styles/styled\";\r\n\r\nconst Fader = styled.div<{ isLoading: boolean }>`\r\n  opacity: ${props => (props.isLoading ? \"0\" : \"1\")};\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n`;\r\n\r\nexport default Fader;\r\n","import styled from \"../styles/styled\";\r\n\r\nconst Loader = styled.div<{ isLoading: boolean }>`\r\n  height: 5px;\r\n  left: 0;\r\n  position: absolute;\r\n  opacity: ${props => (props.isLoading ? \"1\" : \"0\")};\r\n  top: 0;\r\n  transition: ${props => (props.isLoading ? \"all 0\" : \"all 0.2s\")};\r\n  width: 100%;\r\n\r\n  &::before {\r\n    background: ${props => props.theme.foreground.dark};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    animation: transform 2s linear infinite;\r\n    background: ${props => props.theme.foreground.default};\r\n    content: \"\";\r\n    height: 100%;\r\n    position: absolute;\r\n    transform-origin: 0;\r\n    width: 100%;\r\n\r\n    @keyframes transform {\r\n      0% {\r\n        left: 0;\r\n        width: 0;\r\n      }\r\n      50% {\r\n        left: 0;\r\n        width: 100%;d\r\n      }\r\n      100% {\r\n        left: 100%;\r\n        width: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Loader;\r\n","import React, { ComponentType, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoading } from \"../reducers/loading\";\r\nimport Fader from \"./Fader\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction withReloader(WrappedComponent: ComponentType<any>) {\r\n  const WithReloaded = ({ isLoading, ...rest }: any) => {\r\n    const [prevIsLoading, setPrevIsLoading] = useState(false);\r\n    const [hasLoaded, setHasLoaded] = useState(false);\r\n\r\n    if (prevIsLoading !== isLoading) {\r\n      if (!isLoading) {\r\n        setHasLoaded(true);\r\n      }\r\n      setPrevIsLoading(isLoading);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Loader isLoading={!hasLoaded} />\r\n        <Fader isLoading={!hasLoaded}>\r\n          <WrappedComponent {...rest} />\r\n        </Fader>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const mapState = (state: State) => ({\r\n    isLoading: selectIsLoading(state)\r\n  });\r\n\r\n  return connect(\r\n    mapState,\r\n    null\r\n  )(WithReloaded);\r\n}\r\n\r\nexport default withReloader;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Category } from \"../../types\";\r\nimport { getCategories } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategories } from \"../../reducers/browse\";\r\nimport CategoryCovers from \"../covers/CategoryCovers\";\r\nimport withReloader from \"../withReloader\";\r\n\r\ninterface Props {\r\n  categories: Category[];\r\n  getCategories: () => void;\r\n}\r\n\r\nfunction Categories({ categories, getCategories }: Props) {\r\n  useEffect(getCategories, []);\r\n\r\n  return <CategoryCovers categories={categories} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  categories: selectCategories(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getCategories: getCategories\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(withReloader(Categories));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist } from \"../../types\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport Covers, { Cover } from \"./Covers\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectAlbumArtists } from \"../../reducers/albums\";\r\n\r\nfunction getCovers(\r\n  albums: Album[],\r\n  selectAlbumArtists: (albumId: string) => Artist[]\r\n): Cover[] {\r\n  return albums.map(album => {\r\n    const artists = selectAlbumArtists(album.id);\r\n    return {\r\n      id: album.id,\r\n      image: getImageSource(album),\r\n      title: album.name,\r\n      subTitle: getArtistNames(artists)\r\n    };\r\n  });\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  albums: Album[];\r\n  selectAbumArtists: (albumId: string) => Artist[];\r\n}\r\n\r\nfunction AlbumCovers({ history, albums, selectAbumArtists }: Props) {\r\n  function handleClick(albumId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/albums/${albumId}`);\r\n  }\r\n\r\n  const covers = getCovers(albums, selectAbumArtists);\r\n  return <Covers covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nconst mapDispatch = (state: State) => ({\r\n  selectAbumArtists: selectAlbumArtists(state)\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapDispatch,\r\n    null\r\n  )(AlbumCovers)\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Album } from \"../../types\";\r\nimport { getNewReleases } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectNewReleases } from \"../../reducers/browse\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport withReloader from \"../withReloader\";\r\n\r\ninterface Props {\r\n  albums: Album[];\r\n  getAlbums: () => void;\r\n}\r\n\r\nfunction NewReleases({ albums, getAlbums }: Props) {\r\n  useEffect(getAlbums, []);\r\n\r\n  return <AlbumCovers albums={albums} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  albums: selectNewReleases(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getAlbums: getNewReleases\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(withReloader(NewReleases));\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport Covers, { Cover } from \"./Covers\";\r\n\r\nfunction getCovers(playlists: Playlist[]): Cover[] {\r\n  return playlists.map(playlist => ({\r\n    id: playlist.id,\r\n    image: getImageSource(playlist),\r\n    title: playlist.name,\r\n    subTitle: playlist.owner.display_name\r\n  }));\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  playlists: Playlist[];\r\n}\r\n\r\nfunction PlayistCovers({ history, playlists }: Props) {\r\n  function handleClick(playlistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/playlists/${playlistId}`);\r\n  }\r\n\r\n  const covers = getCovers(playlists);\r\n  return <Covers covers={covers} onClick={handleClick} />;\r\n}\r\n\r\nexport default withRouter(PlayistCovers);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Playlist } from \"../../types\";\r\nimport { getFeaturedPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectFeaturedPlaylists } from \"../../reducers/browse\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withReloader from \"../withReloader\";\r\n\r\ninterface Props {\r\n  playlists: Playlist[];\r\n  getPlaylists: () => void;\r\n}\r\n\r\nfunction FeaturedPlaylists({ playlists, getPlaylists }: Props) {\r\n  useEffect(getPlaylists, []);\r\n\r\n  return <PlaylistCovers playlists={playlists} />;\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  playlists: selectFeaturedPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  getPlaylists: getFeaturedPlaylists\r\n};\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(withReloader(FeaturedPlaylists));\r\n","import React from \"react\";\r\nimport {\r\n  RouteComponentProps,\r\n  NavLink,\r\n  Route,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport Categories from \"./Categories\";\r\nimport NewReleases from \"./NewReleases\";\r\nimport FeaturedPlaylists from \"./FeaturedPlaylists\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: ${props => props.theme.font.size.medium};\r\n  justify-content: center;\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  top: -20px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    margin-bottom: 25px;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  align-items: center;\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: flex;\r\n  height: 50px;\r\n  justify-content: center;\r\n  padding: 0 25px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &.active::after {\r\n    background: ${props => props.theme.primaryLight};\r\n    bottom: 0;\r\n    content: \"\";\r\n    height: 2.5px;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, 0);\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nconst links = [\r\n  {\r\n    url: \"categories\",\r\n    label: \"Categories\"\r\n  },\r\n  {\r\n    url: \"new-releases\",\r\n    label: \"New Releases\"\r\n  },\r\n  {\r\n    url: \"featured-playist\",\r\n    label: \"Featured Playlists\"\r\n  }\r\n];\r\n\r\nfunction Browse({ match }: RouteComponentProps) {\r\n  return (\r\n    <Wrapper>\r\n      <StyledList>\r\n        {links.map(link => (\r\n          <li key={link.url}>\r\n            <StyledNavLink to={`${match.url}/${link.url}`}>\r\n              {link.label}\r\n            </StyledNavLink>\r\n          </li>\r\n        ))}\r\n      </StyledList>\r\n\r\n      <DefaultRoute from={`${match.path}`} to={`${match.path}/categories`} />\r\n      <Route exact path={`${match.path}/categories`} component={Categories} />\r\n      <Route path={`${match.path}/new-releases`} component={NewReleases} />\r\n      <Route\r\n        path={`${match.path}/featured-playist`}\r\n        component={FeaturedPlaylists}\r\n      />\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default withRouter(Browse);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { Category, Playlist } from \"../../types\";\r\nimport { getCategory, getCategoryPlaylists } from \"../../actions/browse\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectCategory, selectCategoryPlaylists } from \"../../reducers/browse\";\r\nimport { Heading } from \"../core\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withReloader from \"../withReloader\";\r\n\r\ninterface Params {\r\n  categoryId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  category?: Category;\r\n  playlists: Playlist[];\r\n  getCategory: (categoryId: string) => void;\r\n  getPlaylists: (categoryId: string) => void;\r\n}\r\n\r\nfunction CategoryPlaylists({\r\n  match,\r\n  category,\r\n  playlists,\r\n  getCategory,\r\n  getPlaylists\r\n}: Props) {\r\n  const effect = () => {\r\n    const { categoryId } = match.params;\r\n    if (!category) {\r\n      getCategory(categoryId);\r\n    }\r\n    getPlaylists(categoryId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  return (\r\n    <div>\r\n      <Heading>{category && category.name}</Heading>\r\n      <PlaylistCovers playlists={playlists} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, { match }: Props) => {\r\n  const categoryId = match.params.categoryId;\r\n\r\n  return {\r\n    category: selectCategory(state, categoryId),\r\n    playlists: selectCategoryPlaylists(state)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getCategory: (categoryId: string) => getCategory(categoryId),\r\n  getPlaylists: (categoryId: string) => getCategoryPlaylists(categoryId)\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(withReloader(CategoryPlaylists))\r\n);\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Artist } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport Covers, { Cover } from \"./Covers\";\r\n\r\nfunction getCovers(artists: Artist[]): Cover[] {\r\n  return artists.map(artist => ({\r\n    id: artist.id,\r\n    image: getImageSource(artist),\r\n    title: artist.name\r\n  }));\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  artists: Artist[];\r\n}\r\n\r\nfunction ArtistCovers({ history, artists }: Props) {\r\n  function handleClick(artistId: string) {\r\n    history.push(`${process.env.PUBLIC_URL}/artists/${artistId}`);\r\n  }\r\n\r\n  const covers = getCovers(artists);\r\n  return (\r\n    <Covers covers={covers} shape={ImageShape.Round} onClick={handleClick} />\r\n  );\r\n}\r\n\r\nexport default withRouter(ArtistCovers);\r\n","import React, { ComponentType } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { State } from \"../reducers\";\r\nimport { selectIsLoading } from \"../reducers/loading\";\r\nimport Fader from \"./Fader\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst withLoader = (WrappedComponent: ComponentType<any>) => {\r\n  const WithLoader = ({ isLoading, ...rest }: any) => {\r\n    return (\r\n      <>\r\n        <Loader isLoading={isLoading} />\r\n        <Fader isLoading={isLoading}>\r\n          <WrappedComponent {...rest} />\r\n        </Fader>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const mapState = (state: State) => ({\r\n    isLoading: selectIsLoading(state)\r\n  });\r\n\r\n  return connect(\r\n    mapState,\r\n    null\r\n  )(WithLoader);\r\n};\r\n\r\nexport default withLoader;\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { Heading } from \"../core\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport PlaylistCovers from \"../covers/PlaylistCovers\";\r\nimport withLoader from \"../withLoader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nfunction Artists({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <>\r\n      {artists.length > 0 && (\r\n        <Section>\r\n          <Heading>Artists</Heading>\r\n          <ArtistCovers artists={artists} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Albums({ albums }: { albums: Album[] }) {\r\n  return (\r\n    <>\r\n      {albums.length > 0 && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Playlists({ playlists }: { playlists: Playlist[] }) {\r\n  return (\r\n    <>\r\n      {playlists.length > 0 && (\r\n        <Section>\r\n          <Heading>Playlists</Heading>\r\n          <PlaylistCovers playlists={playlists} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  artists: Artist[];\r\n  albums: Album[];\r\n  playlists: Playlist[];\r\n}\r\n\r\nfunction Results({ artists, albums, playlists }: Props) {\r\n  return (\r\n    <>\r\n      <Artists artists={artists} />\r\n      <Albums albums={albums} />\r\n      <Playlists playlists={playlists} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withLoader(Results);\r\n","import _ from \"lodash\";\r\nimport React, { useState, ChangeEvent, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Playlist } from \"../../types\";\r\nimport { search } from \"../../actions/search\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoading } from \"../../reducers/loading\";\r\nimport {\r\n  selectAlbums,\r\n  selectArtists,\r\n  selectPlaylists\r\n} from \"../../reducers/search\";\r\nimport Results from \"./Results\";\r\nimport { Heading } from \"../core\";\r\n\r\nconst StyledInput = styled.input`\r\n  background: ${props => props.theme.background.light}\r\n  border: none;\r\n  border-radius: 25px;\r\n  caret-color: ${props => props.theme.primaryLight}\r\n  color: ${props => props.theme.foreground.default}\r\n  font-size: ${props => props.theme.font.size.extraLarge}\r\n  font-weight: ${props => props.theme.font.weight.light}\r\n  height: 50px;\r\n  margin: 0 0 25px 0;\r\n  padding: 0 25px;\r\n  width: calc(100% - 50px);\r\n`;\r\n\r\ninterface Params {\r\n  query: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  isLoading: boolean;\r\n  albums: Album[];\r\n  artists: Artist[];\r\n  playlists: Playlist[];\r\n  search: (query: string) => void;\r\n}\r\n\r\nlet debounced: (query: string) => void;\r\n\r\nfunction Search({\r\n  history,\r\n  match,\r\n  isLoading,\r\n  albums,\r\n  artists,\r\n  playlists,\r\n  search\r\n}: Props) {\r\n  const { query } = match.params;\r\n  const [value, setValue] = useState(query || \"\");\r\n\r\n  const effect = () => {\r\n    search(value);\r\n    debounced = _.debounce((query: string) => {\r\n      history.push(`${process.env.PUBLIC_URL}/search${query && \"/\"}${query}`);\r\n      search(query);\r\n    }, 500);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { value } = event.target;\r\n    setValue(value);\r\n    debounced(value);\r\n  }\r\n\r\n  const hasResults =\r\n    isLoading || artists.length || albums.length || playlists.length;\r\n  return (\r\n    <>\r\n      <StyledInput\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search...\"\r\n        autoFocus\r\n      />\r\n      {query &&\r\n        (hasResults ? (\r\n          <Results\r\n            isLoading={isLoading}\r\n            artists={artists}\r\n            albums={albums}\r\n            playlists={playlists}\r\n          />\r\n        ) : (\r\n          <Heading>No Results found for '{query}'.</Heading>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State) => ({\r\n  isLoading: selectIsLoading(state),\r\n  albums: selectAlbums(state),\r\n  artists: selectArtists(state),\r\n  playlists: selectPlaylists(state)\r\n});\r\n\r\nconst mapDispatch = {\r\n  search\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapState,\r\n    mapDispatch\r\n  )(Search)\r\n);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Button, Image, Text } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-shrink: 1;\r\n  justify-content: center;\r\n  margin: 0 0 25px 0;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    margin: 0 25px 0 0;\r\n  }\r\n`;\r\n\r\nconst length = 300;\r\nconst StyledImage = styled(Image)`\r\n  box-shadow: 0 0 4px 2px rgba(0, 0, 0, 0.2);\r\n  font-size: ${length / 4}px;\r\n  height: ${length / 2}px;\r\n  line-height: ${length / 2}px;\r\n  margin: 0 25px 0 0;\r\n  width: ${length / 2}px;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    font-size: ${length / 2}px;\r\n    height: ${length}px;\r\n    line-height: ${length}px;\r\n    margin: 0 0 25px 0;\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-size: ${props => props.theme.font.size.extraLarge};\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    font-size: ${props => props.theme.font.size.extraExtraLarge};\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  display: inline-block;\r\n  font-size: ${props => props.theme.font.size.medium};\r\n  font-weight: ${props => props.theme.font.weight.light};\r\n  margin-top: 6.25px;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    font-size: ${props => props.theme.font.size.large};\r\n    width: ${length}px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 25px;\r\n  width: 100px;\r\n`;\r\n\r\ninterface Props {\r\n  imageSource?: string;\r\n  imageShape: ImageShape;\r\n  title: string;\r\n  subTitle?: string;\r\n  canPlay: boolean;\r\n  isPlaying: boolean;\r\n  onToggle: () => void;\r\n}\r\n\r\nfunction Header({\r\n  imageSource,\r\n  imageShape,\r\n  title,\r\n  subTitle,\r\n  canPlay,\r\n  isPlaying,\r\n  onToggle\r\n}: Props) {\r\n  function handleClick() {\r\n    onToggle();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledImage source={imageSource} shape={imageShape} />\r\n      <Div>\r\n        <Title>{title}</Title>\r\n        {subTitle && <SubTitle>{subTitle}</SubTitle>}\r\n        <StyledButton disabled={!canPlay} onClick={handleClick}>\r\n          {isPlaying ? \"Pause\" : \"Play\"}\r\n        </StyledButton>\r\n      </Div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  imageShape: ImageShape.Square\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Artist, Track } from \"../../types\";\r\nimport { getArtistNames } from \"../../utils\";\r\nimport { State } from \"../../reducers\";\r\nimport { selectIsLoaded, selectIsPlaying } from \"../../reducers/player\";\r\nimport { Icon, IconType, Text } from \"../core\";\r\nimport ButtonBase from \"../core/ButtonBase\";\r\nimport { selectTrackArtists } from \"../../reducers/tracks\";\r\n\r\nconst StyledButton = styled(ButtonBase)<{ isLoaded: boolean }>`\r\n  align-items: center;\r\n  border-radius: 40px;\r\n  ${props => props.isLoaded && \"color: \" + props.theme.primaryLight};\r\n  display: flex;\r\n  padding: 12.5px 25px;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    color: ${props => props.theme.foreground.default};\r\n  }\r\n\r\n  &&:hover {\r\n    ${props => props.isLoaded && \"color: \" + props.theme.primaryLight};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)<{ isLoaded?: boolean; isHover?: boolean }>`\r\n  color: ${props =>\r\n    props.isLoaded ? props.theme.primaryLight : props.theme.foreground.dark};\r\n  display: ${props => (props.isHover ? \"none\" : \"block\")};\r\n  margin-right: 12.5px;\r\n\r\n  ${StyledButton}:not(:disabled):hover & {\r\n    color: ${props =>\r\n      props.isLoaded\r\n        ? props.theme.primaryLight\r\n        : props.theme.foreground.default};\r\n    display: ${props => (props.isHover ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nconst Infos = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  font-weight: ${props => props.theme.font.weight.light};\r\n  height: 100%;\r\n  margin-right: 12.5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled(Text)`\r\n  font-weight: ${props => props.theme.font.weight.normal}\r\n  margin-bottom: 6.25px;\r\n  text-align: left;\r\n`;\r\n\r\nconst SubTitle = styled(Text)`\r\n  color: ${props => props.theme.foreground.dark};\r\n  text-align: left;\r\n`;\r\n\r\nconst Duration = styled.span`\r\n  color: ${props => props.theme.foreground.dark};\r\n  flex-shrink: 0;\r\n`;\r\n\r\ninterface OwnProps {\r\n  track: Track;\r\n  onToggle: (trackId: string) => void;\r\n}\r\n\r\ninterface Props extends OwnProps {\r\n  artists: Artist[];\r\n  isDisabled: boolean;\r\n  isLoaded: boolean;\r\n  isPlaying: boolean;\r\n}\r\n\r\nfunction TrackItem({\r\n  track,\r\n  artists,\r\n  isDisabled,\r\n  isLoaded,\r\n  isPlaying,\r\n  onToggle\r\n}: Props) {\r\n  function renderIcon() {\r\n    return isDisabled ? (\r\n      <StyledIcon type={IconType.MusicOff} />\r\n    ) : (\r\n      <>\r\n        <StyledIcon\r\n          type={isPlaying ? IconType.VolumeUp : IconType.MusicNote}\r\n          isLoaded={isLoaded}\r\n          isHover={false}\r\n        />\r\n        <StyledIcon\r\n          type={isPlaying ? IconType.Pause : IconType.PlayArrow}\r\n          isLoaded={isLoaded}\r\n          isHover={true}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderArtist() {\r\n    return <SubTitle>{getArtistNames(artists)}</SubTitle>;\r\n  }\r\n\r\n  function renderDuration() {\r\n    let seconds = track.duration_ms / 1000;\r\n    const minutes = Math.floor(seconds / 60);\r\n    seconds = Math.floor(seconds % 60);\r\n\r\n    return (\r\n      <Duration>{`${minutes}:${\r\n        seconds < 10 ? \"0\" + seconds : seconds\r\n      }`}</Duration>\r\n    );\r\n  }\r\n\r\n  function handleClick() {\r\n    onToggle(track.id);\r\n  }\r\n\r\n  return (\r\n    <StyledButton\r\n      onClick={handleClick}\r\n      disabled={isDisabled}\r\n      isLoaded={isLoaded}\r\n    >\r\n      {renderIcon()}\r\n\r\n      <Infos>\r\n        <Title>{track.name}</Title>\r\n        {renderArtist()}\r\n      </Infos>\r\n\r\n      {renderDuration()}\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nfunction isDisabled(track: Track) {\r\n  return !track.preview_url;\r\n}\r\n\r\nconst mapState = (state: State, { track }: OwnProps) => ({\r\n  artists: selectTrackArtists(state, track.id),\r\n  isDisabled: isDisabled(track),\r\n  isLoaded: selectIsLoaded(state)(track.id),\r\n  isPlaying: selectIsPlaying(state, track.id)\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  null\r\n)(TrackItem);\r\n","import React from \"react\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Track } from \"../../types\";\r\nimport TrackItem from \"./TrackItem\";\r\n\r\nconst StyledList = styled.ul`\r\n  flex-grow: 1;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst StyledItem = styled.li`\r\n  margin-bottom: 6.25px;\r\n`;\r\n\r\ninterface Props {\r\n  tracks: Track[];\r\n  onToggle: (trackId: string) => void;\r\n}\r\n\r\nfunction TrackList({ tracks, onToggle }: Props) {\r\n  return (\r\n    <StyledList>\r\n      {tracks.map(track => (\r\n        <StyledItem key={track.id}>\r\n          <TrackItem track={track} onToggle={onToggle} />\r\n        </StyledItem>\r\n      ))}\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default TrackList;\r\n","import styled from \"../../styles/styled\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.small}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Playlist, Track } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getPlaylist } from \"../../actions/playlists\";\r\nimport { loadToggle } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectPlaylist,\r\n  selectPlaylistTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/playlists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withReloader from \"../withReloader\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\ninterface Params {\r\n  playlistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  playlist?: Playlist;\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getPlaylist: (playlistId: string) => void;\r\n  loadToggle: (collectionId: string, trackId?: string) => void;\r\n}\r\n\r\nfunction PlaylistDetails({\r\n  match,\r\n  playlist,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getPlaylist,\r\n  loadToggle\r\n}: Props) {\r\n  const { playlistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getPlaylist(playlistId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadToggle(playlistId, trackId);\r\n  }\r\n\r\n  return playlist ? (\r\n    <Wrapper>\r\n      <Header\r\n        imageSource={getImageSource(playlist)}\r\n        title={playlist.name}\r\n        subTitle={playlist.owner.display_name}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        onToggle={handleToggle}\r\n      />\r\n      <TrackList tracks={tracks} onToggle={handleToggle} />\r\n    </Wrapper>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { playlistId } = match.params;\r\n  return {\r\n    playlist: selectPlaylist(state, playlistId),\r\n    tracks: selectPlaylistTracks(state, playlistId),\r\n    isPlayable: selectIsPlayable(state, playlistId),\r\n    isPlaying: selectIsPlaying(state, playlistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getPlaylist,\r\n  loadToggle\r\n};\r\n\r\nexport default withReloader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(PlaylistDetails)\r\n  )\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { Album, Artist, Track } from \"../../types\";\r\nimport { getAlbum } from \"../../actions/albums\";\r\nimport { loadToggle } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectAlbum,\r\n  selectAlbumArtists,\r\n  selectAlbumTracks,\r\n  selectIsPlayable\r\n} from \"../../reducers/albums\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport { getArtistNames, getImageSource } from \"../../utils\";\r\nimport Collection from \"./Wrapper\";\r\nimport Header from \"./Header\";\r\nimport TrackList from \"./TrackList\";\r\nimport withReloader from \"../withReloader\";\r\n\r\ninterface Params {\r\n  albumId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  album?: Album;\r\n  artists: Artist[];\r\n  tracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getAlbum: (albumId: string) => void;\r\n  loadToggle: (collectionId: string, trackId?: string) => void;\r\n}\r\n\r\nfunction AlbumDetails({\r\n  match,\r\n  album,\r\n  artists,\r\n  tracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getAlbum,\r\n  loadToggle\r\n}: Props) {\r\n  const { albumId } = match.params;\r\n\r\n  const effect = () => {\r\n    getAlbum(albumId);\r\n  };\r\n  useEffect(effect, []);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadToggle(albumId, trackId);\r\n  }\r\n\r\n  return album ? (\r\n    <Collection>\r\n      <Header\r\n        imageSource={getImageSource(album)}\r\n        title={album.name}\r\n        subTitle={getArtistNames(artists)}\r\n        canPlay={isPlayable}\r\n        isPlaying={isPlaying}\r\n        onToggle={handleToggle}\r\n      />\r\n      <TrackList tracks={tracks} onToggle={handleToggle} />\r\n    </Collection>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { albumId } = match.params;\r\n  return {\r\n    album: selectAlbum(state, albumId),\r\n    artists: selectAlbumArtists(state)(albumId),\r\n    tracks: selectAlbumTracks(state, albumId),\r\n    isPlayable: selectIsPlayable(state, albumId),\r\n    isPlaying: selectIsPlaying(state, albumId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getAlbum,\r\n  loadToggle\r\n};\r\n\r\nexport default withReloader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(AlbumDetails)\r\n  )\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport styled from \"../../styles/styled\";\r\nimport { Album, Artist, Track } from \"../../types\";\r\nimport { getImageSource } from \"../../utils\";\r\nimport { getFullArtist } from \"../../actions/artists\";\r\nimport { loadToggle } from \"../../actions/player\";\r\nimport { State } from \"../../reducers\";\r\nimport {\r\n  selectArtist,\r\n  selectIsPlayable,\r\n  selectArtistAlbums,\r\n  selectArtistTopTracks,\r\n  selectArtistRelatedArtists\r\n} from \"../../reducers/artists\";\r\nimport { selectIsPlaying } from \"../../reducers/player\";\r\nimport TrackList from \"./TrackList\";\r\nimport AlbumCovers from \"../covers/AlbumCovers\";\r\nimport ArtistCovers from \"../covers/ArtistCovers\";\r\nimport { Heading } from \"../core\";\r\nimport { ImageShape } from \"../core/Image\";\r\nimport Header from \"./Header\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport withReloader from \"../withReloader\";\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nfunction TopTracks({\r\n  tracks,\r\n  onToggle\r\n}: {\r\n  tracks: Track[];\r\n  onToggle: (trackId: string) => void;\r\n}) {\r\n  return <>{tracks && <TrackList tracks={tracks} onToggle={onToggle} />}</>;\r\n}\r\n\r\nfunction Albums({ albums }: { albums: Album[] }) {\r\n  return (\r\n    <>\r\n      {albums && !!albums.length && (\r\n        <Section>\r\n          <Heading>Albums & Singles</Heading>\r\n          <AlbumCovers albums={albums} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction RelatedArtists({ artists }: { artists: Artist[] }) {\r\n  return (\r\n    <>\r\n      {artists && !!artists.length && (\r\n        <Section>\r\n          <Heading>Related Artists</Heading>\r\n          <ArtistCovers artists={artists} />\r\n        </Section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Params {\r\n  artistId: string;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<Params> {\r\n  artist?: Artist;\r\n  albums: Album[];\r\n  relatedArtists: Artist[];\r\n  topTracks: Track[];\r\n  isPlayable: boolean;\r\n  isPlaying: boolean;\r\n  getFullArtist: (artistId: string) => void;\r\n  loadToggle: (artistId: string, trackId?: string) => void;\r\n}\r\n\r\nfunction ArtistDetails({\r\n  match,\r\n  artist,\r\n  albums,\r\n  relatedArtists,\r\n  topTracks,\r\n  isPlayable,\r\n  isPlaying,\r\n  getFullArtist,\r\n  loadToggle\r\n}: Props) {\r\n  const { artistId } = match.params;\r\n\r\n  const effect = () => {\r\n    getFullArtist(artistId);\r\n  };\r\n  useEffect(effect, [artistId]);\r\n\r\n  function handleToggle(trackId?: string) {\r\n    loadToggle(artistId, trackId);\r\n  }\r\n\r\n  return artist ? (\r\n    <>\r\n      <Wrapper>\r\n        <Header\r\n          imageSource={getImageSource(artist)}\r\n          imageShape={ImageShape.Round}\r\n          title={artist.name}\r\n          canPlay={isPlayable}\r\n          isPlaying={isPlaying}\r\n          onToggle={handleToggle}\r\n        />\r\n        <TopTracks tracks={topTracks} onToggle={handleToggle} />\r\n      </Wrapper>\r\n      <Albums albums={albums} />\r\n      <RelatedArtists artists={relatedArtists} />\r\n    </>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nconst mapState = (state: State, ownProps: Props) => {\r\n  const { match } = ownProps;\r\n  const { artistId } = match.params;\r\n  return {\r\n    artist: selectArtist(state, artistId),\r\n    albums: selectArtistAlbums(state, artistId),\r\n    relatedArtists: selectArtistRelatedArtists(state, artistId),\r\n    topTracks: selectArtistTopTracks(state, artistId),\r\n    isPlayable: selectIsPlayable(state, artistId),\r\n    isPlaying: selectIsPlaying(state, artistId)\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  getFullArtist,\r\n  loadToggle\r\n};\r\n\r\nexport default withReloader(\r\n  withRouter(\r\n    connect(\r\n      mapState,\r\n      mapDispatch\r\n    )(ArtistDetails)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport DefaultRoute from \"../DefaultRoute\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport LogIn from \"./Login\";\r\nimport Browse from \"../browse/Browse\";\r\nimport CategoryPlaylists from \"../browse/CategoryPlaylists\";\r\nimport Search from \"../search/Search\";\r\nimport PlaylistDetails from \"../details/PlaylistDetails\";\r\nimport AlbumDetails from \"../details/AlbumDetails\";\r\nimport ArtistDetails from \"../details/ArtistDetails\";\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding: 25px;\r\n  position: relative;\r\n`;\r\n\r\nconst Routes = () => {\r\n  const publicUrl = process.env.PUBLIC_URL;\r\n  return (\r\n    <Wrapper>\r\n      <DefaultRoute from={`${publicUrl}/`} to={`${publicUrl}/browse`} />\r\n      <Route path={`${publicUrl}/login`} component={LogIn} />\r\n      <PrivateRoute path={`${publicUrl}/browse`} component={Browse} />\r\n      <PrivateRoute path={`${publicUrl}/search/:query?`} component={Search} />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/categories/:categoryId/playlists`}\r\n        component={CategoryPlaylists}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/playlists/:playlistId`}\r\n        component={PlaylistDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/albums/:albumId`}\r\n        component={AlbumDetails}\r\n      />\r\n      <PrivateRoute\r\n        path={`${publicUrl}/artists/:artistId`}\r\n        component={ArtistDetails}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport styled from \"../../styles/styled\";\r\nimport Header from \"./Header\";\r\nimport Menu from \"./Menu\";\r\nimport Player from \"../player/Player\";\r\nimport Routes from \"./Routes\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledHeader = styled(Header)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n\r\n  @media (min-width: ${({ theme }) => theme.breackpoints.extraSmall}px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledPlayer = styled(Player)`\r\n  flex-shrink: 0;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Wrapper>\r\n        <StyledHeader />\r\n\r\n        <Body>\r\n          <Menu />\r\n          <Routes />\r\n        </Body>\r\n\r\n        <StyledPlayer />\r\n      </Wrapper>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export interface Theme {\r\n  background: {\r\n    light: string;\r\n    default: string;\r\n    dark: string;\r\n    hover: string;\r\n    active: string;\r\n  };\r\n  breackpoints: {\r\n    extraSmall: number;\r\n    small: number;\r\n  };\r\n  font: {\r\n    size: {\r\n      small: string;\r\n      medium: string;\r\n      large: string;\r\n      extraLarge: string;\r\n      extraExtraLarge: string;\r\n    };\r\n    weight: {\r\n      light: number;\r\n      normal: number;\r\n      bold: number;\r\n    };\r\n  };\r\n  foreground: {\r\n    default: string;\r\n    dark: string;\r\n    darker: string;\r\n  };\r\n  primaryLight: string;\r\n  primary: string;\r\n  filter: {\r\n    darken: string;\r\n  };\r\n}\r\n\r\nexport const theme: Theme = {\r\n  background: {\r\n    light: \"#303030\",\r\n    default: \"#202020\",\r\n    dark: \"#101010\",\r\n    hover: \"rgba(255, 255, 255, 0.1)\",\r\n    active: \"rgba(255, 255, 255, 0.1)\"\r\n  },\r\n  breackpoints: {\r\n    extraSmall: 480,\r\n    small: 960\r\n  },\r\n  font: {\r\n    size: {\r\n      small: \"12px\",\r\n      medium: \"16px\",\r\n      large: \"20px\",\r\n      extraLarge: \"24px\",\r\n      extraExtraLarge: \"34px\"\r\n    },\r\n    weight: {\r\n      light: 300,\r\n      normal: 400,\r\n      bold: 500\r\n    }\r\n  },\r\n  foreground: {\r\n    default: \"#ffffff\",\r\n    dark: \"rgba(255, 255, 255, 0.6)\",\r\n    darker: \"rgba(255, 255, 255, 0.3)\"\r\n  },\r\n  primary: \"#1db954\",\r\n  primaryLight: \"#1ed760\",\r\n  filter: {\r\n    darken: \"brightness(0.5)\"\r\n  }\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\n\r\nexport default createGlobalStyle`\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body, h1, h2, button, ul {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    background: ${theme.background.default}; \r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.font.size.medium};\r\n    font-weight: ${theme.font.weight.normal};\r\n    user-select: none;\r\n  }\r\n\r\n  a {\r\n    color: ${theme.foreground.default};\r\n    text-decoration: none;\r\n  }\r\n\r\n  button {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${theme.foreground.default};\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-size: ${theme.font.size.medium};\r\n    font-weight: ${theme.font.weight.normal};\r\n\r\n    &:not(:disabled) {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  button, input {\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { ThemeProvider } from \"./styles/styled\";\r\nimport rootReducer from \"./reducers\";\r\nimport App from \"./components/layout/App\";\r\nimport { checkRedirection, initAuthorization } from \"./utils/authorization\";\r\nimport fetchMiddleware from \"./middlewares/fetchMiddleware\";\r\nimport { theme } from \"./styles/theme\";\r\nimport GlobalStyle from \"./styles/global\";\r\n\r\ncheckRedirection();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware, fetchMiddleware))\r\n);\r\ninitAuthorization(store.dispatch);\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { Dispatch } from \"redux\";\r\nimport { normalize } from \"normalizr\";\r\nimport { authorizedFetch } from \"../utils/authorization\";\r\n\r\nexport default () => (next: Dispatch) => (action: any) => {\r\n  const { types, path, schema, data } = action;\r\n\r\n  if (types) {\r\n    const [requestType, successType, failureType] = types;\r\n    next({ type: requestType });\r\n\r\n    return authorizedFetch(`${process.env.REACT_APP_BASE_URL}/${path}`).then(\r\n      response =>\r\n        response.json().then(json => {\r\n          if (response.ok) {\r\n            const payload = schema ? normalize(json, schema).entities : json;\r\n            next({\r\n              type: successType,\r\n              payload: data ? { ...payload, ...data } : payload\r\n            });\r\n          } else {\r\n            next({ type: failureType, payload: json.error });\r\n          }\r\n        })\r\n    );\r\n  } else {\r\n    next(action);\r\n  }\r\n};\r\n"],"sourceRoot":""}